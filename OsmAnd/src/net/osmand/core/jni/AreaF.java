/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.osmand.core.jni;

public class AreaF {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AreaF(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AreaF obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_AreaF(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public AreaF() {
    this(OsmAndCoreJNI.new_AreaF__SWIG_0(), true);
  }

  public AreaF(float t, float l, float b, float r) {
    this(OsmAndCoreJNI.new_AreaF__SWIG_1(t, l, b, r), true);
  }

  public AreaF(PointF tl, PointF br) {
    this(OsmAndCoreJNI.new_AreaF__SWIG_2(PointF.getCPtr(tl), tl, PointF.getCPtr(br), br), true);
  }

  public AreaF(AreaF that) {
    this(OsmAndCoreJNI.new_AreaF__SWIG_3(AreaF.getCPtr(that), that), true);
  }

  public void setTopLeft(PointF value) {
    OsmAndCoreJNI.AreaF_topLeft_set(swigCPtr, this, PointF.getCPtr(value), value);
  }

  public PointF getTopLeft() {
    long cPtr = OsmAndCoreJNI.AreaF_topLeft_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PointF(cPtr, false);
  }

  public void setBottomRight(PointF value) {
    OsmAndCoreJNI.AreaF_bottomRight_set(swigCPtr, this, PointF.getCPtr(value), value);
  }

  public PointF getBottomRight() {
    long cPtr = OsmAndCoreJNI.AreaF_bottomRight_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PointF(cPtr, false);
  }

  public boolean contains(float x, float y) {
    return OsmAndCoreJNI.AreaF_contains__SWIG_0(swigCPtr, this, x, y);
  }

  public boolean contains(PointF p) {
    return OsmAndCoreJNI.AreaF_contains__SWIG_1(swigCPtr, this, PointF.getCPtr(p), p);
  }

  public boolean contains(float t, float l, float b, float r) {
    return OsmAndCoreJNI.AreaF_contains__SWIG_2(swigCPtr, this, t, l, b, r);
  }

  public boolean contains(AreaF that) {
    return OsmAndCoreJNI.AreaF_contains__SWIG_3(swigCPtr, this, AreaF.getCPtr(that), that);
  }

  public boolean intersects(float t, float l, float b, float r) {
    return OsmAndCoreJNI.AreaF_intersects__SWIG_0(swigCPtr, this, t, l, b, r);
  }

  public boolean intersects(AreaF that) {
    return OsmAndCoreJNI.AreaF_intersects__SWIG_1(swigCPtr, this, AreaF.getCPtr(that), that);
  }

  public boolean contains(OOBBF that) {
    return OsmAndCoreJNI.AreaF_contains__SWIG_4(swigCPtr, this, OOBBF.getCPtr(that), that);
  }

  public boolean intersects(OOBBF that) {
    return OsmAndCoreJNI.AreaF_intersects__SWIG_2(swigCPtr, this, OOBBF.getCPtr(that), that);
  }

  public float width() {
    return OsmAndCoreJNI.AreaF_width(swigCPtr, this);
  }

  public float height() {
    return OsmAndCoreJNI.AreaF_height(swigCPtr, this);
  }

  public PointF center() {
    return new PointF(OsmAndCoreJNI.AreaF_center(swigCPtr, this), true);
  }

  public PointF topRight() {
    return new PointF(OsmAndCoreJNI.AreaF_topRight(swigCPtr, this), true);
  }

  public PointF bottomLeft() {
    return new PointF(OsmAndCoreJNI.AreaF_bottomLeft(swigCPtr, this), true);
  }

  public AreaF getQuadrant(Quadrant quadrant) {
    return new AreaF(OsmAndCoreJNI.AreaF_getQuadrant(swigCPtr, this, quadrant.swigValue()), true);
  }

  public AreaF getEnlargedToInclude(PointF p) {
    return new AreaF(OsmAndCoreJNI.AreaF_getEnlargedToInclude(swigCPtr, this, PointF.getCPtr(p), p), true);
  }

  public AreaF getEnlargedBy(PointF delta) {
    return new AreaF(OsmAndCoreJNI.AreaF_getEnlargedBy__SWIG_0(swigCPtr, this, PointF.getCPtr(delta), delta), true);
  }

  public AreaF getEnlargedBy(float dt, float dl, float db, float dr) {
    return new AreaF(OsmAndCoreJNI.AreaF_getEnlargedBy__SWIG_1(swigCPtr, this, dt, dl, db, dr), true);
  }

  public static AreaF largest() {
    return new AreaF(OsmAndCoreJNI.AreaF_largest(), true);
  }

  public static AreaF fromCenterAndSize(float cx, float cy, float width, float height) {
    return new AreaF(OsmAndCoreJNI.AreaF_fromCenterAndSize(cx, cy, width, height), true);
  }

}
