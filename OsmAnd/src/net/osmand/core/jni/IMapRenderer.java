/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.osmand.core.jni;

public class IMapRenderer {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected IMapRenderer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IMapRenderer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_IMapRenderer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapRendererSetupOptions getSetupOptions() {
    return new MapRendererSetupOptions(OsmAndCoreJNI.IMapRenderer_getSetupOptions(swigCPtr, this), true);
  }

  public boolean setup(MapRendererSetupOptions setupOptions) {
    return OsmAndCoreJNI.IMapRenderer_setup(swigCPtr, this, MapRendererSetupOptions.getCPtr(setupOptions), setupOptions);
  }

  public MapRendererConfiguration getConfiguration() {
    long cPtr = OsmAndCoreJNI.IMapRenderer_getConfiguration(swigCPtr, this);
    return (cPtr == 0) ? null : new MapRendererConfiguration(cPtr, true);
  }

  public void setConfiguration(MapRendererConfiguration configuration, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setConfiguration__SWIG_0(swigCPtr, this, MapRendererConfiguration.getCPtr(configuration), configuration, forcedUpdate);
  }

  public void setConfiguration(MapRendererConfiguration configuration) {
    OsmAndCoreJNI.IMapRenderer_setConfiguration__SWIG_1(swigCPtr, this, MapRendererConfiguration.getCPtr(configuration), configuration);
  }

  public boolean isRenderingInitialized() {
    return OsmAndCoreJNI.IMapRenderer_isRenderingInitialized(swigCPtr, this);
  }

  public boolean initializeRendering() {
    return OsmAndCoreJNI.IMapRenderer_initializeRendering(swigCPtr, this);
  }

  public boolean update() {
    return OsmAndCoreJNI.IMapRenderer_update(swigCPtr, this);
  }

  public boolean prepareFrame() {
    return OsmAndCoreJNI.IMapRenderer_prepareFrame(swigCPtr, this);
  }

  public boolean renderFrame() {
    return OsmAndCoreJNI.IMapRenderer_renderFrame(swigCPtr, this);
  }

  public boolean releaseRendering() {
    return OsmAndCoreJNI.IMapRenderer_releaseRendering(swigCPtr, this);
  }

  public boolean isIdle() {
    return OsmAndCoreJNI.IMapRenderer_isIdle(swigCPtr, this);
  }

  public String getNotIdleReason() {
    return OsmAndCoreJNI.IMapRenderer_getNotIdleReason(swigCPtr, this);
  }

  public boolean pauseGpuWorkerThread() {
    return OsmAndCoreJNI.IMapRenderer_pauseGpuWorkerThread(swigCPtr, this);
  }

  public boolean resumeGpuWorkerThread() {
    return OsmAndCoreJNI.IMapRenderer_resumeGpuWorkerThread(swigCPtr, this);
  }

  static public class IFramePreparedObserver {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected IFramePreparedObserver(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(IFramePreparedObserver obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_IMapRenderer_IFramePreparedObserver(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_change_ownership(this, swigCPtr, true);
    }
  
    public IFramePreparedObserver() {
      this(OsmAndCoreJNI.new_IMapRenderer_IFramePreparedObserver(), true);
      OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_director_connect(this, swigCPtr, swigCMemOwn, true);
    }
  
    public void method(IMapRenderer mapRenderer) {
      OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_method(swigCPtr, this, IMapRenderer.getCPtr(mapRenderer), mapRenderer);
    }
  
    public boolean attachTo(SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IFramePreparedObserver_t observable, SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IFramePreparedObserver_t__Tag tag) {
      return OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_attachTo(swigCPtr, this, SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IFramePreparedObserver_t.getCPtr(observable), SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IFramePreparedObserver_t__Tag.getCPtr(tag));
    }
  
    public SWIGTYPE_p_OsmAnd__IMapRenderer__FramePreparedObserver getBinding() {
      return new SWIGTYPE_p_OsmAnd__IMapRenderer__FramePreparedObserver(OsmAndCoreJNI.IMapRenderer_IFramePreparedObserver_getBinding(swigCPtr, this), true);
    }
  
  }

  public SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__FramePreparedObserver_t getFramePreparedObservable() {
    long cPtr = OsmAndCoreJNI.IMapRenderer_framePreparedObservable_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__FramePreparedObserver_t(cPtr, false);
  }

  public void reloadEverything() {
    OsmAndCoreJNI.IMapRenderer_reloadEverything(swigCPtr, this);
  }

  public MapRendererState getState() {
    return new MapRendererState(OsmAndCoreJNI.IMapRenderer_getState(swigCPtr, this), true);
  }

  public boolean isFrameInvalidated() {
    return OsmAndCoreJNI.IMapRenderer_isFrameInvalidated(swigCPtr, this);
  }

  public void forcedFrameInvalidate() {
    OsmAndCoreJNI.IMapRenderer_forcedFrameInvalidate(swigCPtr, this);
  }

  public void forcedGpuProcessingCycle() {
    OsmAndCoreJNI.IMapRenderer_forcedGpuProcessingCycle(swigCPtr, this);
  }

  public long getSymbolsCount() {
    return OsmAndCoreJNI.IMapRenderer_getSymbolsCount(swigCPtr, this);
  }

  public SWIGTYPE_p_QListT_std__shared_ptrT_OsmAnd__MapSymbol_const_t_t getSymbolsAt(PointI screenPoint) {
    return new SWIGTYPE_p_QListT_std__shared_ptrT_OsmAnd__MapSymbol_const_t_t(OsmAndCoreJNI.IMapRenderer_getSymbolsAt(swigCPtr, this, PointI.getCPtr(screenPoint), screenPoint), true);
  }

  public void setRasterLayerProvider(RasterMapLayerId layerId, IMapRasterBitmapTileProvider tileProvider, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setRasterLayerProvider__SWIG_0(swigCPtr, this, layerId.swigValue(), IMapRasterBitmapTileProvider.getCPtr(tileProvider), tileProvider, forcedUpdate);
  }

  public void setRasterLayerProvider(RasterMapLayerId layerId, IMapRasterBitmapTileProvider tileProvider) {
    OsmAndCoreJNI.IMapRenderer_setRasterLayerProvider__SWIG_1(swigCPtr, this, layerId.swigValue(), IMapRasterBitmapTileProvider.getCPtr(tileProvider), tileProvider);
  }

  public void resetRasterLayerProvider(RasterMapLayerId layerId, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_resetRasterLayerProvider__SWIG_0(swigCPtr, this, layerId.swigValue(), forcedUpdate);
  }

  public void resetRasterLayerProvider(RasterMapLayerId layerId) {
    OsmAndCoreJNI.IMapRenderer_resetRasterLayerProvider__SWIG_1(swigCPtr, this, layerId.swigValue());
  }

  public void setRasterLayerOpacity(RasterMapLayerId layerId, float opacity, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setRasterLayerOpacity__SWIG_0(swigCPtr, this, layerId.swigValue(), opacity, forcedUpdate);
  }

  public void setRasterLayerOpacity(RasterMapLayerId layerId, float opacity) {
    OsmAndCoreJNI.IMapRenderer_setRasterLayerOpacity__SWIG_1(swigCPtr, this, layerId.swigValue(), opacity);
  }

  public void setElevationDataProvider(IMapElevationDataProvider tileProvider, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setElevationDataProvider__SWIG_0(swigCPtr, this, IMapElevationDataProvider.getCPtr(tileProvider), tileProvider, forcedUpdate);
  }

  public void setElevationDataProvider(IMapElevationDataProvider tileProvider) {
    OsmAndCoreJNI.IMapRenderer_setElevationDataProvider__SWIG_1(swigCPtr, this, IMapElevationDataProvider.getCPtr(tileProvider), tileProvider);
  }

  public void resetElevationDataProvider(boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_resetElevationDataProvider__SWIG_0(swigCPtr, this, forcedUpdate);
  }

  public void resetElevationDataProvider() {
    OsmAndCoreJNI.IMapRenderer_resetElevationDataProvider__SWIG_1(swigCPtr, this);
  }

  public void setElevationDataScaleFactor(float factor, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setElevationDataScaleFactor__SWIG_0(swigCPtr, this, factor, forcedUpdate);
  }

  public void setElevationDataScaleFactor(float factor) {
    OsmAndCoreJNI.IMapRenderer_setElevationDataScaleFactor__SWIG_1(swigCPtr, this, factor);
  }

  public void addSymbolProvider(IMapDataProvider provider, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_addSymbolProvider__SWIG_0(swigCPtr, this, IMapDataProvider.getCPtr(provider), provider, forcedUpdate);
  }

  public void addSymbolProvider(IMapDataProvider provider) {
    OsmAndCoreJNI.IMapRenderer_addSymbolProvider__SWIG_1(swigCPtr, this, IMapDataProvider.getCPtr(provider), provider);
  }

  public void removeSymbolProvider(IMapDataProvider provider, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_removeSymbolProvider__SWIG_0(swigCPtr, this, IMapDataProvider.getCPtr(provider), provider, forcedUpdate);
  }

  public void removeSymbolProvider(IMapDataProvider provider) {
    OsmAndCoreJNI.IMapRenderer_removeSymbolProvider__SWIG_1(swigCPtr, this, IMapDataProvider.getCPtr(provider), provider);
  }

  public void removeAllSymbolProviders(boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_removeAllSymbolProviders__SWIG_0(swigCPtr, this, forcedUpdate);
  }

  public void removeAllSymbolProviders() {
    OsmAndCoreJNI.IMapRenderer_removeAllSymbolProviders__SWIG_1(swigCPtr, this);
  }

  public void setWindowSize(PointI windowSize, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setWindowSize__SWIG_0(swigCPtr, this, PointI.getCPtr(windowSize), windowSize, forcedUpdate);
  }

  public void setWindowSize(PointI windowSize) {
    OsmAndCoreJNI.IMapRenderer_setWindowSize__SWIG_1(swigCPtr, this, PointI.getCPtr(windowSize), windowSize);
  }

  public void setViewport(AreaI viewport, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setViewport__SWIG_0(swigCPtr, this, AreaI.getCPtr(viewport), viewport, forcedUpdate);
  }

  public void setViewport(AreaI viewport) {
    OsmAndCoreJNI.IMapRenderer_setViewport__SWIG_1(swigCPtr, this, AreaI.getCPtr(viewport), viewport);
  }

  public void setFieldOfView(float fieldOfView, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setFieldOfView__SWIG_0(swigCPtr, this, fieldOfView, forcedUpdate);
  }

  public void setFieldOfView(float fieldOfView) {
    OsmAndCoreJNI.IMapRenderer_setFieldOfView__SWIG_1(swigCPtr, this, fieldOfView);
  }

  public void setDistanceToFog(float fogDistance, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setDistanceToFog__SWIG_0(swigCPtr, this, fogDistance, forcedUpdate);
  }

  public void setDistanceToFog(float fogDistance) {
    OsmAndCoreJNI.IMapRenderer_setDistanceToFog__SWIG_1(swigCPtr, this, fogDistance);
  }

  public void setFogOriginFactor(float factor, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setFogOriginFactor__SWIG_0(swigCPtr, this, factor, forcedUpdate);
  }

  public void setFogOriginFactor(float factor) {
    OsmAndCoreJNI.IMapRenderer_setFogOriginFactor__SWIG_1(swigCPtr, this, factor);
  }

  public void setFogHeightOriginFactor(float factor, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setFogHeightOriginFactor__SWIG_0(swigCPtr, this, factor, forcedUpdate);
  }

  public void setFogHeightOriginFactor(float factor) {
    OsmAndCoreJNI.IMapRenderer_setFogHeightOriginFactor__SWIG_1(swigCPtr, this, factor);
  }

  public void setFogDensity(float fogDensity, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setFogDensity__SWIG_0(swigCPtr, this, fogDensity, forcedUpdate);
  }

  public void setFogDensity(float fogDensity) {
    OsmAndCoreJNI.IMapRenderer_setFogDensity__SWIG_1(swigCPtr, this, fogDensity);
  }

  public void setFogColor(FColorRGB color, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setFogColor__SWIG_0(swigCPtr, this, FColorRGB.getCPtr(color), color, forcedUpdate);
  }

  public void setFogColor(FColorRGB color) {
    OsmAndCoreJNI.IMapRenderer_setFogColor__SWIG_1(swigCPtr, this, FColorRGB.getCPtr(color), color);
  }

  public void setSkyColor(FColorRGB color, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setSkyColor__SWIG_0(swigCPtr, this, FColorRGB.getCPtr(color), color, forcedUpdate);
  }

  public void setSkyColor(FColorRGB color) {
    OsmAndCoreJNI.IMapRenderer_setSkyColor__SWIG_1(swigCPtr, this, FColorRGB.getCPtr(color), color);
  }

  public void setAzimuth(float azimuth, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setAzimuth__SWIG_0(swigCPtr, this, azimuth, forcedUpdate);
  }

  public void setAzimuth(float azimuth) {
    OsmAndCoreJNI.IMapRenderer_setAzimuth__SWIG_1(swigCPtr, this, azimuth);
  }

  public void setElevationAngle(float elevationAngle, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setElevationAngle__SWIG_0(swigCPtr, this, elevationAngle, forcedUpdate);
  }

  public void setElevationAngle(float elevationAngle) {
    OsmAndCoreJNI.IMapRenderer_setElevationAngle__SWIG_1(swigCPtr, this, elevationAngle);
  }

  public void setTarget(PointI target31, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setTarget__SWIG_0(swigCPtr, this, PointI.getCPtr(target31), target31, forcedUpdate);
  }

  public void setTarget(PointI target31) {
    OsmAndCoreJNI.IMapRenderer_setTarget__SWIG_1(swigCPtr, this, PointI.getCPtr(target31), target31);
  }

  public void setZoom(float zoom, boolean forcedUpdate) {
    OsmAndCoreJNI.IMapRenderer_setZoom__SWIG_0(swigCPtr, this, zoom, forcedUpdate);
  }

  public void setZoom(float zoom) {
    OsmAndCoreJNI.IMapRenderer_setZoom__SWIG_1(swigCPtr, this, zoom);
  }

  public MapRendererDebugSettings getDebugSettings() {
    long cPtr = OsmAndCoreJNI.IMapRenderer_getDebugSettings(swigCPtr, this);
    return (cPtr == 0) ? null : new MapRendererDebugSettings(cPtr, true);
  }

  public void setDebugSettings(MapRendererDebugSettings debugSettings) {
    OsmAndCoreJNI.IMapRenderer_setDebugSettings(swigCPtr, this, MapRendererDebugSettings.getCPtr(debugSettings), debugSettings);
  }

  public float getMinZoom() {
    return OsmAndCoreJNI.IMapRenderer_getMinZoom(swigCPtr, this);
  }

  public float getMaxZoom() {
    return OsmAndCoreJNI.IMapRenderer_getMaxZoom(swigCPtr, this);
  }

  public float getRecommendedMinZoom(IMapRenderer.ZoomRecommendationStrategy strategy) {
    return OsmAndCoreJNI.IMapRenderer_getRecommendedMinZoom__SWIG_0(swigCPtr, this, strategy.swigValue());
  }

  public float getRecommendedMinZoom() {
    return OsmAndCoreJNI.IMapRenderer_getRecommendedMinZoom__SWIG_1(swigCPtr, this);
  }

  public float getRecommendedMaxZoom(IMapRenderer.ZoomRecommendationStrategy strategy) {
    return OsmAndCoreJNI.IMapRenderer_getRecommendedMaxZoom__SWIG_0(swigCPtr, this, strategy.swigValue());
  }

  public float getRecommendedMaxZoom() {
    return OsmAndCoreJNI.IMapRenderer_getRecommendedMaxZoom__SWIG_1(swigCPtr, this);
  }

  static public class IStateChangeObserver {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected IStateChangeObserver(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(IStateChangeObserver obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_IMapRenderer_IStateChangeObserver(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_change_ownership(this, swigCPtr, true);
    }
  
    public IStateChangeObserver() {
      this(OsmAndCoreJNI.new_IMapRenderer_IStateChangeObserver(), true);
      OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_director_connect(this, swigCPtr, swigCMemOwn, true);
    }
  
    public void method(IMapRenderer mapRenderer, MapRendererStateChange thisChange, MapRendererStateChanges allChanges) {
      OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_method(swigCPtr, this, IMapRenderer.getCPtr(mapRenderer), mapRenderer, thisChange.swigValue(), MapRendererStateChanges.getCPtr(allChanges), allChanges);
    }
  
    public boolean attachTo(SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IStateChangeObserver_t observable, SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IStateChangeObserver_t__Tag tag) {
      return OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_attachTo(swigCPtr, this, SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IStateChangeObserver_t.getCPtr(observable), SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__IStateChangeObserver_t__Tag.getCPtr(tag));
    }
  
    public SWIGTYPE_p_OsmAnd__IMapRenderer__StateChangeObserver getBinding() {
      return new SWIGTYPE_p_OsmAnd__IMapRenderer__StateChangeObserver(OsmAndCoreJNI.IMapRenderer_IStateChangeObserver_getBinding(swigCPtr, this), true);
    }
  
  }

  public SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__StateChangeObserver_t getStateChangeObservable() {
    long cPtr = OsmAndCoreJNI.IMapRenderer_stateChangeObservable_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OsmAnd__ObservableAsT_OsmAnd__IMapRenderer__StateChangeObserver_t(cPtr, false);
  }

  public boolean getLocationFromScreenPoint(PointI screenPoint, PointI location31) {
    return OsmAndCoreJNI.IMapRenderer_getLocationFromScreenPoint__SWIG_0(swigCPtr, this, PointI.getCPtr(screenPoint), screenPoint, PointI.getCPtr(location31), location31);
  }

  public boolean getLocationFromScreenPoint(PointI screenPoint, SWIGTYPE_p_OsmAnd__PointT_long_long_t location) {
    return OsmAndCoreJNI.IMapRenderer_getLocationFromScreenPoint__SWIG_1(swigCPtr, this, PointI.getCPtr(screenPoint), screenPoint, SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(location));
  }

  public void dumpResourcesInfo() {
    OsmAndCoreJNI.IMapRenderer_dumpResourcesInfo(swigCPtr, this);
  }

  public enum ZoomRecommendationStrategy {
    NarrowestRange,
    WidestRange;

    public final int swigValue() {
      return swigValue;
    }

    public static ZoomRecommendationStrategy swigToEnum(int swigValue) {
      ZoomRecommendationStrategy[] swigValues = ZoomRecommendationStrategy.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (ZoomRecommendationStrategy swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + ZoomRecommendationStrategy.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private ZoomRecommendationStrategy() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private ZoomRecommendationStrategy(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private ZoomRecommendationStrategy(ZoomRecommendationStrategy swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
