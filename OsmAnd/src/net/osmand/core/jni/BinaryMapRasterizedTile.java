/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.osmand.core.jni;

public class BinaryMapRasterizedTile extends RasterBitmapTile {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  protected BinaryMapRasterizedTile(long cPtr, boolean cMemoryOwn) {
    super(OsmAndCoreJNI.BinaryMapRasterizedTile_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BinaryMapRasterizedTile obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        OsmAndCoreJNI.delete_BinaryMapRasterizedTile(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BinaryMapRasterizedTile(BinaryMapPrimitivesTile binaryMapTile, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t bitmap, AlphaChannelData alphaChannelData, float densityFactor, TileId tileId, ZoomLevel zoom) {
    this(OsmAndCoreJNI.new_BinaryMapRasterizedTile(BinaryMapPrimitivesTile.getCPtr(binaryMapTile), binaryMapTile, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t.getCPtr(bitmap), alphaChannelData.swigValue(), densityFactor, TileId.getCPtr(tileId), tileId, zoom.swigValue()), true);
  }

  public BinaryMapPrimitivesTile getBinaryMapTile() {
    long cPtr = OsmAndCoreJNI.BinaryMapRasterizedTile_binaryMapTile_get(swigCPtr, this);
    return (cPtr == 0) ? null : new BinaryMapPrimitivesTile(cPtr, true);
  }

}
