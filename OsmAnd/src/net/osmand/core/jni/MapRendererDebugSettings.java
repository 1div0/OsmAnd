/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.osmand.core.jni;

public class MapRendererDebugSettings {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected MapRendererDebugSettings(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MapRendererDebugSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_MapRendererDebugSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapRendererDebugSettings() {
    this(OsmAndCoreJNI.new_MapRendererDebugSettings(), true);
  }

  public void setDebugStageEnabled(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_debugStageEnabled_set(swigCPtr, this, value);
  }

  public boolean getDebugStageEnabled() {
    return OsmAndCoreJNI.MapRendererDebugSettings_debugStageEnabled_get(swigCPtr, this);
  }

  public void setExcludeOnPathSymbolsFromProcessing(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_excludeOnPathSymbolsFromProcessing_set(swigCPtr, this, value);
  }

  public boolean getExcludeOnPathSymbolsFromProcessing() {
    return OsmAndCoreJNI.MapRendererDebugSettings_excludeOnPathSymbolsFromProcessing_get(swigCPtr, this);
  }

  public void setExcludeBillboardSymbolsFromProcessing(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_excludeBillboardSymbolsFromProcessing_set(swigCPtr, this, value);
  }

  public boolean getExcludeBillboardSymbolsFromProcessing() {
    return OsmAndCoreJNI.MapRendererDebugSettings_excludeBillboardSymbolsFromProcessing_get(swigCPtr, this);
  }

  public void setExcludeOnSurfaceSymbolsFromProcessing(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_excludeOnSurfaceSymbolsFromProcessing_set(swigCPtr, this, value);
  }

  public boolean getExcludeOnSurfaceSymbolsFromProcessing() {
    return OsmAndCoreJNI.MapRendererDebugSettings_excludeOnSurfaceSymbolsFromProcessing_get(swigCPtr, this);
  }

  public void setSkipSymbolsIntersectionCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_skipSymbolsIntersectionCheck_set(swigCPtr, this, value);
  }

  public boolean getSkipSymbolsIntersectionCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_skipSymbolsIntersectionCheck_get(swigCPtr, this);
  }

  public void setShowSymbolsBBoxesAcceptedByIntersectionCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesAcceptedByIntersectionCheck_set(swigCPtr, this, value);
  }

  public boolean getShowSymbolsBBoxesAcceptedByIntersectionCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesAcceptedByIntersectionCheck_get(swigCPtr, this);
  }

  public void setShowSymbolsBBoxesRejectedByIntersectionCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByIntersectionCheck_set(swigCPtr, this, value);
  }

  public boolean getShowSymbolsBBoxesRejectedByIntersectionCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByIntersectionCheck_get(swigCPtr, this);
  }

  public void setSkipSymbolsMinDistanceToSameContentFromOtherSymbolCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_skipSymbolsMinDistanceToSameContentFromOtherSymbolCheck_set(swigCPtr, this, value);
  }

  public boolean getSkipSymbolsMinDistanceToSameContentFromOtherSymbolCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_skipSymbolsMinDistanceToSameContentFromOtherSymbolCheck_get(swigCPtr, this);
  }

  public void setShowSymbolsBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck_set(swigCPtr, this, value);
  }

  public boolean getShowSymbolsBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck_get(swigCPtr, this);
  }

  public void setShowSymbolsCheckBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsCheckBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck_set(swigCPtr, this, value);
  }

  public boolean getShowSymbolsCheckBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsCheckBBoxesRejectedByMinDistanceToSameContentFromOtherSymbolCheck_get(swigCPtr, this);
  }

  public void setShowSymbolsBBoxesRejectedByPresentationMode(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByPresentationMode_set(swigCPtr, this, value);
  }

  public boolean getShowSymbolsBBoxesRejectedByPresentationMode() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showSymbolsBBoxesRejectedByPresentationMode_get(swigCPtr, this);
  }

  public void setShowOnPathSymbolsRenderablesPaths(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showOnPathSymbolsRenderablesPaths_set(swigCPtr, this, value);
  }

  public boolean getShowOnPathSymbolsRenderablesPaths() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showOnPathSymbolsRenderablesPaths_get(swigCPtr, this);
  }

  public void setShowOnPath2dSymbolGlyphDetails(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showOnPath2dSymbolGlyphDetails_set(swigCPtr, this, value);
  }

  public boolean getShowOnPath2dSymbolGlyphDetails() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showOnPath2dSymbolGlyphDetails_get(swigCPtr, this);
  }

  public void setShowOnPath3dSymbolGlyphDetails(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showOnPath3dSymbolGlyphDetails_set(swigCPtr, this, value);
  }

  public boolean getShowOnPath3dSymbolGlyphDetails() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showOnPath3dSymbolGlyphDetails_get(swigCPtr, this);
  }

  public void setAllSymbolsTransparentForIntersectionLookup(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_allSymbolsTransparentForIntersectionLookup_set(swigCPtr, this, value);
  }

  public boolean getAllSymbolsTransparentForIntersectionLookup() {
    return OsmAndCoreJNI.MapRendererDebugSettings_allSymbolsTransparentForIntersectionLookup_get(swigCPtr, this);
  }

  public void setShowTooShortOnPathSymbolsRenderablesPaths(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showTooShortOnPathSymbolsRenderablesPaths_set(swigCPtr, this, value);
  }

  public boolean getShowTooShortOnPathSymbolsRenderablesPaths() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showTooShortOnPathSymbolsRenderablesPaths_get(swigCPtr, this);
  }

  public void setShowAllPaths(boolean value) {
    OsmAndCoreJNI.MapRendererDebugSettings_showAllPaths_set(swigCPtr, this, value);
  }

  public boolean getShowAllPaths() {
    return OsmAndCoreJNI.MapRendererDebugSettings_showAllPaths_get(swigCPtr, this);
  }

  public void copyTo(MapRendererDebugSettings other) {
    OsmAndCoreJNI.MapRendererDebugSettings_copyTo(swigCPtr, this, MapRendererDebugSettings.getCPtr(other), other);
  }

  public MapRendererDebugSettings createCopy() {
    long cPtr = OsmAndCoreJNI.MapRendererDebugSettings_createCopy(swigCPtr, this);
    return (cPtr == 0) ? null : new MapRendererDebugSettings(cPtr, true);
  }

}
