// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OBF.proto

package net.osmand.binary;

public final class OsmandOdb {
  private OsmandOdb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface OsmAndStructureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 version = 1;
    boolean hasVersion();
    int getVersion();
    
    // required int64 dateCreated = 18;
    boolean hasDateCreated();
    long getDateCreated();
    
    // repeated .OsmAnd.OBF.OsmAndAddressIndex addressIndex = 7;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex> 
        getAddressIndexList();
    net.osmand.binary.OsmandOdb.OsmAndAddressIndex getAddressIndex(int index);
    int getAddressIndexCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder> 
        getAddressIndexOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder getAddressIndexOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndTransportIndex transportIndex = 4;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex> 
        getTransportIndexList();
    net.osmand.binary.OsmandOdb.OsmAndTransportIndex getTransportIndex(int index);
    int getTransportIndexCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder> 
        getTransportIndexOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder getTransportIndexOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndPoiIndex poiIndex = 8;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex> 
        getPoiIndexList();
    net.osmand.binary.OsmandOdb.OsmAndPoiIndex getPoiIndex(int index);
    int getPoiIndexCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder> 
        getPoiIndexOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder getPoiIndexOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex mapIndex = 6;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex> 
        getMapIndexList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndex getMapIndex(int index);
    int getMapIndexCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder> 
        getMapIndexOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder getMapIndexOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex routingIndex = 9;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> 
        getRoutingIndexList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex getRoutingIndex(int index);
    int getRoutingIndexCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder> 
        getRoutingIndexOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder getRoutingIndexOrBuilder(
        int index);
    
    // required uint32 versionConfirm = 32;
    boolean hasVersionConfirm();
    int getVersionConfirm();
  }
  public static final class OsmAndStructure extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndStructureOrBuilder {
    // Use OsmAndStructure.newBuilder() to construct.
    private OsmAndStructure(Builder builder) {
      super(builder);
    }
    private OsmAndStructure(boolean noInit) {}
    
    private static final OsmAndStructure defaultInstance;
    public static OsmAndStructure getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndStructure getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndStructure_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndStructure_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getVersion() {
      return version_;
    }
    
    // required int64 dateCreated = 18;
    public static final int DATECREATED_FIELD_NUMBER = 18;
    private long dateCreated_;
    public boolean hasDateCreated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getDateCreated() {
      return dateCreated_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndAddressIndex addressIndex = 7;
    public static final int ADDRESSINDEX_FIELD_NUMBER = 7;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex> addressIndex_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex> getAddressIndexList() {
      return addressIndex_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder> 
        getAddressIndexOrBuilderList() {
      return addressIndex_;
    }
    public int getAddressIndexCount() {
      return addressIndex_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressIndex getAddressIndex(int index) {
      return addressIndex_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder getAddressIndexOrBuilder(
        int index) {
      return addressIndex_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndTransportIndex transportIndex = 4;
    public static final int TRANSPORTINDEX_FIELD_NUMBER = 4;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex> transportIndex_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex> getTransportIndexList() {
      return transportIndex_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder> 
        getTransportIndexOrBuilderList() {
      return transportIndex_;
    }
    public int getTransportIndexCount() {
      return transportIndex_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndTransportIndex getTransportIndex(int index) {
      return transportIndex_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder getTransportIndexOrBuilder(
        int index) {
      return transportIndex_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiIndex poiIndex = 8;
    public static final int POIINDEX_FIELD_NUMBER = 8;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex> poiIndex_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex> getPoiIndexList() {
      return poiIndex_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder> 
        getPoiIndexOrBuilderList() {
      return poiIndex_;
    }
    public int getPoiIndexCount() {
      return poiIndex_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiIndex getPoiIndex(int index) {
      return poiIndex_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder getPoiIndexOrBuilder(
        int index) {
      return poiIndex_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex mapIndex = 6;
    public static final int MAPINDEX_FIELD_NUMBER = 6;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex> mapIndex_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex> getMapIndexList() {
      return mapIndex_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder> 
        getMapIndexOrBuilderList() {
      return mapIndex_;
    }
    public int getMapIndexCount() {
      return mapIndex_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndex getMapIndex(int index) {
      return mapIndex_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder getMapIndexOrBuilder(
        int index) {
      return mapIndex_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex routingIndex = 9;
    public static final int ROUTINGINDEX_FIELD_NUMBER = 9;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> routingIndex_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> getRoutingIndexList() {
      return routingIndex_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder> 
        getRoutingIndexOrBuilderList() {
      return routingIndex_;
    }
    public int getRoutingIndexCount() {
      return routingIndex_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex getRoutingIndex(int index) {
      return routingIndex_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder getRoutingIndexOrBuilder(
        int index) {
      return routingIndex_.get(index);
    }
    
    // required uint32 versionConfirm = 32;
    public static final int VERSIONCONFIRM_FIELD_NUMBER = 32;
    private int versionConfirm_;
    public boolean hasVersionConfirm() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getVersionConfirm() {
      return versionConfirm_;
    }
    
    private void initFields() {
      version_ = 0;
      dateCreated_ = 0L;
      addressIndex_ = java.util.Collections.emptyList();
      transportIndex_ = java.util.Collections.emptyList();
      poiIndex_ = java.util.Collections.emptyList();
      mapIndex_ = java.util.Collections.emptyList();
      routingIndex_ = java.util.Collections.emptyList();
      versionConfirm_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDateCreated()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersionConfirm()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAddressIndexCount(); i++) {
        if (!getAddressIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTransportIndexCount(); i++) {
        if (!getTransportIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPoiIndexCount(); i++) {
        if (!getPoiIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMapIndexCount(); i++) {
        if (!getMapIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRoutingIndexCount(); i++) {
        if (!getRoutingIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      for (int i = 0; i < transportIndex_.size(); i++) {
        output.writeMessage(4, transportIndex_.get(i));
      }
      for (int i = 0; i < mapIndex_.size(); i++) {
        output.writeMessage(6, mapIndex_.get(i));
      }
      for (int i = 0; i < addressIndex_.size(); i++) {
        output.writeMessage(7, addressIndex_.get(i));
      }
      for (int i = 0; i < poiIndex_.size(); i++) {
        output.writeMessage(8, poiIndex_.get(i));
      }
      for (int i = 0; i < routingIndex_.size(); i++) {
        output.writeMessage(9, routingIndex_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(18, dateCreated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(32, versionConfirm_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      for (int i = 0; i < transportIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, transportIndex_.get(i));
      }
      for (int i = 0; i < mapIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, mapIndex_.get(i));
      }
      for (int i = 0; i < addressIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, addressIndex_.get(i));
      }
      for (int i = 0; i < poiIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, poiIndex_.get(i));
      }
      for (int i = 0; i < routingIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, routingIndex_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, dateCreated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, versionConfirm_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndStructure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndStructure prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndStructureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndStructure_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndStructure_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndStructure.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAddressIndexFieldBuilder();
          getTransportIndexFieldBuilder();
          getPoiIndexFieldBuilder();
          getMapIndexFieldBuilder();
          getRoutingIndexFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dateCreated_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (addressIndexBuilder_ == null) {
          addressIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          addressIndexBuilder_.clear();
        }
        if (transportIndexBuilder_ == null) {
          transportIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          transportIndexBuilder_.clear();
        }
        if (poiIndexBuilder_ == null) {
          poiIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          poiIndexBuilder_.clear();
        }
        if (mapIndexBuilder_ == null) {
          mapIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          mapIndexBuilder_.clear();
        }
        if (routingIndexBuilder_ == null) {
          routingIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          routingIndexBuilder_.clear();
        }
        versionConfirm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndStructure.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndStructure getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndStructure.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndStructure build() {
        net.osmand.binary.OsmandOdb.OsmAndStructure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndStructure buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndStructure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndStructure buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndStructure result = new net.osmand.binary.OsmandOdb.OsmAndStructure(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dateCreated_ = dateCreated_;
        if (addressIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            addressIndex_ = java.util.Collections.unmodifiableList(addressIndex_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.addressIndex_ = addressIndex_;
        } else {
          result.addressIndex_ = addressIndexBuilder_.build();
        }
        if (transportIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            transportIndex_ = java.util.Collections.unmodifiableList(transportIndex_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.transportIndex_ = transportIndex_;
        } else {
          result.transportIndex_ = transportIndexBuilder_.build();
        }
        if (poiIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            poiIndex_ = java.util.Collections.unmodifiableList(poiIndex_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.poiIndex_ = poiIndex_;
        } else {
          result.poiIndex_ = poiIndexBuilder_.build();
        }
        if (mapIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            mapIndex_ = java.util.Collections.unmodifiableList(mapIndex_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.mapIndex_ = mapIndex_;
        } else {
          result.mapIndex_ = mapIndexBuilder_.build();
        }
        if (routingIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            routingIndex_ = java.util.Collections.unmodifiableList(routingIndex_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.routingIndex_ = routingIndex_;
        } else {
          result.routingIndex_ = routingIndexBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.versionConfirm_ = versionConfirm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndStructure) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndStructure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndStructure other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndStructure.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasDateCreated()) {
          setDateCreated(other.getDateCreated());
        }
        if (addressIndexBuilder_ == null) {
          if (!other.addressIndex_.isEmpty()) {
            if (addressIndex_.isEmpty()) {
              addressIndex_ = other.addressIndex_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAddressIndexIsMutable();
              addressIndex_.addAll(other.addressIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.addressIndex_.isEmpty()) {
            if (addressIndexBuilder_.isEmpty()) {
              addressIndexBuilder_.dispose();
              addressIndexBuilder_ = null;
              addressIndex_ = other.addressIndex_;
              bitField0_ = (bitField0_ & ~0x00000004);
              addressIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAddressIndexFieldBuilder() : null;
            } else {
              addressIndexBuilder_.addAllMessages(other.addressIndex_);
            }
          }
        }
        if (transportIndexBuilder_ == null) {
          if (!other.transportIndex_.isEmpty()) {
            if (transportIndex_.isEmpty()) {
              transportIndex_ = other.transportIndex_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTransportIndexIsMutable();
              transportIndex_.addAll(other.transportIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.transportIndex_.isEmpty()) {
            if (transportIndexBuilder_.isEmpty()) {
              transportIndexBuilder_.dispose();
              transportIndexBuilder_ = null;
              transportIndex_ = other.transportIndex_;
              bitField0_ = (bitField0_ & ~0x00000008);
              transportIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTransportIndexFieldBuilder() : null;
            } else {
              transportIndexBuilder_.addAllMessages(other.transportIndex_);
            }
          }
        }
        if (poiIndexBuilder_ == null) {
          if (!other.poiIndex_.isEmpty()) {
            if (poiIndex_.isEmpty()) {
              poiIndex_ = other.poiIndex_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePoiIndexIsMutable();
              poiIndex_.addAll(other.poiIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.poiIndex_.isEmpty()) {
            if (poiIndexBuilder_.isEmpty()) {
              poiIndexBuilder_.dispose();
              poiIndexBuilder_ = null;
              poiIndex_ = other.poiIndex_;
              bitField0_ = (bitField0_ & ~0x00000010);
              poiIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPoiIndexFieldBuilder() : null;
            } else {
              poiIndexBuilder_.addAllMessages(other.poiIndex_);
            }
          }
        }
        if (mapIndexBuilder_ == null) {
          if (!other.mapIndex_.isEmpty()) {
            if (mapIndex_.isEmpty()) {
              mapIndex_ = other.mapIndex_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureMapIndexIsMutable();
              mapIndex_.addAll(other.mapIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.mapIndex_.isEmpty()) {
            if (mapIndexBuilder_.isEmpty()) {
              mapIndexBuilder_.dispose();
              mapIndexBuilder_ = null;
              mapIndex_ = other.mapIndex_;
              bitField0_ = (bitField0_ & ~0x00000020);
              mapIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMapIndexFieldBuilder() : null;
            } else {
              mapIndexBuilder_.addAllMessages(other.mapIndex_);
            }
          }
        }
        if (routingIndexBuilder_ == null) {
          if (!other.routingIndex_.isEmpty()) {
            if (routingIndex_.isEmpty()) {
              routingIndex_ = other.routingIndex_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRoutingIndexIsMutable();
              routingIndex_.addAll(other.routingIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.routingIndex_.isEmpty()) {
            if (routingIndexBuilder_.isEmpty()) {
              routingIndexBuilder_.dispose();
              routingIndexBuilder_ = null;
              routingIndex_ = other.routingIndex_;
              bitField0_ = (bitField0_ & ~0x00000040);
              routingIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoutingIndexFieldBuilder() : null;
            } else {
              routingIndexBuilder_.addAllMessages(other.routingIndex_);
            }
          }
        }
        if (other.hasVersionConfirm()) {
          setVersionConfirm(other.getVersionConfirm());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasDateCreated()) {
          
          return false;
        }
        if (!hasVersionConfirm()) {
          
          return false;
        }
        for (int i = 0; i < getAddressIndexCount(); i++) {
          if (!getAddressIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTransportIndexCount(); i++) {
          if (!getTransportIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPoiIndexCount(); i++) {
          if (!getPoiIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMapIndexCount(); i++) {
          if (!getMapIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRoutingIndexCount(); i++) {
          if (!getRoutingIndex(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndTransportIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTransportIndex(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndMapIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMapIndex(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAddressIndex(subBuilder.buildPartial());
              break;
            }
            case 66: {
              net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiIndex(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoutingIndex(subBuilder.buildPartial());
              break;
            }
            case 144: {
              bitField0_ |= 0x00000002;
              dateCreated_ = input.readInt64();
              break;
            }
            case 256: {
              bitField0_ |= 0x00000080;
              versionConfirm_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 version = 1;
      private int version_ ;
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getVersion() {
        return version_;
      }
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }
      
      // required int64 dateCreated = 18;
      private long dateCreated_ ;
      public boolean hasDateCreated() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getDateCreated() {
        return dateCreated_;
      }
      public Builder setDateCreated(long value) {
        bitField0_ |= 0x00000002;
        dateCreated_ = value;
        onChanged();
        return this;
      }
      public Builder clearDateCreated() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dateCreated_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.OsmAndAddressIndex addressIndex = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex> addressIndex_ =
        java.util.Collections.emptyList();
      private void ensureAddressIndexIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          addressIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndAddressIndex>(addressIndex_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder> addressIndexBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex> getAddressIndexList() {
        if (addressIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(addressIndex_);
        } else {
          return addressIndexBuilder_.getMessageList();
        }
      }
      public int getAddressIndexCount() {
        if (addressIndexBuilder_ == null) {
          return addressIndex_.size();
        } else {
          return addressIndexBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex getAddressIndex(int index) {
        if (addressIndexBuilder_ == null) {
          return addressIndex_.get(index);
        } else {
          return addressIndexBuilder_.getMessage(index);
        }
      }
      public Builder setAddressIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex value) {
        if (addressIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddressIndexIsMutable();
          addressIndex_.set(index, value);
          onChanged();
        } else {
          addressIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAddressIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder builderForValue) {
        if (addressIndexBuilder_ == null) {
          ensureAddressIndexIsMutable();
          addressIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          addressIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAddressIndex(net.osmand.binary.OsmandOdb.OsmAndAddressIndex value) {
        if (addressIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddressIndexIsMutable();
          addressIndex_.add(value);
          onChanged();
        } else {
          addressIndexBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAddressIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex value) {
        if (addressIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddressIndexIsMutable();
          addressIndex_.add(index, value);
          onChanged();
        } else {
          addressIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAddressIndex(
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder builderForValue) {
        if (addressIndexBuilder_ == null) {
          ensureAddressIndexIsMutable();
          addressIndex_.add(builderForValue.build());
          onChanged();
        } else {
          addressIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAddressIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder builderForValue) {
        if (addressIndexBuilder_ == null) {
          ensureAddressIndexIsMutable();
          addressIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          addressIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAddressIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndex> values) {
        if (addressIndexBuilder_ == null) {
          ensureAddressIndexIsMutable();
          super.addAll(values, addressIndex_);
          onChanged();
        } else {
          addressIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAddressIndex() {
        if (addressIndexBuilder_ == null) {
          addressIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          addressIndexBuilder_.clear();
        }
        return this;
      }
      public Builder removeAddressIndex(int index) {
        if (addressIndexBuilder_ == null) {
          ensureAddressIndexIsMutable();
          addressIndex_.remove(index);
          onChanged();
        } else {
          addressIndexBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder getAddressIndexBuilder(
          int index) {
        return getAddressIndexFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder getAddressIndexOrBuilder(
          int index) {
        if (addressIndexBuilder_ == null) {
          return addressIndex_.get(index);  } else {
          return addressIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder> 
           getAddressIndexOrBuilderList() {
        if (addressIndexBuilder_ != null) {
          return addressIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(addressIndex_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder addAddressIndexBuilder() {
        return getAddressIndexFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndAddressIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder addAddressIndexBuilder(
          int index) {
        return getAddressIndexFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder> 
           getAddressIndexBuilderList() {
        return getAddressIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder> 
          getAddressIndexFieldBuilder() {
        if (addressIndexBuilder_ == null) {
          addressIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder>(
                  addressIndex_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          addressIndex_ = null;
        }
        return addressIndexBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndTransportIndex transportIndex = 4;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex> transportIndex_ =
        java.util.Collections.emptyList();
      private void ensureTransportIndexIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          transportIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndTransportIndex>(transportIndex_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTransportIndex, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder> transportIndexBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex> getTransportIndexList() {
        if (transportIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transportIndex_);
        } else {
          return transportIndexBuilder_.getMessageList();
        }
      }
      public int getTransportIndexCount() {
        if (transportIndexBuilder_ == null) {
          return transportIndex_.size();
        } else {
          return transportIndexBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex getTransportIndex(int index) {
        if (transportIndexBuilder_ == null) {
          return transportIndex_.get(index);
        } else {
          return transportIndexBuilder_.getMessage(index);
        }
      }
      public Builder setTransportIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndTransportIndex value) {
        if (transportIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransportIndexIsMutable();
          transportIndex_.set(index, value);
          onChanged();
        } else {
          transportIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTransportIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder builderForValue) {
        if (transportIndexBuilder_ == null) {
          ensureTransportIndexIsMutable();
          transportIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          transportIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTransportIndex(net.osmand.binary.OsmandOdb.OsmAndTransportIndex value) {
        if (transportIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransportIndexIsMutable();
          transportIndex_.add(value);
          onChanged();
        } else {
          transportIndexBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTransportIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndTransportIndex value) {
        if (transportIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransportIndexIsMutable();
          transportIndex_.add(index, value);
          onChanged();
        } else {
          transportIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTransportIndex(
          net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder builderForValue) {
        if (transportIndexBuilder_ == null) {
          ensureTransportIndexIsMutable();
          transportIndex_.add(builderForValue.build());
          onChanged();
        } else {
          transportIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTransportIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder builderForValue) {
        if (transportIndexBuilder_ == null) {
          ensureTransportIndexIsMutable();
          transportIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          transportIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTransportIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndTransportIndex> values) {
        if (transportIndexBuilder_ == null) {
          ensureTransportIndexIsMutable();
          super.addAll(values, transportIndex_);
          onChanged();
        } else {
          transportIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTransportIndex() {
        if (transportIndexBuilder_ == null) {
          transportIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          transportIndexBuilder_.clear();
        }
        return this;
      }
      public Builder removeTransportIndex(int index) {
        if (transportIndexBuilder_ == null) {
          ensureTransportIndexIsMutable();
          transportIndex_.remove(index);
          onChanged();
        } else {
          transportIndexBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder getTransportIndexBuilder(
          int index) {
        return getTransportIndexFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder getTransportIndexOrBuilder(
          int index) {
        if (transportIndexBuilder_ == null) {
          return transportIndex_.get(index);  } else {
          return transportIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder> 
           getTransportIndexOrBuilderList() {
        if (transportIndexBuilder_ != null) {
          return transportIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transportIndex_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder addTransportIndexBuilder() {
        return getTransportIndexFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndTransportIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder addTransportIndexBuilder(
          int index) {
        return getTransportIndexFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder> 
           getTransportIndexBuilderList() {
        return getTransportIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTransportIndex, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder> 
          getTransportIndexFieldBuilder() {
        if (transportIndexBuilder_ == null) {
          transportIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndTransportIndex, net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder>(
                  transportIndex_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          transportIndex_ = null;
        }
        return transportIndexBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiIndex poiIndex = 8;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex> poiIndex_ =
        java.util.Collections.emptyList();
      private void ensurePoiIndexIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          poiIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiIndex>(poiIndex_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiIndex, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder> poiIndexBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex> getPoiIndexList() {
        if (poiIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(poiIndex_);
        } else {
          return poiIndexBuilder_.getMessageList();
        }
      }
      public int getPoiIndexCount() {
        if (poiIndexBuilder_ == null) {
          return poiIndex_.size();
        } else {
          return poiIndexBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex getPoiIndex(int index) {
        if (poiIndexBuilder_ == null) {
          return poiIndex_.get(index);
        } else {
          return poiIndexBuilder_.getMessage(index);
        }
      }
      public Builder setPoiIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiIndex value) {
        if (poiIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiIndexIsMutable();
          poiIndex_.set(index, value);
          onChanged();
        } else {
          poiIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPoiIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder builderForValue) {
        if (poiIndexBuilder_ == null) {
          ensurePoiIndexIsMutable();
          poiIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          poiIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPoiIndex(net.osmand.binary.OsmandOdb.OsmAndPoiIndex value) {
        if (poiIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiIndexIsMutable();
          poiIndex_.add(value);
          onChanged();
        } else {
          poiIndexBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPoiIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiIndex value) {
        if (poiIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiIndexIsMutable();
          poiIndex_.add(index, value);
          onChanged();
        } else {
          poiIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPoiIndex(
          net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder builderForValue) {
        if (poiIndexBuilder_ == null) {
          ensurePoiIndexIsMutable();
          poiIndex_.add(builderForValue.build());
          onChanged();
        } else {
          poiIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPoiIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder builderForValue) {
        if (poiIndexBuilder_ == null) {
          ensurePoiIndexIsMutable();
          poiIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          poiIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPoiIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiIndex> values) {
        if (poiIndexBuilder_ == null) {
          ensurePoiIndexIsMutable();
          super.addAll(values, poiIndex_);
          onChanged();
        } else {
          poiIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPoiIndex() {
        if (poiIndexBuilder_ == null) {
          poiIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          poiIndexBuilder_.clear();
        }
        return this;
      }
      public Builder removePoiIndex(int index) {
        if (poiIndexBuilder_ == null) {
          ensurePoiIndexIsMutable();
          poiIndex_.remove(index);
          onChanged();
        } else {
          poiIndexBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder getPoiIndexBuilder(
          int index) {
        return getPoiIndexFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder getPoiIndexOrBuilder(
          int index) {
        if (poiIndexBuilder_ == null) {
          return poiIndex_.get(index);  } else {
          return poiIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder> 
           getPoiIndexOrBuilderList() {
        if (poiIndexBuilder_ != null) {
          return poiIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(poiIndex_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder addPoiIndexBuilder() {
        return getPoiIndexFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder addPoiIndexBuilder(
          int index) {
        return getPoiIndexFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder> 
           getPoiIndexBuilderList() {
        return getPoiIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiIndex, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder> 
          getPoiIndexFieldBuilder() {
        if (poiIndexBuilder_ == null) {
          poiIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiIndex, net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder>(
                  poiIndex_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          poiIndex_ = null;
        }
        return poiIndexBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex mapIndex = 6;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex> mapIndex_ =
        java.util.Collections.emptyList();
      private void ensureMapIndexIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          mapIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex>(mapIndex_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex, net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder> mapIndexBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex> getMapIndexList() {
        if (mapIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapIndex_);
        } else {
          return mapIndexBuilder_.getMessageList();
        }
      }
      public int getMapIndexCount() {
        if (mapIndexBuilder_ == null) {
          return mapIndex_.size();
        } else {
          return mapIndexBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex getMapIndex(int index) {
        if (mapIndexBuilder_ == null) {
          return mapIndex_.get(index);
        } else {
          return mapIndexBuilder_.getMessage(index);
        }
      }
      public Builder setMapIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex value) {
        if (mapIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapIndexIsMutable();
          mapIndex_.set(index, value);
          onChanged();
        } else {
          mapIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMapIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder builderForValue) {
        if (mapIndexBuilder_ == null) {
          ensureMapIndexIsMutable();
          mapIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMapIndex(net.osmand.binary.OsmandOdb.OsmAndMapIndex value) {
        if (mapIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapIndexIsMutable();
          mapIndex_.add(value);
          onChanged();
        } else {
          mapIndexBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMapIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex value) {
        if (mapIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapIndexIsMutable();
          mapIndex_.add(index, value);
          onChanged();
        } else {
          mapIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMapIndex(
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder builderForValue) {
        if (mapIndexBuilder_ == null) {
          ensureMapIndexIsMutable();
          mapIndex_.add(builderForValue.build());
          onChanged();
        } else {
          mapIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMapIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder builderForValue) {
        if (mapIndexBuilder_ == null) {
          ensureMapIndexIsMutable();
          mapIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMapIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex> values) {
        if (mapIndexBuilder_ == null) {
          ensureMapIndexIsMutable();
          super.addAll(values, mapIndex_);
          onChanged();
        } else {
          mapIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMapIndex() {
        if (mapIndexBuilder_ == null) {
          mapIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          mapIndexBuilder_.clear();
        }
        return this;
      }
      public Builder removeMapIndex(int index) {
        if (mapIndexBuilder_ == null) {
          ensureMapIndexIsMutable();
          mapIndex_.remove(index);
          onChanged();
        } else {
          mapIndexBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder getMapIndexBuilder(
          int index) {
        return getMapIndexFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder getMapIndexOrBuilder(
          int index) {
        if (mapIndexBuilder_ == null) {
          return mapIndex_.get(index);  } else {
          return mapIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder> 
           getMapIndexOrBuilderList() {
        if (mapIndexBuilder_ != null) {
          return mapIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapIndex_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder addMapIndexBuilder() {
        return getMapIndexFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder addMapIndexBuilder(
          int index) {
        return getMapIndexFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder> 
           getMapIndexBuilderList() {
        return getMapIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex, net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder> 
          getMapIndexFieldBuilder() {
        if (mapIndexBuilder_ == null) {
          mapIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndMapIndex, net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder>(
                  mapIndex_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          mapIndex_ = null;
        }
        return mapIndexBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex routingIndex = 9;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> routingIndex_ =
        java.util.Collections.emptyList();
      private void ensureRoutingIndexIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          routingIndex_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex>(routingIndex_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder> routingIndexBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> getRoutingIndexList() {
        if (routingIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routingIndex_);
        } else {
          return routingIndexBuilder_.getMessageList();
        }
      }
      public int getRoutingIndexCount() {
        if (routingIndexBuilder_ == null) {
          return routingIndex_.size();
        } else {
          return routingIndexBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex getRoutingIndex(int index) {
        if (routingIndexBuilder_ == null) {
          return routingIndex_.get(index);
        } else {
          return routingIndexBuilder_.getMessage(index);
        }
      }
      public Builder setRoutingIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex value) {
        if (routingIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingIndexIsMutable();
          routingIndex_.set(index, value);
          onChanged();
        } else {
          routingIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRoutingIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder builderForValue) {
        if (routingIndexBuilder_ == null) {
          ensureRoutingIndexIsMutable();
          routingIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          routingIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRoutingIndex(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex value) {
        if (routingIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingIndexIsMutable();
          routingIndex_.add(value);
          onChanged();
        } else {
          routingIndexBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRoutingIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex value) {
        if (routingIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutingIndexIsMutable();
          routingIndex_.add(index, value);
          onChanged();
        } else {
          routingIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRoutingIndex(
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder builderForValue) {
        if (routingIndexBuilder_ == null) {
          ensureRoutingIndexIsMutable();
          routingIndex_.add(builderForValue.build());
          onChanged();
        } else {
          routingIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRoutingIndex(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder builderForValue) {
        if (routingIndexBuilder_ == null) {
          ensureRoutingIndexIsMutable();
          routingIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          routingIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRoutingIndex(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex> values) {
        if (routingIndexBuilder_ == null) {
          ensureRoutingIndexIsMutable();
          super.addAll(values, routingIndex_);
          onChanged();
        } else {
          routingIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRoutingIndex() {
        if (routingIndexBuilder_ == null) {
          routingIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          routingIndexBuilder_.clear();
        }
        return this;
      }
      public Builder removeRoutingIndex(int index) {
        if (routingIndexBuilder_ == null) {
          ensureRoutingIndexIsMutable();
          routingIndex_.remove(index);
          onChanged();
        } else {
          routingIndexBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder getRoutingIndexBuilder(
          int index) {
        return getRoutingIndexFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder getRoutingIndexOrBuilder(
          int index) {
        if (routingIndexBuilder_ == null) {
          return routingIndex_.get(index);  } else {
          return routingIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder> 
           getRoutingIndexOrBuilderList() {
        if (routingIndexBuilder_ != null) {
          return routingIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routingIndex_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder addRoutingIndexBuilder() {
        return getRoutingIndexFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder addRoutingIndexBuilder(
          int index) {
        return getRoutingIndexFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder> 
           getRoutingIndexBuilderList() {
        return getRoutingIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder> 
          getRoutingIndexFieldBuilder() {
        if (routingIndexBuilder_ == null) {
          routingIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder>(
                  routingIndex_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          routingIndex_ = null;
        }
        return routingIndexBuilder_;
      }
      
      // required uint32 versionConfirm = 32;
      private int versionConfirm_ ;
      public boolean hasVersionConfirm() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getVersionConfirm() {
        return versionConfirm_;
      }
      public Builder setVersionConfirm(int value) {
        bitField0_ |= 0x00000080;
        versionConfirm_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersionConfirm() {
        bitField0_ = (bitField0_ & ~0x00000080);
        versionConfirm_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndStructure)
    }
    
    static {
      defaultInstance = new OsmAndStructure(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndStructure)
  }
  
  public interface OsmAndTileBoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 left = 1;
    boolean hasLeft();
    int getLeft();
    
    // required uint32 right = 2;
    boolean hasRight();
    int getRight();
    
    // required uint32 top = 3;
    boolean hasTop();
    int getTop();
    
    // required uint32 bottom = 4;
    boolean hasBottom();
    int getBottom();
  }
  public static final class OsmAndTileBox extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndTileBoxOrBuilder {
    // Use OsmAndTileBox.newBuilder() to construct.
    private OsmAndTileBox(Builder builder) {
      super(builder);
    }
    private OsmAndTileBox(boolean noInit) {}
    
    private static final OsmAndTileBox defaultInstance;
    public static OsmAndTileBox getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndTileBox getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTileBox_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTileBox_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private int left_;
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLeft() {
      return left_;
    }
    
    // required uint32 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private int right_;
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRight() {
      return right_;
    }
    
    // required uint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private int top_;
    public boolean hasTop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTop() {
      return top_;
    }
    
    // required uint32 bottom = 4;
    public static final int BOTTOM_FIELD_NUMBER = 4;
    private int bottom_;
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getBottom() {
      return bottom_;
    }
    
    private void initFields() {
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, bottom_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, bottom_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTileBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndTileBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTileBox_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTileBox_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndTileBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndTileBox.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTileBox getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTileBox build() {
        net.osmand.binary.OsmandOdb.OsmAndTileBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndTileBox buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndTileBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTileBox buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndTileBox result = new net.osmand.binary.OsmandOdb.OsmAndTileBox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bottom_ = bottom_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndTileBox) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndTileBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndTileBox other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              left_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              right_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              top_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bottom_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 left = 1;
      private int left_ ;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLeft() {
        return left_;
      }
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000001;
        left_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000001);
        left_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 right = 2;
      private int right_ ;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRight() {
        return right_;
      }
      public Builder setRight(int value) {
        bitField0_ |= 0x00000002;
        right_ = value;
        onChanged();
        return this;
      }
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        right_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 top = 3;
      private int top_ ;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTop() {
        return top_;
      }
      public Builder setTop(int value) {
        bitField0_ |= 0x00000004;
        top_ = value;
        onChanged();
        return this;
      }
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        top_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 bottom = 4;
      private int bottom_ ;
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBottom() {
        return bottom_;
      }
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000008;
        bottom_ = value;
        onChanged();
        return this;
      }
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bottom_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndTileBox)
    }
    
    static {
      defaultInstance = new OsmAndTileBox(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndTileBox)
  }
  
  public interface StringTableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string s = 1;
    java.util.List<String> getSList();
    int getSCount();
    String getS(int index);
  }
  public static final class StringTable extends
      com.google.protobuf.GeneratedMessage
      implements StringTableOrBuilder {
    // Use StringTable.newBuilder() to construct.
    private StringTable(Builder builder) {
      super(builder);
    }
    private StringTable(boolean noInit) {}
    
    private static final StringTable defaultInstance;
    public static StringTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public StringTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StringTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StringTable_fieldAccessorTable;
    }
    
    // repeated string s = 1;
    public static final int S_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList s_;
    public java.util.List<String>
        getSList() {
      return s_;
    }
    public int getSCount() {
      return s_.size();
    }
    public String getS(int index) {
      return s_.get(index);
    }
    
    private void initFields() {
      s_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < s_.size(); i++) {
        output.writeBytes(1, s_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < s_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(s_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.StringTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.StringTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StringTable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StringTable_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.StringTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        s_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.StringTable.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.StringTable getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.StringTable build() {
        net.osmand.binary.OsmandOdb.StringTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.StringTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.StringTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.StringTable buildPartial() {
        net.osmand.binary.OsmandOdb.StringTable result = new net.osmand.binary.OsmandOdb.StringTable(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          s_ = new com.google.protobuf.UnmodifiableLazyStringList(
              s_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.s_ = s_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.StringTable) {
          return mergeFrom((net.osmand.binary.OsmandOdb.StringTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.StringTable other) {
        if (other == net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance()) return this;
        if (!other.s_.isEmpty()) {
          if (s_.isEmpty()) {
            s_ = other.s_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSIsMutable();
            s_.addAll(other.s_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensureSIsMutable();
              s_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string s = 1;
      private com.google.protobuf.LazyStringList s_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          s_ = new com.google.protobuf.LazyStringArrayList(s_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getSList() {
        return java.util.Collections.unmodifiableList(s_);
      }
      public int getSCount() {
        return s_.size();
      }
      public String getS(int index) {
        return s_.get(index);
      }
      public Builder setS(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSIsMutable();
        s_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addS(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSIsMutable();
        s_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllS(
          java.lang.Iterable<String> values) {
        ensureSIsMutable();
        super.addAll(values, s_);
        onChanged();
        return this;
      }
      public Builder clearS() {
        s_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addS(com.google.protobuf.ByteString value) {
        ensureSIsMutable();
        s_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.StringTable)
    }
    
    static {
      defaultInstance = new StringTable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.StringTable)
  }
  
  public interface IndexedStringTableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string prefix = 1;
    boolean hasPrefix();
    String getPrefix();
    
    // repeated string key = 3;
    java.util.List<String> getKeyList();
    int getKeyCount();
    String getKey(int index);
    
    // repeated fixed32 val = 4;
    java.util.List<java.lang.Integer> getValList();
    int getValCount();
    int getVal(int index);
    
    // repeated .OsmAnd.OBF.IndexedStringTable subtables = 5;
    java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable> 
        getSubtablesList();
    net.osmand.binary.OsmandOdb.IndexedStringTable getSubtables(int index);
    int getSubtablesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
        getSubtablesOrBuilderList();
    net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getSubtablesOrBuilder(
        int index);
  }
  public static final class IndexedStringTable extends
      com.google.protobuf.GeneratedMessage
      implements IndexedStringTableOrBuilder {
    // Use IndexedStringTable.newBuilder() to construct.
    private IndexedStringTable(Builder builder) {
      super(builder);
    }
    private IndexedStringTable(boolean noInit) {}
    
    private static final IndexedStringTable defaultInstance;
    public static IndexedStringTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public IndexedStringTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IndexedStringTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IndexedStringTable_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string prefix = 1;
    public static final int PREFIX_FIELD_NUMBER = 1;
    private java.lang.Object prefix_;
    public boolean hasPrefix() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPrefix() {
      java.lang.Object ref = prefix_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          prefix_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPrefixBytes() {
      java.lang.Object ref = prefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        prefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string key = 3;
    public static final int KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList key_;
    public java.util.List<String>
        getKeyList() {
      return key_;
    }
    public int getKeyCount() {
      return key_.size();
    }
    public String getKey(int index) {
      return key_.get(index);
    }
    
    // repeated fixed32 val = 4;
    public static final int VAL_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> val_;
    public java.util.List<java.lang.Integer>
        getValList() {
      return val_;
    }
    public int getValCount() {
      return val_.size();
    }
    public int getVal(int index) {
      return val_.get(index);
    }
    
    // repeated .OsmAnd.OBF.IndexedStringTable subtables = 5;
    public static final int SUBTABLES_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable> subtables_;
    public java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable> getSubtablesList() {
      return subtables_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
        getSubtablesOrBuilderList() {
      return subtables_;
    }
    public int getSubtablesCount() {
      return subtables_.size();
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTable getSubtables(int index) {
      return subtables_.get(index);
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getSubtablesOrBuilder(
        int index) {
      return subtables_.get(index);
    }
    
    private void initFields() {
      prefix_ = "";
      key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      val_ = java.util.Collections.emptyList();;
      subtables_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPrefixBytes());
      }
      for (int i = 0; i < key_.size(); i++) {
        output.writeBytes(3, key_.getByteString(i));
      }
      for (int i = 0; i < val_.size(); i++) {
        output.writeFixed32(4, val_.get(i));
      }
      for (int i = 0; i < subtables_.size(); i++) {
        output.writeMessage(5, subtables_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPrefixBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < key_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(key_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValList().size();
        size += dataSize;
        size += 1 * getValList().size();
      }
      for (int i = 0; i < subtables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, subtables_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IndexedStringTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.IndexedStringTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IndexedStringTable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IndexedStringTable_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubtablesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        prefix_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (subtablesBuilder_ == null) {
          subtables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          subtablesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.IndexedStringTable.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.IndexedStringTable getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.IndexedStringTable build() {
        net.osmand.binary.OsmandOdb.IndexedStringTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.IndexedStringTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.IndexedStringTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.IndexedStringTable buildPartial() {
        net.osmand.binary.OsmandOdb.IndexedStringTable result = new net.osmand.binary.OsmandOdb.IndexedStringTable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prefix_ = prefix_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          key_ = new com.google.protobuf.UnmodifiableLazyStringList(
              key_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = java.util.Collections.unmodifiableList(val_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.val_ = val_;
        if (subtablesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            subtables_ = java.util.Collections.unmodifiableList(subtables_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.subtables_ = subtables_;
        } else {
          result.subtables_ = subtablesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.IndexedStringTable) {
          return mergeFrom((net.osmand.binary.OsmandOdb.IndexedStringTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.IndexedStringTable other) {
        if (other == net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance()) return this;
        if (other.hasPrefix()) {
          setPrefix(other.getPrefix());
        }
        if (!other.key_.isEmpty()) {
          if (key_.isEmpty()) {
            key_ = other.key_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureKeyIsMutable();
            key_.addAll(other.key_);
          }
          onChanged();
        }
        if (!other.val_.isEmpty()) {
          if (val_.isEmpty()) {
            val_ = other.val_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValIsMutable();
            val_.addAll(other.val_);
          }
          onChanged();
        }
        if (subtablesBuilder_ == null) {
          if (!other.subtables_.isEmpty()) {
            if (subtables_.isEmpty()) {
              subtables_ = other.subtables_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSubtablesIsMutable();
              subtables_.addAll(other.subtables_);
            }
            onChanged();
          }
        } else {
          if (!other.subtables_.isEmpty()) {
            if (subtablesBuilder_.isEmpty()) {
              subtablesBuilder_.dispose();
              subtablesBuilder_ = null;
              subtables_ = other.subtables_;
              bitField0_ = (bitField0_ & ~0x00000008);
              subtablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubtablesFieldBuilder() : null;
            } else {
              subtablesBuilder_.addAllMessages(other.subtables_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              prefix_ = input.readBytes();
              break;
            }
            case 26: {
              ensureKeyIsMutable();
              key_.add(input.readBytes());
              break;
            }
            case 37: {
              ensureValIsMutable();
              val_.add(input.readFixed32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addVal(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.IndexedStringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtables(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string prefix = 1;
      private java.lang.Object prefix_ = "";
      public boolean hasPrefix() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPrefix() {
        java.lang.Object ref = prefix_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          prefix_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPrefix(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        prefix_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrefix() {
        bitField0_ = (bitField0_ & ~0x00000001);
        prefix_ = getDefaultInstance().getPrefix();
        onChanged();
        return this;
      }
      void setPrefix(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        prefix_ = value;
        onChanged();
      }
      
      // repeated string key = 3;
      private com.google.protobuf.LazyStringList key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeyIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          key_ = new com.google.protobuf.LazyStringArrayList(key_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getKeyList() {
        return java.util.Collections.unmodifiableList(key_);
      }
      public int getKeyCount() {
        return key_.size();
      }
      public String getKey(int index) {
        return key_.get(index);
      }
      public Builder setKey(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllKey(
          java.lang.Iterable<String> values) {
        ensureKeyIsMutable();
        super.addAll(values, key_);
        onChanged();
        return this;
      }
      public Builder clearKey() {
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addKey(com.google.protobuf.ByteString value) {
        ensureKeyIsMutable();
        key_.add(value);
        onChanged();
      }
      
      // repeated fixed32 val = 4;
      private java.util.List<java.lang.Integer> val_ = java.util.Collections.emptyList();;
      private void ensureValIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          val_ = new java.util.ArrayList<java.lang.Integer>(val_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getValList() {
        return java.util.Collections.unmodifiableList(val_);
      }
      public int getValCount() {
        return val_.size();
      }
      public int getVal(int index) {
        return val_.get(index);
      }
      public Builder setVal(
          int index, int value) {
        ensureValIsMutable();
        val_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addVal(int value) {
        ensureValIsMutable();
        val_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllVal(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValIsMutable();
        super.addAll(values, val_);
        onChanged();
        return this;
      }
      public Builder clearVal() {
        val_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.IndexedStringTable subtables = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable> subtables_ =
        java.util.Collections.emptyList();
      private void ensureSubtablesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          subtables_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.IndexedStringTable>(subtables_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> subtablesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable> getSubtablesList() {
        if (subtablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subtables_);
        } else {
          return subtablesBuilder_.getMessageList();
        }
      }
      public int getSubtablesCount() {
        if (subtablesBuilder_ == null) {
          return subtables_.size();
        } else {
          return subtablesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable getSubtables(int index) {
        if (subtablesBuilder_ == null) {
          return subtables_.get(index);
        } else {
          return subtablesBuilder_.getMessage(index);
        }
      }
      public Builder setSubtables(
          int index, net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (subtablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtablesIsMutable();
          subtables_.set(index, value);
          onChanged();
        } else {
          subtablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubtables(
          int index, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder builderForValue) {
        if (subtablesBuilder_ == null) {
          ensureSubtablesIsMutable();
          subtables_.set(index, builderForValue.build());
          onChanged();
        } else {
          subtablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubtables(net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (subtablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtablesIsMutable();
          subtables_.add(value);
          onChanged();
        } else {
          subtablesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubtables(
          int index, net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (subtablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtablesIsMutable();
          subtables_.add(index, value);
          onChanged();
        } else {
          subtablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubtables(
          net.osmand.binary.OsmandOdb.IndexedStringTable.Builder builderForValue) {
        if (subtablesBuilder_ == null) {
          ensureSubtablesIsMutable();
          subtables_.add(builderForValue.build());
          onChanged();
        } else {
          subtablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubtables(
          int index, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder builderForValue) {
        if (subtablesBuilder_ == null) {
          ensureSubtablesIsMutable();
          subtables_.add(index, builderForValue.build());
          onChanged();
        } else {
          subtablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubtables(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.IndexedStringTable> values) {
        if (subtablesBuilder_ == null) {
          ensureSubtablesIsMutable();
          super.addAll(values, subtables_);
          onChanged();
        } else {
          subtablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubtables() {
        if (subtablesBuilder_ == null) {
          subtables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          subtablesBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubtables(int index) {
        if (subtablesBuilder_ == null) {
          ensureSubtablesIsMutable();
          subtables_.remove(index);
          onChanged();
        } else {
          subtablesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable.Builder getSubtablesBuilder(
          int index) {
        return getSubtablesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getSubtablesOrBuilder(
          int index) {
        if (subtablesBuilder_ == null) {
          return subtables_.get(index);  } else {
          return subtablesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
           getSubtablesOrBuilderList() {
        if (subtablesBuilder_ != null) {
          return subtablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subtables_);
        }
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable.Builder addSubtablesBuilder() {
        return getSubtablesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable.Builder addSubtablesBuilder(
          int index) {
        return getSubtablesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.IndexedStringTable.Builder> 
           getSubtablesBuilderList() {
        return getSubtablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
          getSubtablesFieldBuilder() {
        if (subtablesBuilder_ == null) {
          subtablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder>(
                  subtables_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          subtables_ = null;
        }
        return subtablesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.IndexedStringTable)
    }
    
    static {
      defaultInstance = new IndexedStringTable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.IndexedStringTable)
  }
  
  public interface OsmAndMapIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 2;
    boolean hasName();
    String getName();
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex.MapEncodingRule rules = 4;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> 
        getRulesList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule getRules(int index);
    int getRulesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder> 
        getRulesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder getRulesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex.MapRootLevel levels = 5;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> 
        getLevelsList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel getLevels(int index);
    int getLevelsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder> 
        getLevelsOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder getLevelsOrBuilder(
        int index);
  }
  public static final class OsmAndMapIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndMapIndexOrBuilder {
    // Use OsmAndMapIndex.newBuilder() to construct.
    private OsmAndMapIndex(Builder builder) {
      super(builder);
    }
    private OsmAndMapIndex(boolean noInit) {}
    
    private static final OsmAndMapIndex defaultInstance;
    public static OsmAndMapIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndMapIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_fieldAccessorTable;
    }
    
    public interface MapEncodingRuleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string tag = 3;
      boolean hasTag();
      String getTag();
      
      // optional string value = 5;
      boolean hasValue();
      String getValue();
      
      // optional uint32 id = 7;
      boolean hasId();
      int getId();
      
      // optional uint32 minZoom = 9;
      boolean hasMinZoom();
      int getMinZoom();
      
      // optional uint32 type = 10;
      boolean hasType();
      int getType();
    }
    public static final class MapEncodingRule extends
        com.google.protobuf.GeneratedMessage
        implements MapEncodingRuleOrBuilder {
      // Use MapEncodingRule.newBuilder() to construct.
      private MapEncodingRule(Builder builder) {
        super(builder);
      }
      private MapEncodingRule(boolean noInit) {}
      
      private static final MapEncodingRule defaultInstance;
      public static MapEncodingRule getDefaultInstance() {
        return defaultInstance;
      }
      
      public MapEncodingRule getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string tag = 3;
      public static final int TAG_FIELD_NUMBER = 3;
      private java.lang.Object tag_;
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTag() {
        java.lang.Object ref = tag_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            tag_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getTagBytes() {
        java.lang.Object ref = tag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          tag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional string value = 5;
      public static final int VALUE_FIELD_NUMBER = 5;
      private java.lang.Object value_;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            value_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional uint32 id = 7;
      public static final int ID_FIELD_NUMBER = 7;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getId() {
        return id_;
      }
      
      // optional uint32 minZoom = 9;
      public static final int MINZOOM_FIELD_NUMBER = 9;
      private int minZoom_;
      public boolean hasMinZoom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMinZoom() {
        return minZoom_;
      }
      
      // optional uint32 type = 10;
      public static final int TYPE_FIELD_NUMBER = 10;
      private int type_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getType() {
        return type_;
      }
      
      private void initFields() {
        tag_ = "";
        value_ = "";
        id_ = 0;
        minZoom_ = 0;
        type_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasTag()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(3, getTagBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(5, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(7, id_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(9, minZoom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(10, type_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getTagBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, id_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, minZoom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, type_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          tag_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          minZoom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule build() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule result = new net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tag_ = tag_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.minZoom_ = minZoom_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.type_ = type_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.getDefaultInstance()) return this;
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasMinZoom()) {
            setMinZoom(other.getMinZoom());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasTag()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 26: {
                bitField0_ |= 0x00000001;
                tag_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000004;
                id_ = input.readUInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000008;
                minZoom_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000010;
                type_ = input.readUInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string tag = 3;
        private java.lang.Object tag_ = "";
        public boolean hasTag() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getTag() {
          java.lang.Object ref = tag_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            tag_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setTag(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          tag_ = value;
          onChanged();
          return this;
        }
        public Builder clearTag() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tag_ = getDefaultInstance().getTag();
          onChanged();
          return this;
        }
        void setTag(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          tag_ = value;
          onChanged();
        }
        
        // optional string value = 5;
        private java.lang.Object value_ = "";
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValue(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        void setValue(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
        }
        
        // optional uint32 id = 7;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000004;
          id_ = value;
          onChanged();
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          id_ = 0;
          onChanged();
          return this;
        }
        
        // optional uint32 minZoom = 9;
        private int minZoom_ ;
        public boolean hasMinZoom() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getMinZoom() {
          return minZoom_;
        }
        public Builder setMinZoom(int value) {
          bitField0_ |= 0x00000008;
          minZoom_ = value;
          onChanged();
          return this;
        }
        public Builder clearMinZoom() {
          bitField0_ = (bitField0_ & ~0x00000008);
          minZoom_ = 0;
          onChanged();
          return this;
        }
        
        // optional uint32 type = 10;
        private int type_ ;
        public boolean hasType() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public int getType() {
          return type_;
        }
        public Builder setType(int value) {
          bitField0_ |= 0x00000010;
          type_ = value;
          onChanged();
          return this;
        }
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000010);
          type_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndMapIndex.MapEncodingRule)
      }
      
      static {
        defaultInstance = new MapEncodingRule(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndMapIndex.MapEncodingRule)
    }
    
    public interface MapRootLevelOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required int32 maxZoom = 1;
      boolean hasMaxZoom();
      int getMaxZoom();
      
      // required int32 minZoom = 2;
      boolean hasMinZoom();
      int getMinZoom();
      
      // required int32 left = 3;
      boolean hasLeft();
      int getLeft();
      
      // required int32 right = 4;
      boolean hasRight();
      int getRight();
      
      // required int32 top = 5;
      boolean hasTop();
      int getTop();
      
      // required int32 bottom = 6;
      boolean hasBottom();
      int getBottom();
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
      java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> 
          getBoxesList();
      net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index);
      int getBoxesCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
          getBoxesOrBuilderList();
      net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
          int index);
      
      // repeated .OsmAnd.OBF.MapDataBlock blocks = 15;
      java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock> 
          getBlocksList();
      net.osmand.binary.OsmandOdb.MapDataBlock getBlocks(int index);
      int getBlocksCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder> 
          getBlocksOrBuilderList();
      net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder getBlocksOrBuilder(
          int index);
    }
    public static final class MapRootLevel extends
        com.google.protobuf.GeneratedMessage
        implements MapRootLevelOrBuilder {
      // Use MapRootLevel.newBuilder() to construct.
      private MapRootLevel(Builder builder) {
        super(builder);
      }
      private MapRootLevel(boolean noInit) {}
      
      private static final MapRootLevel defaultInstance;
      public static MapRootLevel getDefaultInstance() {
        return defaultInstance;
      }
      
      public MapRootLevel getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required int32 maxZoom = 1;
      public static final int MAXZOOM_FIELD_NUMBER = 1;
      private int maxZoom_;
      public boolean hasMaxZoom() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMaxZoom() {
        return maxZoom_;
      }
      
      // required int32 minZoom = 2;
      public static final int MINZOOM_FIELD_NUMBER = 2;
      private int minZoom_;
      public boolean hasMinZoom() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMinZoom() {
        return minZoom_;
      }
      
      // required int32 left = 3;
      public static final int LEFT_FIELD_NUMBER = 3;
      private int left_;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLeft() {
        return left_;
      }
      
      // required int32 right = 4;
      public static final int RIGHT_FIELD_NUMBER = 4;
      private int right_;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRight() {
        return right_;
      }
      
      // required int32 top = 5;
      public static final int TOP_FIELD_NUMBER = 5;
      private int top_;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getTop() {
        return top_;
      }
      
      // required int32 bottom = 6;
      public static final int BOTTOM_FIELD_NUMBER = 6;
      private int bottom_;
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getBottom() {
        return bottom_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> boxes_;
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> getBoxesList() {
        return boxes_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
          getBoxesOrBuilderList() {
        return boxes_;
      }
      public int getBoxesCount() {
        return boxes_.size();
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
          int index) {
        return boxes_.get(index);
      }
      
      // repeated .OsmAnd.OBF.MapDataBlock blocks = 15;
      public static final int BLOCKS_FIELD_NUMBER = 15;
      private java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock> blocks_;
      public java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock> getBlocksList() {
        return blocks_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder> 
          getBlocksOrBuilderList() {
        return blocks_;
      }
      public int getBlocksCount() {
        return blocks_.size();
      }
      public net.osmand.binary.OsmandOdb.MapDataBlock getBlocks(int index) {
        return blocks_.get(index);
      }
      public net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder getBlocksOrBuilder(
          int index) {
        return blocks_.get(index);
      }
      
      private void initFields() {
        maxZoom_ = 0;
        minZoom_ = 0;
        left_ = 0;
        right_ = 0;
        top_ = 0;
        bottom_ = 0;
        boxes_ = java.util.Collections.emptyList();
        blocks_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasMaxZoom()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMinZoom()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLeft()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRight()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTop()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBottom()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getBoxesCount(); i++) {
          if (!getBoxes(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getBlocksCount(); i++) {
          if (!getBlocks(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, maxZoom_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, minZoom_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, left_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, right_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, top_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, bottom_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          output.writeMessage(7, boxes_.get(i));
        }
        for (int i = 0; i < blocks_.size(); i++) {
          output.writeMessage(15, blocks_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, maxZoom_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, minZoom_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, left_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, right_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, top_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, bottom_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, boxes_.get(i));
        }
        for (int i = 0; i < blocks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, blocks_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBoxesFieldBuilder();
            getBlocksFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          maxZoom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          minZoom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          left_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          right_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          top_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          bottom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            boxesBuilder_.clear();
          }
          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel build() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel result = new net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.maxZoom_ = maxZoom_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.minZoom_ = minZoom_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.left_ = left_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.right_ = right_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.top_ = top_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.bottom_ = bottom_;
          if (boxesBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              boxes_ = java.util.Collections.unmodifiableList(boxes_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.boxes_ = boxes_;
          } else {
            result.boxes_ = boxesBuilder_.build();
          }
          if (blocksBuilder_ == null) {
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
              blocks_ = java.util.Collections.unmodifiableList(blocks_);
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.blocks_ = blocks_;
          } else {
            result.blocks_ = blocksBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.getDefaultInstance()) return this;
          if (other.hasMaxZoom()) {
            setMaxZoom(other.getMaxZoom());
          }
          if (other.hasMinZoom()) {
            setMinZoom(other.getMinZoom());
          }
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (boxesBuilder_ == null) {
            if (!other.boxes_.isEmpty()) {
              if (boxes_.isEmpty()) {
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureBoxesIsMutable();
                boxes_.addAll(other.boxes_);
              }
              onChanged();
            }
          } else {
            if (!other.boxes_.isEmpty()) {
              if (boxesBuilder_.isEmpty()) {
                boxesBuilder_.dispose();
                boxesBuilder_ = null;
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000040);
                boxesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBoxesFieldBuilder() : null;
              } else {
                boxesBuilder_.addAllMessages(other.boxes_);
              }
            }
          }
          if (blocksBuilder_ == null) {
            if (!other.blocks_.isEmpty()) {
              if (blocks_.isEmpty()) {
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureBlocksIsMutable();
                blocks_.addAll(other.blocks_);
              }
              onChanged();
            }
          } else {
            if (!other.blocks_.isEmpty()) {
              if (blocksBuilder_.isEmpty()) {
                blocksBuilder_.dispose();
                blocksBuilder_ = null;
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000080);
                blocksBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBlocksFieldBuilder() : null;
              } else {
                blocksBuilder_.addAllMessages(other.blocks_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasMaxZoom()) {
            
            return false;
          }
          if (!hasMinZoom()) {
            
            return false;
          }
          if (!hasLeft()) {
            
            return false;
          }
          if (!hasRight()) {
            
            return false;
          }
          if (!hasTop()) {
            
            return false;
          }
          if (!hasBottom()) {
            
            return false;
          }
          for (int i = 0; i < getBoxesCount(); i++) {
            if (!getBoxes(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getBlocksCount(); i++) {
            if (!getBlocks(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                maxZoom_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                minZoom_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                left_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                right_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                top_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                bottom_ = input.readInt32();
                break;
              }
              case 58: {
                net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
              case 122: {
                net.osmand.binary.OsmandOdb.MapDataBlock.Builder subBuilder = net.osmand.binary.OsmandOdb.MapDataBlock.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBlocks(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 maxZoom = 1;
        private int maxZoom_ ;
        public boolean hasMaxZoom() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getMaxZoom() {
          return maxZoom_;
        }
        public Builder setMaxZoom(int value) {
          bitField0_ |= 0x00000001;
          maxZoom_ = value;
          onChanged();
          return this;
        }
        public Builder clearMaxZoom() {
          bitField0_ = (bitField0_ & ~0x00000001);
          maxZoom_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 minZoom = 2;
        private int minZoom_ ;
        public boolean hasMinZoom() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getMinZoom() {
          return minZoom_;
        }
        public Builder setMinZoom(int value) {
          bitField0_ |= 0x00000002;
          minZoom_ = value;
          onChanged();
          return this;
        }
        public Builder clearMinZoom() {
          bitField0_ = (bitField0_ & ~0x00000002);
          minZoom_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 left = 3;
        private int left_ ;
        public boolean hasLeft() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getLeft() {
          return left_;
        }
        public Builder setLeft(int value) {
          bitField0_ |= 0x00000004;
          left_ = value;
          onChanged();
          return this;
        }
        public Builder clearLeft() {
          bitField0_ = (bitField0_ & ~0x00000004);
          left_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 right = 4;
        private int right_ ;
        public boolean hasRight() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getRight() {
          return right_;
        }
        public Builder setRight(int value) {
          bitField0_ |= 0x00000008;
          right_ = value;
          onChanged();
          return this;
        }
        public Builder clearRight() {
          bitField0_ = (bitField0_ & ~0x00000008);
          right_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 top = 5;
        private int top_ ;
        public boolean hasTop() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public int getTop() {
          return top_;
        }
        public Builder setTop(int value) {
          bitField0_ |= 0x00000010;
          top_ = value;
          onChanged();
          return this;
        }
        public Builder clearTop() {
          bitField0_ = (bitField0_ & ~0x00000010);
          top_ = 0;
          onChanged();
          return this;
        }
        
        // required int32 bottom = 6;
        private int bottom_ ;
        public boolean hasBottom() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public int getBottom() {
          return bottom_;
        }
        public Builder setBottom(int value) {
          bitField0_ |= 0x00000020;
          bottom_ = value;
          onChanged();
          return this;
        }
        public Builder clearBottom() {
          bitField0_ = (bitField0_ & ~0x00000020);
          bottom_ = 0;
          onChanged();
          return this;
        }
        
        // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
        private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> boxes_ =
          java.util.Collections.emptyList();
        private void ensureBoxesIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            boxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox>(boxes_);
            bitField0_ |= 0x00000040;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> boxesBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> getBoxesList() {
          if (boxesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(boxes_);
          } else {
            return boxesBuilder_.getMessageList();
          }
        }
        public int getBoxesCount() {
          if (boxesBuilder_ == null) {
            return boxes_.size();
          } else {
            return boxesBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);
          } else {
            return boxesBuilder_.getMessage(index);
          }
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.set(index, value);
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.set(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(index, value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addBoxes(
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> values) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            super.addAll(values, boxes_);
            onChanged();
          } else {
            boxesBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearBoxes() {
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            boxesBuilder_.clear();
          }
          return this;
        }
        public Builder removeBoxes(int index) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.remove(index);
            onChanged();
          } else {
            boxesBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder getBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
            int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);  } else {
            return boxesBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
             getBoxesOrBuilderList() {
          if (boxesBuilder_ != null) {
            return boxesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(boxes_);
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder addBoxesBuilder() {
          return getBoxesFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder addBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder> 
             getBoxesBuilderList() {
          return getBoxesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
            getBoxesFieldBuilder() {
          if (boxesBuilder_ == null) {
            boxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder>(
                    boxes_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            boxes_ = null;
          }
          return boxesBuilder_;
        }
        
        // repeated .OsmAnd.OBF.MapDataBlock blocks = 15;
        private java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock> blocks_ =
          java.util.Collections.emptyList();
        private void ensureBlocksIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            blocks_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.MapDataBlock>(blocks_);
            bitField0_ |= 0x00000080;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.MapDataBlock, net.osmand.binary.OsmandOdb.MapDataBlock.Builder, net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder> blocksBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock> getBlocksList() {
          if (blocksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(blocks_);
          } else {
            return blocksBuilder_.getMessageList();
          }
        }
        public int getBlocksCount() {
          if (blocksBuilder_ == null) {
            return blocks_.size();
          } else {
            return blocksBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.MapDataBlock getBlocks(int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);
          } else {
            return blocksBuilder_.getMessage(index);
          }
        }
        public Builder setBlocks(
            int index, net.osmand.binary.OsmandOdb.MapDataBlock value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.set(index, value);
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setBlocks(
            int index, net.osmand.binary.OsmandOdb.MapDataBlock.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.set(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addBlocks(net.osmand.binary.OsmandOdb.MapDataBlock value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addBlocks(
            int index, net.osmand.binary.OsmandOdb.MapDataBlock value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(index, value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addBlocks(
            net.osmand.binary.OsmandOdb.MapDataBlock.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addBlocks(
            int index, net.osmand.binary.OsmandOdb.MapDataBlock.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllBlocks(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.MapDataBlock> values) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            super.addAll(values, blocks_);
            onChanged();
          } else {
            blocksBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearBlocks() {
          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }
        public Builder removeBlocks(int index) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.remove(index);
            onChanged();
          } else {
            blocksBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.MapDataBlock.Builder getBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder getBlocksOrBuilder(
            int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);  } else {
            return blocksBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder> 
             getBlocksOrBuilderList() {
          if (blocksBuilder_ != null) {
            return blocksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(blocks_);
          }
        }
        public net.osmand.binary.OsmandOdb.MapDataBlock.Builder addBlocksBuilder() {
          return getBlocksFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.MapDataBlock.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.MapDataBlock.Builder addBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.MapDataBlock.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.MapDataBlock.Builder> 
             getBlocksBuilderList() {
          return getBlocksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.MapDataBlock, net.osmand.binary.OsmandOdb.MapDataBlock.Builder, net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder> 
            getBlocksFieldBuilder() {
          if (blocksBuilder_ == null) {
            blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.MapDataBlock, net.osmand.binary.OsmandOdb.MapDataBlock.Builder, net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder>(
                    blocks_,
                    ((bitField0_ & 0x00000080) == 0x00000080),
                    getParentForChildren(),
                    isClean());
            blocks_ = null;
          }
          return blocksBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndMapIndex.MapRootLevel)
      }
      
      static {
        defaultInstance = new MapRootLevel(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndMapIndex.MapRootLevel)
    }
    
    public interface MapDataBoxOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required sint32 left = 1;
      boolean hasLeft();
      int getLeft();
      
      // required sint32 right = 2;
      boolean hasRight();
      int getRight();
      
      // required sint32 top = 3;
      boolean hasTop();
      int getTop();
      
      // required sint32 bottom = 4;
      boolean hasBottom();
      int getBottom();
      
      // optional fixed32 shiftToMapData = 5;
      boolean hasShiftToMapData();
      int getShiftToMapData();
      
      // optional bool ocean = 6;
      boolean hasOcean();
      boolean getOcean();
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
      java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> 
          getBoxesList();
      net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index);
      int getBoxesCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
          getBoxesOrBuilderList();
      net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
          int index);
    }
    public static final class MapDataBox extends
        com.google.protobuf.GeneratedMessage
        implements MapDataBoxOrBuilder {
      // Use MapDataBox.newBuilder() to construct.
      private MapDataBox(Builder builder) {
        super(builder);
      }
      private MapDataBox(boolean noInit) {}
      
      private static final MapDataBox defaultInstance;
      public static MapDataBox getDefaultInstance() {
        return defaultInstance;
      }
      
      public MapDataBox getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required sint32 left = 1;
      public static final int LEFT_FIELD_NUMBER = 1;
      private int left_;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLeft() {
        return left_;
      }
      
      // required sint32 right = 2;
      public static final int RIGHT_FIELD_NUMBER = 2;
      private int right_;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRight() {
        return right_;
      }
      
      // required sint32 top = 3;
      public static final int TOP_FIELD_NUMBER = 3;
      private int top_;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTop() {
        return top_;
      }
      
      // required sint32 bottom = 4;
      public static final int BOTTOM_FIELD_NUMBER = 4;
      private int bottom_;
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBottom() {
        return bottom_;
      }
      
      // optional fixed32 shiftToMapData = 5;
      public static final int SHIFTTOMAPDATA_FIELD_NUMBER = 5;
      private int shiftToMapData_;
      public boolean hasShiftToMapData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getShiftToMapData() {
        return shiftToMapData_;
      }
      
      // optional bool ocean = 6;
      public static final int OCEAN_FIELD_NUMBER = 6;
      private boolean ocean_;
      public boolean hasOcean() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getOcean() {
        return ocean_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> boxes_;
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> getBoxesList() {
        return boxes_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
          getBoxesOrBuilderList() {
        return boxes_;
      }
      public int getBoxesCount() {
        return boxes_.size();
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
          int index) {
        return boxes_.get(index);
      }
      
      private void initFields() {
        left_ = 0;
        right_ = 0;
        top_ = 0;
        bottom_ = 0;
        shiftToMapData_ = 0;
        ocean_ = false;
        boxes_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasLeft()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRight()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTop()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBottom()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getBoxesCount(); i++) {
          if (!getBoxes(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt32(2, right_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeSInt32(3, top_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeSInt32(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFixed32(5, shiftToMapData_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, ocean_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          output.writeMessage(7, boxes_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, right_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, top_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(5, shiftToMapData_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, ocean_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, boxes_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBoxesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          left_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          right_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          top_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          bottom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          shiftToMapData_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          ocean_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            boxesBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox build() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox result = new net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.left_ = left_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.right_ = right_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.top_ = top_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.bottom_ = bottom_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shiftToMapData_ = shiftToMapData_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.ocean_ = ocean_;
          if (boxesBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
              boxes_ = java.util.Collections.unmodifiableList(boxes_);
              bitField0_ = (bitField0_ & ~0x00000040);
            }
            result.boxes_ = boxes_;
          } else {
            result.boxes_ = boxesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance()) return this;
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (other.hasShiftToMapData()) {
            setShiftToMapData(other.getShiftToMapData());
          }
          if (other.hasOcean()) {
            setOcean(other.getOcean());
          }
          if (boxesBuilder_ == null) {
            if (!other.boxes_.isEmpty()) {
              if (boxes_.isEmpty()) {
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000040);
              } else {
                ensureBoxesIsMutable();
                boxes_.addAll(other.boxes_);
              }
              onChanged();
            }
          } else {
            if (!other.boxes_.isEmpty()) {
              if (boxesBuilder_.isEmpty()) {
                boxesBuilder_.dispose();
                boxesBuilder_ = null;
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000040);
                boxesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBoxesFieldBuilder() : null;
              } else {
                boxesBuilder_.addAllMessages(other.boxes_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasLeft()) {
            
            return false;
          }
          if (!hasRight()) {
            
            return false;
          }
          if (!hasTop()) {
            
            return false;
          }
          if (!hasBottom()) {
            
            return false;
          }
          for (int i = 0; i < getBoxesCount(); i++) {
            if (!getBoxes(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                left_ = input.readSInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                right_ = input.readSInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                top_ = input.readSInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                bottom_ = input.readSInt32();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                shiftToMapData_ = input.readFixed32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                ocean_ = input.readBool();
                break;
              }
              case 58: {
                net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required sint32 left = 1;
        private int left_ ;
        public boolean hasLeft() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getLeft() {
          return left_;
        }
        public Builder setLeft(int value) {
          bitField0_ |= 0x00000001;
          left_ = value;
          onChanged();
          return this;
        }
        public Builder clearLeft() {
          bitField0_ = (bitField0_ & ~0x00000001);
          left_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 right = 2;
        private int right_ ;
        public boolean hasRight() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getRight() {
          return right_;
        }
        public Builder setRight(int value) {
          bitField0_ |= 0x00000002;
          right_ = value;
          onChanged();
          return this;
        }
        public Builder clearRight() {
          bitField0_ = (bitField0_ & ~0x00000002);
          right_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 top = 3;
        private int top_ ;
        public boolean hasTop() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getTop() {
          return top_;
        }
        public Builder setTop(int value) {
          bitField0_ |= 0x00000004;
          top_ = value;
          onChanged();
          return this;
        }
        public Builder clearTop() {
          bitField0_ = (bitField0_ & ~0x00000004);
          top_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 bottom = 4;
        private int bottom_ ;
        public boolean hasBottom() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getBottom() {
          return bottom_;
        }
        public Builder setBottom(int value) {
          bitField0_ |= 0x00000008;
          bottom_ = value;
          onChanged();
          return this;
        }
        public Builder clearBottom() {
          bitField0_ = (bitField0_ & ~0x00000008);
          bottom_ = 0;
          onChanged();
          return this;
        }
        
        // optional fixed32 shiftToMapData = 5;
        private int shiftToMapData_ ;
        public boolean hasShiftToMapData() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public int getShiftToMapData() {
          return shiftToMapData_;
        }
        public Builder setShiftToMapData(int value) {
          bitField0_ |= 0x00000010;
          shiftToMapData_ = value;
          onChanged();
          return this;
        }
        public Builder clearShiftToMapData() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shiftToMapData_ = 0;
          onChanged();
          return this;
        }
        
        // optional bool ocean = 6;
        private boolean ocean_ ;
        public boolean hasOcean() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        public boolean getOcean() {
          return ocean_;
        }
        public Builder setOcean(boolean value) {
          bitField0_ |= 0x00000020;
          ocean_ = value;
          onChanged();
          return this;
        }
        public Builder clearOcean() {
          bitField0_ = (bitField0_ & ~0x00000020);
          ocean_ = false;
          onChanged();
          return this;
        }
        
        // repeated .OsmAnd.OBF.OsmAndMapIndex.MapDataBox boxes = 7;
        private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> boxes_ =
          java.util.Collections.emptyList();
        private void ensureBoxesIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            boxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox>(boxes_);
            bitField0_ |= 0x00000040;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> boxesBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> getBoxesList() {
          if (boxesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(boxes_);
          } else {
            return boxesBuilder_.getMessageList();
          }
        }
        public int getBoxesCount() {
          if (boxesBuilder_ == null) {
            return boxes_.size();
          } else {
            return boxesBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox getBoxes(int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);
          } else {
            return boxesBuilder_.getMessage(index);
          }
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.set(index, value);
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.set(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(index, value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addBoxes(
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox> values) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            super.addAll(values, boxes_);
            onChanged();
          } else {
            boxesBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearBoxes() {
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
          } else {
            boxesBuilder_.clear();
          }
          return this;
        }
        public Builder removeBoxes(int index) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.remove(index);
            onChanged();
          } else {
            boxesBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder getBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder getBoxesOrBuilder(
            int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);  } else {
            return boxesBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
             getBoxesOrBuilderList() {
          if (boxesBuilder_ != null) {
            return boxesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(boxes_);
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder addBoxesBuilder() {
          return getBoxesFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder addBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder> 
             getBoxesBuilderList() {
          return getBoxesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder> 
            getBoxesFieldBuilder() {
          if (boxesBuilder_ == null) {
            boxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBoxOrBuilder>(
                    boxes_,
                    ((bitField0_ & 0x00000040) == 0x00000040),
                    getParentForChildren(),
                    isClean());
            boxes_ = null;
          }
          return boxesBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndMapIndex.MapDataBox)
      }
      
      static {
        defaultInstance = new MapDataBox(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndMapIndex.MapDataBox)
    }
    
    private int bitField0_;
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex.MapEncodingRule rules = 4;
    public static final int RULES_FIELD_NUMBER = 4;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> rules_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> getRulesList() {
      return rules_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    public int getRulesCount() {
      return rules_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule getRules(int index) {
      return rules_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndMapIndex.MapRootLevel levels = 5;
    public static final int LEVELS_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> levels_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> getLevelsList() {
      return levels_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder> 
        getLevelsOrBuilderList() {
      return levels_;
    }
    public int getLevelsCount() {
      return levels_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel getLevels(int index) {
      return levels_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder getLevelsOrBuilder(
        int index) {
      return levels_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      rules_ = java.util.Collections.emptyList();
      levels_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRulesCount(); i++) {
        if (!getRules(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLevelsCount(); i++) {
        if (!getLevels(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getNameBytes());
      }
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(4, rules_.get(i));
      }
      for (int i = 0; i < levels_.size(); i++) {
        output.writeMessage(5, levels_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rules_.get(i));
      }
      for (int i = 0; i < levels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, levels_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndMapIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndMapIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndMapIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndMapIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndMapIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRulesFieldBuilder();
          getLevelsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rulesBuilder_.clear();
        }
        if (levelsBuilder_ == null) {
          levels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          levelsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndMapIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndMapIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndMapIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndMapIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndMapIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndMapIndex result = new net.osmand.binary.OsmandOdb.OsmAndMapIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
        if (levelsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            levels_ = java.util.Collections.unmodifiableList(levels_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.levels_ = levels_;
        } else {
          result.levels_ = levelsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndMapIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndMapIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndMapIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndMapIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        if (levelsBuilder_ == null) {
          if (!other.levels_.isEmpty()) {
            if (levels_.isEmpty()) {
              levels_ = other.levels_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLevelsIsMutable();
              levels_.addAll(other.levels_);
            }
            onChanged();
          }
        } else {
          if (!other.levels_.isEmpty()) {
            if (levelsBuilder_.isEmpty()) {
              levelsBuilder_.dispose();
              levelsBuilder_ = null;
              levels_ = other.levels_;
              bitField0_ = (bitField0_ & ~0x00000004);
              levelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLevelsFieldBuilder() : null;
            } else {
              levelsBuilder_.addAllMessages(other.levels_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getRulesCount(); i++) {
          if (!getRules(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLevelsCount(); i++) {
          if (!getLevels(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRules(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLevels(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapEncodingRule rules = 4;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rules_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule>(rules_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder> rulesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      public Builder setRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRules(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRules(
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRules(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          super.addAll(values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndMapIndex.MapRootLevel levels = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> levels_ =
        java.util.Collections.emptyList();
      private void ensureLevelsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          levels_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel>(levels_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder> levelsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> getLevelsList() {
        if (levelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(levels_);
        } else {
          return levelsBuilder_.getMessageList();
        }
      }
      public int getLevelsCount() {
        if (levelsBuilder_ == null) {
          return levels_.size();
        } else {
          return levelsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel getLevels(int index) {
        if (levelsBuilder_ == null) {
          return levels_.get(index);
        } else {
          return levelsBuilder_.getMessage(index);
        }
      }
      public Builder setLevels(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel value) {
        if (levelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelsIsMutable();
          levels_.set(index, value);
          onChanged();
        } else {
          levelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLevels(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder builderForValue) {
        if (levelsBuilder_ == null) {
          ensureLevelsIsMutable();
          levels_.set(index, builderForValue.build());
          onChanged();
        } else {
          levelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLevels(net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel value) {
        if (levelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelsIsMutable();
          levels_.add(value);
          onChanged();
        } else {
          levelsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLevels(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel value) {
        if (levelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelsIsMutable();
          levels_.add(index, value);
          onChanged();
        } else {
          levelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLevels(
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder builderForValue) {
        if (levelsBuilder_ == null) {
          ensureLevelsIsMutable();
          levels_.add(builderForValue.build());
          onChanged();
        } else {
          levelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLevels(
          int index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder builderForValue) {
        if (levelsBuilder_ == null) {
          ensureLevelsIsMutable();
          levels_.add(index, builderForValue.build());
          onChanged();
        } else {
          levelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLevels(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel> values) {
        if (levelsBuilder_ == null) {
          ensureLevelsIsMutable();
          super.addAll(values, levels_);
          onChanged();
        } else {
          levelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLevels() {
        if (levelsBuilder_ == null) {
          levels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          levelsBuilder_.clear();
        }
        return this;
      }
      public Builder removeLevels(int index) {
        if (levelsBuilder_ == null) {
          ensureLevelsIsMutable();
          levels_.remove(index);
          onChanged();
        } else {
          levelsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder getLevelsBuilder(
          int index) {
        return getLevelsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder getLevelsOrBuilder(
          int index) {
        if (levelsBuilder_ == null) {
          return levels_.get(index);  } else {
          return levelsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder> 
           getLevelsOrBuilderList() {
        if (levelsBuilder_ != null) {
          return levelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(levels_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder addLevelsBuilder() {
        return getLevelsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder addLevelsBuilder(
          int index) {
        return getLevelsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder> 
           getLevelsBuilderList() {
        return getLevelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder> 
          getLevelsFieldBuilder() {
        if (levelsBuilder_ == null) {
          levelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder, net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevelOrBuilder>(
                  levels_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          levels_ = null;
        }
        return levelsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndMapIndex)
    }
    
    static {
      defaultInstance = new OsmAndMapIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndMapIndex)
  }
  
  public interface MapDataBlockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 baseId = 10;
    boolean hasBaseId();
    long getBaseId();
    
    // repeated .OsmAnd.OBF.MapData dataObjects = 12;
    java.util.List<net.osmand.binary.OsmandOdb.MapData> 
        getDataObjectsList();
    net.osmand.binary.OsmandOdb.MapData getDataObjects(int index);
    int getDataObjectsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataOrBuilder> 
        getDataObjectsOrBuilderList();
    net.osmand.binary.OsmandOdb.MapDataOrBuilder getDataObjectsOrBuilder(
        int index);
    
    // optional .OsmAnd.OBF.StringTable stringTable = 15;
    boolean hasStringTable();
    net.osmand.binary.OsmandOdb.StringTable getStringTable();
    net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder();
  }
  public static final class MapDataBlock extends
      com.google.protobuf.GeneratedMessage
      implements MapDataBlockOrBuilder {
    // Use MapDataBlock.newBuilder() to construct.
    private MapDataBlock(Builder builder) {
      super(builder);
    }
    private MapDataBlock(boolean noInit) {}
    
    private static final MapDataBlock defaultInstance;
    public static MapDataBlock getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapDataBlock getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapDataBlock_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapDataBlock_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 baseId = 10;
    public static final int BASEID_FIELD_NUMBER = 10;
    private long baseId_;
    public boolean hasBaseId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getBaseId() {
      return baseId_;
    }
    
    // repeated .OsmAnd.OBF.MapData dataObjects = 12;
    public static final int DATAOBJECTS_FIELD_NUMBER = 12;
    private java.util.List<net.osmand.binary.OsmandOdb.MapData> dataObjects_;
    public java.util.List<net.osmand.binary.OsmandOdb.MapData> getDataObjectsList() {
      return dataObjects_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataOrBuilder> 
        getDataObjectsOrBuilderList() {
      return dataObjects_;
    }
    public int getDataObjectsCount() {
      return dataObjects_.size();
    }
    public net.osmand.binary.OsmandOdb.MapData getDataObjects(int index) {
      return dataObjects_.get(index);
    }
    public net.osmand.binary.OsmandOdb.MapDataOrBuilder getDataObjectsOrBuilder(
        int index) {
      return dataObjects_.get(index);
    }
    
    // optional .OsmAnd.OBF.StringTable stringTable = 15;
    public static final int STRINGTABLE_FIELD_NUMBER = 15;
    private net.osmand.binary.OsmandOdb.StringTable stringTable_;
    public boolean hasStringTable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
      return stringTable_;
    }
    public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
      return stringTable_;
    }
    
    private void initFields() {
      baseId_ = 0L;
      dataObjects_ = java.util.Collections.emptyList();
      stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getDataObjectsCount(); i++) {
        if (!getDataObjects(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(10, baseId_);
      }
      for (int i = 0; i < dataObjects_.size(); i++) {
        output.writeMessage(12, dataObjects_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(15, stringTable_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, baseId_);
      }
      for (int i = 0; i < dataObjects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, dataObjects_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, stringTable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.MapDataBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.MapDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapDataBlock_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapDataBlock_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.MapDataBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataObjectsFieldBuilder();
          getStringTableFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        baseId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataObjectsBuilder_ == null) {
          dataObjects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataObjectsBuilder_.clear();
        }
        if (stringTableBuilder_ == null) {
          stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
        } else {
          stringTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.MapDataBlock.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.MapDataBlock getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.MapDataBlock.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.MapDataBlock build() {
        net.osmand.binary.OsmandOdb.MapDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.MapDataBlock buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.MapDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.MapDataBlock buildPartial() {
        net.osmand.binary.OsmandOdb.MapDataBlock result = new net.osmand.binary.OsmandOdb.MapDataBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.baseId_ = baseId_;
        if (dataObjectsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            dataObjects_ = java.util.Collections.unmodifiableList(dataObjects_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.dataObjects_ = dataObjects_;
        } else {
          result.dataObjects_ = dataObjectsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (stringTableBuilder_ == null) {
          result.stringTable_ = stringTable_;
        } else {
          result.stringTable_ = stringTableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.MapDataBlock) {
          return mergeFrom((net.osmand.binary.OsmandOdb.MapDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.MapDataBlock other) {
        if (other == net.osmand.binary.OsmandOdb.MapDataBlock.getDefaultInstance()) return this;
        if (other.hasBaseId()) {
          setBaseId(other.getBaseId());
        }
        if (dataObjectsBuilder_ == null) {
          if (!other.dataObjects_.isEmpty()) {
            if (dataObjects_.isEmpty()) {
              dataObjects_ = other.dataObjects_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataObjectsIsMutable();
              dataObjects_.addAll(other.dataObjects_);
            }
            onChanged();
          }
        } else {
          if (!other.dataObjects_.isEmpty()) {
            if (dataObjectsBuilder_.isEmpty()) {
              dataObjectsBuilder_.dispose();
              dataObjectsBuilder_ = null;
              dataObjects_ = other.dataObjects_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataObjectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataObjectsFieldBuilder() : null;
            } else {
              dataObjectsBuilder_.addAllMessages(other.dataObjects_);
            }
          }
        }
        if (other.hasStringTable()) {
          mergeStringTable(other.getStringTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getDataObjectsCount(); i++) {
          if (!getDataObjects(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000001;
              baseId_ = input.readUInt64();
              break;
            }
            case 98: {
              net.osmand.binary.OsmandOdb.MapData.Builder subBuilder = net.osmand.binary.OsmandOdb.MapData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDataObjects(subBuilder.buildPartial());
              break;
            }
            case 122: {
              net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.StringTable.newBuilder();
              if (hasStringTable()) {
                subBuilder.mergeFrom(getStringTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStringTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 baseId = 10;
      private long baseId_ ;
      public boolean hasBaseId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getBaseId() {
        return baseId_;
      }
      public Builder setBaseId(long value) {
        bitField0_ |= 0x00000001;
        baseId_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        baseId_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.MapData dataObjects = 12;
      private java.util.List<net.osmand.binary.OsmandOdb.MapData> dataObjects_ =
        java.util.Collections.emptyList();
      private void ensureDataObjectsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dataObjects_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.MapData>(dataObjects_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.MapData, net.osmand.binary.OsmandOdb.MapData.Builder, net.osmand.binary.OsmandOdb.MapDataOrBuilder> dataObjectsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.MapData> getDataObjectsList() {
        if (dataObjectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataObjects_);
        } else {
          return dataObjectsBuilder_.getMessageList();
        }
      }
      public int getDataObjectsCount() {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.size();
        } else {
          return dataObjectsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.MapData getDataObjects(int index) {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.get(index);
        } else {
          return dataObjectsBuilder_.getMessage(index);
        }
      }
      public Builder setDataObjects(
          int index, net.osmand.binary.OsmandOdb.MapData value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.set(index, value);
          onChanged();
        } else {
          dataObjectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDataObjects(
          int index, net.osmand.binary.OsmandOdb.MapData.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDataObjects(net.osmand.binary.OsmandOdb.MapData value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.add(value);
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDataObjects(
          int index, net.osmand.binary.OsmandOdb.MapData value) {
        if (dataObjectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataObjectsIsMutable();
          dataObjects_.add(index, value);
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDataObjects(
          net.osmand.binary.OsmandOdb.MapData.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.add(builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDataObjects(
          int index, net.osmand.binary.OsmandOdb.MapData.Builder builderForValue) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataObjectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDataObjects(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.MapData> values) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          super.addAll(values, dataObjects_);
          onChanged();
        } else {
          dataObjectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDataObjects() {
        if (dataObjectsBuilder_ == null) {
          dataObjects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataObjectsBuilder_.clear();
        }
        return this;
      }
      public Builder removeDataObjects(int index) {
        if (dataObjectsBuilder_ == null) {
          ensureDataObjectsIsMutable();
          dataObjects_.remove(index);
          onChanged();
        } else {
          dataObjectsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.MapData.Builder getDataObjectsBuilder(
          int index) {
        return getDataObjectsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.MapDataOrBuilder getDataObjectsOrBuilder(
          int index) {
        if (dataObjectsBuilder_ == null) {
          return dataObjects_.get(index);  } else {
          return dataObjectsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.MapDataOrBuilder> 
           getDataObjectsOrBuilderList() {
        if (dataObjectsBuilder_ != null) {
          return dataObjectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataObjects_);
        }
      }
      public net.osmand.binary.OsmandOdb.MapData.Builder addDataObjectsBuilder() {
        return getDataObjectsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.MapData.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.MapData.Builder addDataObjectsBuilder(
          int index) {
        return getDataObjectsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.MapData.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.MapData.Builder> 
           getDataObjectsBuilderList() {
        return getDataObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.MapData, net.osmand.binary.OsmandOdb.MapData.Builder, net.osmand.binary.OsmandOdb.MapDataOrBuilder> 
          getDataObjectsFieldBuilder() {
        if (dataObjectsBuilder_ == null) {
          dataObjectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.MapData, net.osmand.binary.OsmandOdb.MapData.Builder, net.osmand.binary.OsmandOdb.MapDataOrBuilder>(
                  dataObjects_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          dataObjects_ = null;
        }
        return dataObjectsBuilder_;
      }
      
      // optional .OsmAnd.OBF.StringTable stringTable = 15;
      private net.osmand.binary.OsmandOdb.StringTable stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> stringTableBuilder_;
      public boolean hasStringTable() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
        if (stringTableBuilder_ == null) {
          return stringTable_;
        } else {
          return stringTableBuilder_.getMessage();
        }
      }
      public Builder setStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (stringTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stringTable_ = value;
          onChanged();
        } else {
          stringTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setStringTable(
          net.osmand.binary.OsmandOdb.StringTable.Builder builderForValue) {
        if (stringTableBuilder_ == null) {
          stringTable_ = builderForValue.build();
          onChanged();
        } else {
          stringTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (stringTableBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              stringTable_ != net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance()) {
            stringTable_ =
              net.osmand.binary.OsmandOdb.StringTable.newBuilder(stringTable_).mergeFrom(value).buildPartial();
          } else {
            stringTable_ = value;
          }
          onChanged();
        } else {
          stringTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearStringTable() {
        if (stringTableBuilder_ == null) {
          stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
          onChanged();
        } else {
          stringTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public net.osmand.binary.OsmandOdb.StringTable.Builder getStringTableBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStringTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
        if (stringTableBuilder_ != null) {
          return stringTableBuilder_.getMessageOrBuilder();
        } else {
          return stringTable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> 
          getStringTableFieldBuilder() {
        if (stringTableBuilder_ == null) {
          stringTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder>(
                  stringTable_,
                  getParentForChildren(),
                  isClean());
          stringTable_ = null;
        }
        return stringTableBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.MapDataBlock)
    }
    
    static {
      defaultInstance = new MapDataBlock(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.MapDataBlock)
  }
  
  public interface MapDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes coordinates = 1;
    boolean hasCoordinates();
    com.google.protobuf.ByteString getCoordinates();
    
    // optional bytes areaCoordinates = 2;
    boolean hasAreaCoordinates();
    com.google.protobuf.ByteString getAreaCoordinates();
    
    // repeated bytes polygonInnerCoordinates = 4;
    java.util.List<com.google.protobuf.ByteString> getPolygonInnerCoordinatesList();
    int getPolygonInnerCoordinatesCount();
    com.google.protobuf.ByteString getPolygonInnerCoordinates(int index);
    
    // optional bytes additionalTypes = 6;
    boolean hasAdditionalTypes();
    com.google.protobuf.ByteString getAdditionalTypes();
    
    // required bytes types = 7;
    boolean hasTypes();
    com.google.protobuf.ByteString getTypes();
    
    // optional bytes stringNames = 10;
    boolean hasStringNames();
    com.google.protobuf.ByteString getStringNames();
    
    // required sint64 id = 12;
    boolean hasId();
    long getId();
    
    // optional bytes rasterBytes = 15;
    boolean hasRasterBytes();
    com.google.protobuf.ByteString getRasterBytes();
  }
  public static final class MapData extends
      com.google.protobuf.GeneratedMessage
      implements MapDataOrBuilder {
    // Use MapData.newBuilder() to construct.
    private MapData(Builder builder) {
      super(builder);
    }
    private MapData(boolean noInit) {}
    
    private static final MapData defaultInstance;
    public static MapData getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes coordinates = 1;
    public static final int COORDINATES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString coordinates_;
    public boolean hasCoordinates() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getCoordinates() {
      return coordinates_;
    }
    
    // optional bytes areaCoordinates = 2;
    public static final int AREACOORDINATES_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString areaCoordinates_;
    public boolean hasAreaCoordinates() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getAreaCoordinates() {
      return areaCoordinates_;
    }
    
    // repeated bytes polygonInnerCoordinates = 4;
    public static final int POLYGONINNERCOORDINATES_FIELD_NUMBER = 4;
    private java.util.List<com.google.protobuf.ByteString> polygonInnerCoordinates_;
    public java.util.List<com.google.protobuf.ByteString>
        getPolygonInnerCoordinatesList() {
      return polygonInnerCoordinates_;
    }
    public int getPolygonInnerCoordinatesCount() {
      return polygonInnerCoordinates_.size();
    }
    public com.google.protobuf.ByteString getPolygonInnerCoordinates(int index) {
      return polygonInnerCoordinates_.get(index);
    }
    
    // optional bytes additionalTypes = 6;
    public static final int ADDITIONALTYPES_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString additionalTypes_;
    public boolean hasAdditionalTypes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getAdditionalTypes() {
      return additionalTypes_;
    }
    
    // required bytes types = 7;
    public static final int TYPES_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString types_;
    public boolean hasTypes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.google.protobuf.ByteString getTypes() {
      return types_;
    }
    
    // optional bytes stringNames = 10;
    public static final int STRINGNAMES_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString stringNames_;
    public boolean hasStringNames() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.protobuf.ByteString getStringNames() {
      return stringNames_;
    }
    
    // required sint64 id = 12;
    public static final int ID_FIELD_NUMBER = 12;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getId() {
      return id_;
    }
    
    // optional bytes rasterBytes = 15;
    public static final int RASTERBYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString rasterBytes_;
    public boolean hasRasterBytes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public com.google.protobuf.ByteString getRasterBytes() {
      return rasterBytes_;
    }
    
    private void initFields() {
      coordinates_ = com.google.protobuf.ByteString.EMPTY;
      areaCoordinates_ = com.google.protobuf.ByteString.EMPTY;
      polygonInnerCoordinates_ = java.util.Collections.emptyList();;
      additionalTypes_ = com.google.protobuf.ByteString.EMPTY;
      types_ = com.google.protobuf.ByteString.EMPTY;
      stringNames_ = com.google.protobuf.ByteString.EMPTY;
      id_ = 0L;
      rasterBytes_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTypes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, coordinates_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, areaCoordinates_);
      }
      for (int i = 0; i < polygonInnerCoordinates_.size(); i++) {
        output.writeBytes(4, polygonInnerCoordinates_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, additionalTypes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(7, types_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(10, stringNames_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt64(12, id_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(15, rasterBytes_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, coordinates_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, areaCoordinates_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < polygonInnerCoordinates_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(polygonInnerCoordinates_.get(i));
        }
        size += dataSize;
        size += 1 * getPolygonInnerCoordinatesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, additionalTypes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, types_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, stringNames_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(12, id_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, rasterBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.MapData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.MapData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.MapData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.MapDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_MapData_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.MapData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        coordinates_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        areaCoordinates_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        polygonInnerCoordinates_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        additionalTypes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        types_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        stringNames_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        rasterBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.MapData.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.MapData getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.MapData.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.MapData build() {
        net.osmand.binary.OsmandOdb.MapData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.MapData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.MapData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.MapData buildPartial() {
        net.osmand.binary.OsmandOdb.MapData result = new net.osmand.binary.OsmandOdb.MapData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.coordinates_ = coordinates_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.areaCoordinates_ = areaCoordinates_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          polygonInnerCoordinates_ = java.util.Collections.unmodifiableList(polygonInnerCoordinates_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.polygonInnerCoordinates_ = polygonInnerCoordinates_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.additionalTypes_ = additionalTypes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.types_ = types_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.stringNames_ = stringNames_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rasterBytes_ = rasterBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.MapData) {
          return mergeFrom((net.osmand.binary.OsmandOdb.MapData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.MapData other) {
        if (other == net.osmand.binary.OsmandOdb.MapData.getDefaultInstance()) return this;
        if (other.hasCoordinates()) {
          setCoordinates(other.getCoordinates());
        }
        if (other.hasAreaCoordinates()) {
          setAreaCoordinates(other.getAreaCoordinates());
        }
        if (!other.polygonInnerCoordinates_.isEmpty()) {
          if (polygonInnerCoordinates_.isEmpty()) {
            polygonInnerCoordinates_ = other.polygonInnerCoordinates_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePolygonInnerCoordinatesIsMutable();
            polygonInnerCoordinates_.addAll(other.polygonInnerCoordinates_);
          }
          onChanged();
        }
        if (other.hasAdditionalTypes()) {
          setAdditionalTypes(other.getAdditionalTypes());
        }
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasStringNames()) {
          setStringNames(other.getStringNames());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasRasterBytes()) {
          setRasterBytes(other.getRasterBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTypes()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              coordinates_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              areaCoordinates_ = input.readBytes();
              break;
            }
            case 34: {
              ensurePolygonInnerCoordinatesIsMutable();
              polygonInnerCoordinates_.add(input.readBytes());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              additionalTypes_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000010;
              types_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000020;
              stringNames_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              id_ = input.readSInt64();
              break;
            }
            case 122: {
              bitField0_ |= 0x00000080;
              rasterBytes_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes coordinates = 1;
      private com.google.protobuf.ByteString coordinates_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasCoordinates() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getCoordinates() {
        return coordinates_;
      }
      public Builder setCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        coordinates_ = value;
        onChanged();
        return this;
      }
      public Builder clearCoordinates() {
        bitField0_ = (bitField0_ & ~0x00000001);
        coordinates_ = getDefaultInstance().getCoordinates();
        onChanged();
        return this;
      }
      
      // optional bytes areaCoordinates = 2;
      private com.google.protobuf.ByteString areaCoordinates_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasAreaCoordinates() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getAreaCoordinates() {
        return areaCoordinates_;
      }
      public Builder setAreaCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        areaCoordinates_ = value;
        onChanged();
        return this;
      }
      public Builder clearAreaCoordinates() {
        bitField0_ = (bitField0_ & ~0x00000002);
        areaCoordinates_ = getDefaultInstance().getAreaCoordinates();
        onChanged();
        return this;
      }
      
      // repeated bytes polygonInnerCoordinates = 4;
      private java.util.List<com.google.protobuf.ByteString> polygonInnerCoordinates_ = java.util.Collections.emptyList();;
      private void ensurePolygonInnerCoordinatesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          polygonInnerCoordinates_ = new java.util.ArrayList<com.google.protobuf.ByteString>(polygonInnerCoordinates_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<com.google.protobuf.ByteString>
          getPolygonInnerCoordinatesList() {
        return java.util.Collections.unmodifiableList(polygonInnerCoordinates_);
      }
      public int getPolygonInnerCoordinatesCount() {
        return polygonInnerCoordinates_.size();
      }
      public com.google.protobuf.ByteString getPolygonInnerCoordinates(int index) {
        return polygonInnerCoordinates_.get(index);
      }
      public Builder setPolygonInnerCoordinates(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolygonInnerCoordinatesIsMutable();
        polygonInnerCoordinates_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPolygonInnerCoordinates(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolygonInnerCoordinatesIsMutable();
        polygonInnerCoordinates_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPolygonInnerCoordinates(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePolygonInnerCoordinatesIsMutable();
        super.addAll(values, polygonInnerCoordinates_);
        onChanged();
        return this;
      }
      public Builder clearPolygonInnerCoordinates() {
        polygonInnerCoordinates_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // optional bytes additionalTypes = 6;
      private com.google.protobuf.ByteString additionalTypes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasAdditionalTypes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getAdditionalTypes() {
        return additionalTypes_;
      }
      public Builder setAdditionalTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        additionalTypes_ = value;
        onChanged();
        return this;
      }
      public Builder clearAdditionalTypes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        additionalTypes_ = getDefaultInstance().getAdditionalTypes();
        onChanged();
        return this;
      }
      
      // required bytes types = 7;
      private com.google.protobuf.ByteString types_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasTypes() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.protobuf.ByteString getTypes() {
        return types_;
      }
      public Builder setTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        types_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        types_ = getDefaultInstance().getTypes();
        onChanged();
        return this;
      }
      
      // optional bytes stringNames = 10;
      private com.google.protobuf.ByteString stringNames_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasStringNames() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.google.protobuf.ByteString getStringNames() {
        return stringNames_;
      }
      public Builder setStringNames(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        stringNames_ = value;
        onChanged();
        return this;
      }
      public Builder clearStringNames() {
        bitField0_ = (bitField0_ & ~0x00000020);
        stringNames_ = getDefaultInstance().getStringNames();
        onChanged();
        return this;
      }
      
      // required sint64 id = 12;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000040;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional bytes rasterBytes = 15;
      private com.google.protobuf.ByteString rasterBytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasRasterBytes() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public com.google.protobuf.ByteString getRasterBytes() {
        return rasterBytes_;
      }
      public Builder setRasterBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        rasterBytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearRasterBytes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rasterBytes_ = getDefaultInstance().getRasterBytes();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.MapData)
    }
    
    static {
      defaultInstance = new MapData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.MapData)
  }
  
  public interface OsmAndAddressIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // optional string name_en = 2;
    boolean hasNameEn();
    String getNameEn();
    
    // optional .OsmAnd.OBF.OsmAndTileBox boundaries = 3;
    boolean hasBoundaries();
    net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries();
    net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex cities = 6;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> 
        getCitiesList();
    net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex getCities(int index);
    int getCitiesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder> 
        getCitiesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder getCitiesOrBuilder(
        int index);
    
    // optional .OsmAnd.OBF.OsmAndAddressNameIndexData nameIndex = 7;
    boolean hasNameIndex();
    net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData getNameIndex();
    net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder getNameIndexOrBuilder();
    
    // optional .OsmAnd.OBF.StringTable attributeTagsTable = 8;
    boolean hasAttributeTagsTable();
    net.osmand.binary.OsmandOdb.StringTable getAttributeTagsTable();
    net.osmand.binary.OsmandOdb.StringTableOrBuilder getAttributeTagsTableOrBuilder();
  }
  public static final class OsmAndAddressIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndAddressIndexOrBuilder {
    // Use OsmAndAddressIndex.newBuilder() to construct.
    private OsmAndAddressIndex(Builder builder) {
      super(builder);
    }
    private OsmAndAddressIndex(boolean noInit) {}
    
    private static final OsmAndAddressIndex defaultInstance;
    public static OsmAndAddressIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndAddressIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_fieldAccessorTable;
    }
    
    public interface CitiesIndexOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex.CitiesType type = 2;
      boolean hasType();
      net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType getType();
      
      // repeated .OsmAnd.OBF.CityIndex cities = 5;
      java.util.List<net.osmand.binary.OsmandOdb.CityIndex> 
          getCitiesList();
      net.osmand.binary.OsmandOdb.CityIndex getCities(int index);
      int getCitiesCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.CityIndexOrBuilder> 
          getCitiesOrBuilderList();
      net.osmand.binary.OsmandOdb.CityIndexOrBuilder getCitiesOrBuilder(
          int index);
      
      // repeated .OsmAnd.OBF.CityBlockIndex blocks = 7;
      java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex> 
          getBlocksList();
      net.osmand.binary.OsmandOdb.CityBlockIndex getBlocks(int index);
      int getBlocksCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder> 
          getBlocksOrBuilderList();
      net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder getBlocksOrBuilder(
          int index);
    }
    public static final class CitiesIndex extends
        com.google.protobuf.GeneratedMessage
        implements CitiesIndexOrBuilder {
      // Use CitiesIndex.newBuilder() to construct.
      private CitiesIndex(Builder builder) {
        super(builder);
      }
      private CitiesIndex(boolean noInit) {}
      
      private static final CitiesIndex defaultInstance;
      public static CitiesIndex getDefaultInstance() {
        return defaultInstance;
      }
      
      public CitiesIndex getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_fieldAccessorTable;
      }
      
      public enum CitiesType
          implements com.google.protobuf.ProtocolMessageEnum {
        CitiesOrTowns(0, 1),
        Postcodes(1, 2),
        Villages(2, 3),
        ;
        
        public static final int CitiesOrTowns_VALUE = 1;
        public static final int Postcodes_VALUE = 2;
        public static final int Villages_VALUE = 3;
        
        
        public final int getNumber() { return value; }
        
        public static CitiesType valueOf(int value) {
          switch (value) {
            case 1: return CitiesOrTowns;
            case 2: return Postcodes;
            case 3: return Villages;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<CitiesType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<CitiesType>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CitiesType>() {
                public CitiesType findValueByNumber(int number) {
                  return CitiesType.valueOf(number);
                }
              };
        
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDescriptor().getEnumTypes().get(0);
        }
        
        private static final CitiesType[] VALUES = {
          CitiesOrTowns, Postcodes, Villages, 
        };
        
        public static CitiesType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }
        
        private final int index;
        private final int value;
        
        private CitiesType(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex.CitiesType)
      }
      
      private int bitField0_;
      // required .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex.CitiesType type = 2;
      public static final int TYPE_FIELD_NUMBER = 2;
      private net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType type_;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType getType() {
        return type_;
      }
      
      // repeated .OsmAnd.OBF.CityIndex cities = 5;
      public static final int CITIES_FIELD_NUMBER = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.CityIndex> cities_;
      public java.util.List<net.osmand.binary.OsmandOdb.CityIndex> getCitiesList() {
        return cities_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.CityIndexOrBuilder> 
          getCitiesOrBuilderList() {
        return cities_;
      }
      public int getCitiesCount() {
        return cities_.size();
      }
      public net.osmand.binary.OsmandOdb.CityIndex getCities(int index) {
        return cities_.get(index);
      }
      public net.osmand.binary.OsmandOdb.CityIndexOrBuilder getCitiesOrBuilder(
          int index) {
        return cities_.get(index);
      }
      
      // repeated .OsmAnd.OBF.CityBlockIndex blocks = 7;
      public static final int BLOCKS_FIELD_NUMBER = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex> blocks_;
      public java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex> getBlocksList() {
        return blocks_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder> 
          getBlocksOrBuilderList() {
        return blocks_;
      }
      public int getBlocksCount() {
        return blocks_.size();
      }
      public net.osmand.binary.OsmandOdb.CityBlockIndex getBlocks(int index) {
        return blocks_.get(index);
      }
      public net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder getBlocksOrBuilder(
          int index) {
        return blocks_.get(index);
      }
      
      private void initFields() {
        type_ = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.CitiesOrTowns;
        cities_ = java.util.Collections.emptyList();
        blocks_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getCitiesCount(); i++) {
          if (!getCities(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getBlocksCount(); i++) {
          if (!getBlocks(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(2, type_.getNumber());
        }
        for (int i = 0; i < cities_.size(); i++) {
          output.writeMessage(5, cities_.get(i));
        }
        for (int i = 0; i < blocks_.size(); i++) {
          output.writeMessage(7, blocks_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_.getNumber());
        }
        for (int i = 0; i < cities_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, cities_.get(i));
        }
        for (int i = 0; i < blocks_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, blocks_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCitiesFieldBuilder();
            getBlocksFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          type_ = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.CitiesOrTowns;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (citiesBuilder_ == null) {
            cities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            citiesBuilder_.clear();
          }
          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex build() {
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex result = new net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (citiesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              cities_ = java.util.Collections.unmodifiableList(cities_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.cities_ = cities_;
          } else {
            result.cities_ = citiesBuilder_.build();
          }
          if (blocksBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              blocks_ = java.util.Collections.unmodifiableList(blocks_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.blocks_ = blocks_;
          } else {
            result.blocks_ = blocksBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (citiesBuilder_ == null) {
            if (!other.cities_.isEmpty()) {
              if (cities_.isEmpty()) {
                cities_ = other.cities_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureCitiesIsMutable();
                cities_.addAll(other.cities_);
              }
              onChanged();
            }
          } else {
            if (!other.cities_.isEmpty()) {
              if (citiesBuilder_.isEmpty()) {
                citiesBuilder_.dispose();
                citiesBuilder_ = null;
                cities_ = other.cities_;
                bitField0_ = (bitField0_ & ~0x00000002);
                citiesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getCitiesFieldBuilder() : null;
              } else {
                citiesBuilder_.addAllMessages(other.cities_);
              }
            }
          }
          if (blocksBuilder_ == null) {
            if (!other.blocks_.isEmpty()) {
              if (blocks_.isEmpty()) {
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureBlocksIsMutable();
                blocks_.addAll(other.blocks_);
              }
              onChanged();
            }
          } else {
            if (!other.blocks_.isEmpty()) {
              if (blocksBuilder_.isEmpty()) {
                blocksBuilder_.dispose();
                blocksBuilder_ = null;
                blocks_ = other.blocks_;
                bitField0_ = (bitField0_ & ~0x00000004);
                blocksBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBlocksFieldBuilder() : null;
              } else {
                blocksBuilder_.addAllMessages(other.blocks_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasType()) {
            
            return false;
          }
          for (int i = 0; i < getCitiesCount(); i++) {
            if (!getCities(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getBlocksCount(); i++) {
            if (!getBlocks(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType value = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  type_ = value;
                }
                break;
              }
              case 42: {
                net.osmand.binary.OsmandOdb.CityIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.CityIndex.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addCities(subBuilder.buildPartial());
                break;
              }
              case 58: {
                net.osmand.binary.OsmandOdb.CityBlockIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.CityBlockIndex.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBlocks(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex.CitiesType type = 2;
        private net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType type_ = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.CitiesOrTowns;
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType getType() {
          return type_;
        }
        public Builder setType(net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.CitiesType.CitiesOrTowns;
          onChanged();
          return this;
        }
        
        // repeated .OsmAnd.OBF.CityIndex cities = 5;
        private java.util.List<net.osmand.binary.OsmandOdb.CityIndex> cities_ =
          java.util.Collections.emptyList();
        private void ensureCitiesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            cities_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.CityIndex>(cities_);
            bitField0_ |= 0x00000002;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.CityIndex, net.osmand.binary.OsmandOdb.CityIndex.Builder, net.osmand.binary.OsmandOdb.CityIndexOrBuilder> citiesBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.CityIndex> getCitiesList() {
          if (citiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(cities_);
          } else {
            return citiesBuilder_.getMessageList();
          }
        }
        public int getCitiesCount() {
          if (citiesBuilder_ == null) {
            return cities_.size();
          } else {
            return citiesBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.CityIndex getCities(int index) {
          if (citiesBuilder_ == null) {
            return cities_.get(index);
          } else {
            return citiesBuilder_.getMessage(index);
          }
        }
        public Builder setCities(
            int index, net.osmand.binary.OsmandOdb.CityIndex value) {
          if (citiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCitiesIsMutable();
            cities_.set(index, value);
            onChanged();
          } else {
            citiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setCities(
            int index, net.osmand.binary.OsmandOdb.CityIndex.Builder builderForValue) {
          if (citiesBuilder_ == null) {
            ensureCitiesIsMutable();
            cities_.set(index, builderForValue.build());
            onChanged();
          } else {
            citiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addCities(net.osmand.binary.OsmandOdb.CityIndex value) {
          if (citiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCitiesIsMutable();
            cities_.add(value);
            onChanged();
          } else {
            citiesBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addCities(
            int index, net.osmand.binary.OsmandOdb.CityIndex value) {
          if (citiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCitiesIsMutable();
            cities_.add(index, value);
            onChanged();
          } else {
            citiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addCities(
            net.osmand.binary.OsmandOdb.CityIndex.Builder builderForValue) {
          if (citiesBuilder_ == null) {
            ensureCitiesIsMutable();
            cities_.add(builderForValue.build());
            onChanged();
          } else {
            citiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addCities(
            int index, net.osmand.binary.OsmandOdb.CityIndex.Builder builderForValue) {
          if (citiesBuilder_ == null) {
            ensureCitiesIsMutable();
            cities_.add(index, builderForValue.build());
            onChanged();
          } else {
            citiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllCities(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.CityIndex> values) {
          if (citiesBuilder_ == null) {
            ensureCitiesIsMutable();
            super.addAll(values, cities_);
            onChanged();
          } else {
            citiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearCities() {
          if (citiesBuilder_ == null) {
            cities_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            citiesBuilder_.clear();
          }
          return this;
        }
        public Builder removeCities(int index) {
          if (citiesBuilder_ == null) {
            ensureCitiesIsMutable();
            cities_.remove(index);
            onChanged();
          } else {
            citiesBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.CityIndex.Builder getCitiesBuilder(
            int index) {
          return getCitiesFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.CityIndexOrBuilder getCitiesOrBuilder(
            int index) {
          if (citiesBuilder_ == null) {
            return cities_.get(index);  } else {
            return citiesBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.CityIndexOrBuilder> 
             getCitiesOrBuilderList() {
          if (citiesBuilder_ != null) {
            return citiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(cities_);
          }
        }
        public net.osmand.binary.OsmandOdb.CityIndex.Builder addCitiesBuilder() {
          return getCitiesFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.CityIndex.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.CityIndex.Builder addCitiesBuilder(
            int index) {
          return getCitiesFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.CityIndex.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.CityIndex.Builder> 
             getCitiesBuilderList() {
          return getCitiesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.CityIndex, net.osmand.binary.OsmandOdb.CityIndex.Builder, net.osmand.binary.OsmandOdb.CityIndexOrBuilder> 
            getCitiesFieldBuilder() {
          if (citiesBuilder_ == null) {
            citiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.CityIndex, net.osmand.binary.OsmandOdb.CityIndex.Builder, net.osmand.binary.OsmandOdb.CityIndexOrBuilder>(
                    cities_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            cities_ = null;
          }
          return citiesBuilder_;
        }
        
        // repeated .OsmAnd.OBF.CityBlockIndex blocks = 7;
        private java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex> blocks_ =
          java.util.Collections.emptyList();
        private void ensureBlocksIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            blocks_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.CityBlockIndex>(blocks_);
            bitField0_ |= 0x00000004;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.CityBlockIndex, net.osmand.binary.OsmandOdb.CityBlockIndex.Builder, net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder> blocksBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex> getBlocksList() {
          if (blocksBuilder_ == null) {
            return java.util.Collections.unmodifiableList(blocks_);
          } else {
            return blocksBuilder_.getMessageList();
          }
        }
        public int getBlocksCount() {
          if (blocksBuilder_ == null) {
            return blocks_.size();
          } else {
            return blocksBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.CityBlockIndex getBlocks(int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);
          } else {
            return blocksBuilder_.getMessage(index);
          }
        }
        public Builder setBlocks(
            int index, net.osmand.binary.OsmandOdb.CityBlockIndex value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.set(index, value);
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setBlocks(
            int index, net.osmand.binary.OsmandOdb.CityBlockIndex.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.set(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addBlocks(net.osmand.binary.OsmandOdb.CityBlockIndex value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addBlocks(
            int index, net.osmand.binary.OsmandOdb.CityBlockIndex value) {
          if (blocksBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBlocksIsMutable();
            blocks_.add(index, value);
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addBlocks(
            net.osmand.binary.OsmandOdb.CityBlockIndex.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addBlocks(
            int index, net.osmand.binary.OsmandOdb.CityBlockIndex.Builder builderForValue) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.add(index, builderForValue.build());
            onChanged();
          } else {
            blocksBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllBlocks(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.CityBlockIndex> values) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            super.addAll(values, blocks_);
            onChanged();
          } else {
            blocksBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearBlocks() {
          if (blocksBuilder_ == null) {
            blocks_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            blocksBuilder_.clear();
          }
          return this;
        }
        public Builder removeBlocks(int index) {
          if (blocksBuilder_ == null) {
            ensureBlocksIsMutable();
            blocks_.remove(index);
            onChanged();
          } else {
            blocksBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.CityBlockIndex.Builder getBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder getBlocksOrBuilder(
            int index) {
          if (blocksBuilder_ == null) {
            return blocks_.get(index);  } else {
            return blocksBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder> 
             getBlocksOrBuilderList() {
          if (blocksBuilder_ != null) {
            return blocksBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(blocks_);
          }
        }
        public net.osmand.binary.OsmandOdb.CityBlockIndex.Builder addBlocksBuilder() {
          return getBlocksFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.CityBlockIndex.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.CityBlockIndex.Builder addBlocksBuilder(
            int index) {
          return getBlocksFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.CityBlockIndex.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.CityBlockIndex.Builder> 
             getBlocksBuilderList() {
          return getBlocksFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.CityBlockIndex, net.osmand.binary.OsmandOdb.CityBlockIndex.Builder, net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder> 
            getBlocksFieldBuilder() {
          if (blocksBuilder_ == null) {
            blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.CityBlockIndex, net.osmand.binary.OsmandOdb.CityBlockIndex.Builder, net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder>(
                    blocks_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            blocks_ = null;
          }
          return blocksBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex)
      }
      
      static {
        defaultInstance = new CitiesIndex(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex)
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .OsmAnd.OBF.OsmAndTileBox boundaries = 3;
    public static final int BOUNDARIES_FIELD_NUMBER = 3;
    private net.osmand.binary.OsmandOdb.OsmAndTileBox boundaries_;
    public boolean hasBoundaries() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries() {
      return boundaries_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder() {
      return boundaries_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex cities = 6;
    public static final int CITIES_FIELD_NUMBER = 6;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> cities_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> getCitiesList() {
      return cities_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder> 
        getCitiesOrBuilderList() {
      return cities_;
    }
    public int getCitiesCount() {
      return cities_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex getCities(int index) {
      return cities_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder getCitiesOrBuilder(
        int index) {
      return cities_.get(index);
    }
    
    // optional .OsmAnd.OBF.OsmAndAddressNameIndexData nameIndex = 7;
    public static final int NAMEINDEX_FIELD_NUMBER = 7;
    private net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData nameIndex_;
    public boolean hasNameIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData getNameIndex() {
      return nameIndex_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder getNameIndexOrBuilder() {
      return nameIndex_;
    }
    
    // optional .OsmAnd.OBF.StringTable attributeTagsTable = 8;
    public static final int ATTRIBUTETAGSTABLE_FIELD_NUMBER = 8;
    private net.osmand.binary.OsmandOdb.StringTable attributeTagsTable_;
    public boolean hasAttributeTagsTable() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public net.osmand.binary.OsmandOdb.StringTable getAttributeTagsTable() {
      return attributeTagsTable_;
    }
    public net.osmand.binary.OsmandOdb.StringTableOrBuilder getAttributeTagsTableOrBuilder() {
      return attributeTagsTable_;
    }
    
    private void initFields() {
      name_ = "";
      nameEn_ = "";
      boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
      cities_ = java.util.Collections.emptyList();
      nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance();
      attributeTagsTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasBoundaries()) {
        if (!getBoundaries().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCitiesCount(); i++) {
        if (!getCities(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNameIndex()) {
        if (!getNameIndex().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, boundaries_);
      }
      for (int i = 0; i < cities_.size(); i++) {
        output.writeMessage(6, cities_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(7, nameIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(8, attributeTagsTable_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, boundaries_);
      }
      for (int i = 0; i < cities_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cities_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, nameIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, attributeTagsTable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndAddressIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndAddressIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndAddressIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoundariesFieldBuilder();
          getCitiesFieldBuilder();
          getNameIndexFieldBuilder();
          getAttributeTagsTableFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (boundariesBuilder_ == null) {
          boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
        } else {
          boundariesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (citiesBuilder_ == null) {
          cities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          citiesBuilder_.clear();
        }
        if (nameIndexBuilder_ == null) {
          nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance();
        } else {
          nameIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (attributeTagsTableBuilder_ == null) {
          attributeTagsTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
        } else {
          attributeTagsTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndAddressIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndAddressIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndAddressIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndAddressIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndAddressIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndAddressIndex result = new net.osmand.binary.OsmandOdb.OsmAndAddressIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameEn_ = nameEn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (boundariesBuilder_ == null) {
          result.boundaries_ = boundaries_;
        } else {
          result.boundaries_ = boundariesBuilder_.build();
        }
        if (citiesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cities_ = java.util.Collections.unmodifiableList(cities_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cities_ = cities_;
        } else {
          result.cities_ = citiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (nameIndexBuilder_ == null) {
          result.nameIndex_ = nameIndex_;
        } else {
          result.nameIndex_ = nameIndexBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (attributeTagsTableBuilder_ == null) {
          result.attributeTagsTable_ = attributeTagsTable_;
        } else {
          result.attributeTagsTable_ = attributeTagsTableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndAddressIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndAddressIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndAddressIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndAddressIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasBoundaries()) {
          mergeBoundaries(other.getBoundaries());
        }
        if (citiesBuilder_ == null) {
          if (!other.cities_.isEmpty()) {
            if (cities_.isEmpty()) {
              cities_ = other.cities_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCitiesIsMutable();
              cities_.addAll(other.cities_);
            }
            onChanged();
          }
        } else {
          if (!other.cities_.isEmpty()) {
            if (citiesBuilder_.isEmpty()) {
              citiesBuilder_.dispose();
              citiesBuilder_ = null;
              cities_ = other.cities_;
              bitField0_ = (bitField0_ & ~0x00000008);
              citiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCitiesFieldBuilder() : null;
            } else {
              citiesBuilder_.addAllMessages(other.cities_);
            }
          }
        }
        if (other.hasNameIndex()) {
          mergeNameIndex(other.getNameIndex());
        }
        if (other.hasAttributeTagsTable()) {
          mergeAttributeTagsTable(other.getAttributeTagsTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (hasBoundaries()) {
          if (!getBoundaries().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCitiesCount(); i++) {
          if (!getCities(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasNameIndex()) {
          if (!getNameIndex().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nameEn_ = input.readBytes();
              break;
            }
            case 26: {
              net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndTileBox.newBuilder();
              if (hasBoundaries()) {
                subBuilder.mergeFrom(getBoundaries());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBoundaries(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCities(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.newBuilder();
              if (hasNameIndex()) {
                subBuilder.mergeFrom(getNameIndex());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNameIndex(subBuilder.buildPartial());
              break;
            }
            case 66: {
              net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.StringTable.newBuilder();
              if (hasAttributeTagsTable()) {
                subBuilder.mergeFrom(getAttributeTagsTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAttributeTagsTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string name_en = 2;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
      }
      
      // optional .OsmAnd.OBF.OsmAndTileBox boundaries = 3;
      private net.osmand.binary.OsmandOdb.OsmAndTileBox boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder> boundariesBuilder_;
      public boolean hasBoundaries() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries() {
        if (boundariesBuilder_ == null) {
          return boundaries_;
        } else {
          return boundariesBuilder_.getMessage();
        }
      }
      public Builder setBoundaries(net.osmand.binary.OsmandOdb.OsmAndTileBox value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          boundaries_ = value;
          onChanged();
        } else {
          boundariesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setBoundaries(
          net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          boundaries_ = builderForValue.build();
          onChanged();
        } else {
          boundariesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeBoundaries(net.osmand.binary.OsmandOdb.OsmAndTileBox value) {
        if (boundariesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              boundaries_ != net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance()) {
            boundaries_ =
              net.osmand.binary.OsmandOdb.OsmAndTileBox.newBuilder(boundaries_).mergeFrom(value).buildPartial();
          } else {
            boundaries_ = value;
          }
          onChanged();
        } else {
          boundariesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearBoundaries() {
        if (boundariesBuilder_ == null) {
          boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
          onChanged();
        } else {
          boundariesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder getBoundariesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getBoundariesFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder() {
        if (boundariesBuilder_ != null) {
          return boundariesBuilder_.getMessageOrBuilder();
        } else {
          return boundaries_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder> 
          getBoundariesFieldBuilder() {
        if (boundariesBuilder_ == null) {
          boundariesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder>(
                  boundaries_,
                  getParentForChildren(),
                  isClean());
          boundaries_ = null;
        }
        return boundariesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndAddressIndex.CitiesIndex cities = 6;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> cities_ =
        java.util.Collections.emptyList();
      private void ensureCitiesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cities_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex>(cities_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder> citiesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> getCitiesList() {
        if (citiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cities_);
        } else {
          return citiesBuilder_.getMessageList();
        }
      }
      public int getCitiesCount() {
        if (citiesBuilder_ == null) {
          return cities_.size();
        } else {
          return citiesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex getCities(int index) {
        if (citiesBuilder_ == null) {
          return cities_.get(index);
        } else {
          return citiesBuilder_.getMessage(index);
        }
      }
      public Builder setCities(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex value) {
        if (citiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCitiesIsMutable();
          cities_.set(index, value);
          onChanged();
        } else {
          citiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCities(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder builderForValue) {
        if (citiesBuilder_ == null) {
          ensureCitiesIsMutable();
          cities_.set(index, builderForValue.build());
          onChanged();
        } else {
          citiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCities(net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex value) {
        if (citiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCitiesIsMutable();
          cities_.add(value);
          onChanged();
        } else {
          citiesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCities(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex value) {
        if (citiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCitiesIsMutable();
          cities_.add(index, value);
          onChanged();
        } else {
          citiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCities(
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder builderForValue) {
        if (citiesBuilder_ == null) {
          ensureCitiesIsMutable();
          cities_.add(builderForValue.build());
          onChanged();
        } else {
          citiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCities(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder builderForValue) {
        if (citiesBuilder_ == null) {
          ensureCitiesIsMutable();
          cities_.add(index, builderForValue.build());
          onChanged();
        } else {
          citiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCities(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex> values) {
        if (citiesBuilder_ == null) {
          ensureCitiesIsMutable();
          super.addAll(values, cities_);
          onChanged();
        } else {
          citiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCities() {
        if (citiesBuilder_ == null) {
          cities_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          citiesBuilder_.clear();
        }
        return this;
      }
      public Builder removeCities(int index) {
        if (citiesBuilder_ == null) {
          ensureCitiesIsMutable();
          cities_.remove(index);
          onChanged();
        } else {
          citiesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder getCitiesBuilder(
          int index) {
        return getCitiesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder getCitiesOrBuilder(
          int index) {
        if (citiesBuilder_ == null) {
          return cities_.get(index);  } else {
          return citiesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder> 
           getCitiesOrBuilderList() {
        if (citiesBuilder_ != null) {
          return citiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cities_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder addCitiesBuilder() {
        return getCitiesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder addCitiesBuilder(
          int index) {
        return getCitiesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder> 
           getCitiesBuilderList() {
        return getCitiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder> 
          getCitiesFieldBuilder() {
        if (citiesBuilder_ == null) {
          citiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndexOrBuilder>(
                  cities_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cities_ = null;
        }
        return citiesBuilder_;
      }
      
      // optional .OsmAnd.OBF.OsmAndAddressNameIndexData nameIndex = 7;
      private net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder> nameIndexBuilder_;
      public boolean hasNameIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData getNameIndex() {
        if (nameIndexBuilder_ == null) {
          return nameIndex_;
        } else {
          return nameIndexBuilder_.getMessage();
        }
      }
      public Builder setNameIndex(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData value) {
        if (nameIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nameIndex_ = value;
          onChanged();
        } else {
          nameIndexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setNameIndex(
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder builderForValue) {
        if (nameIndexBuilder_ == null) {
          nameIndex_ = builderForValue.build();
          onChanged();
        } else {
          nameIndexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeNameIndex(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData value) {
        if (nameIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              nameIndex_ != net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance()) {
            nameIndex_ =
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.newBuilder(nameIndex_).mergeFrom(value).buildPartial();
          } else {
            nameIndex_ = value;
          }
          onChanged();
        } else {
          nameIndexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearNameIndex() {
        if (nameIndexBuilder_ == null) {
          nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance();
          onChanged();
        } else {
          nameIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder getNameIndexBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getNameIndexFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder getNameIndexOrBuilder() {
        if (nameIndexBuilder_ != null) {
          return nameIndexBuilder_.getMessageOrBuilder();
        } else {
          return nameIndex_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder> 
          getNameIndexFieldBuilder() {
        if (nameIndexBuilder_ == null) {
          nameIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder>(
                  nameIndex_,
                  getParentForChildren(),
                  isClean());
          nameIndex_ = null;
        }
        return nameIndexBuilder_;
      }
      
      // optional .OsmAnd.OBF.StringTable attributeTagsTable = 8;
      private net.osmand.binary.OsmandOdb.StringTable attributeTagsTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> attributeTagsTableBuilder_;
      public boolean hasAttributeTagsTable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public net.osmand.binary.OsmandOdb.StringTable getAttributeTagsTable() {
        if (attributeTagsTableBuilder_ == null) {
          return attributeTagsTable_;
        } else {
          return attributeTagsTableBuilder_.getMessage();
        }
      }
      public Builder setAttributeTagsTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (attributeTagsTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attributeTagsTable_ = value;
          onChanged();
        } else {
          attributeTagsTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setAttributeTagsTable(
          net.osmand.binary.OsmandOdb.StringTable.Builder builderForValue) {
        if (attributeTagsTableBuilder_ == null) {
          attributeTagsTable_ = builderForValue.build();
          onChanged();
        } else {
          attributeTagsTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeAttributeTagsTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (attributeTagsTableBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              attributeTagsTable_ != net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance()) {
            attributeTagsTable_ =
              net.osmand.binary.OsmandOdb.StringTable.newBuilder(attributeTagsTable_).mergeFrom(value).buildPartial();
          } else {
            attributeTagsTable_ = value;
          }
          onChanged();
        } else {
          attributeTagsTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearAttributeTagsTable() {
        if (attributeTagsTableBuilder_ == null) {
          attributeTagsTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
          onChanged();
        } else {
          attributeTagsTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public net.osmand.binary.OsmandOdb.StringTable.Builder getAttributeTagsTableBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getAttributeTagsTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.StringTableOrBuilder getAttributeTagsTableOrBuilder() {
        if (attributeTagsTableBuilder_ != null) {
          return attributeTagsTableBuilder_.getMessageOrBuilder();
        } else {
          return attributeTagsTable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> 
          getAttributeTagsTableFieldBuilder() {
        if (attributeTagsTableBuilder_ == null) {
          attributeTagsTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder>(
                  attributeTagsTable_,
                  getParentForChildren(),
                  isClean());
          attributeTagsTable_ = null;
        }
        return attributeTagsTableBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndAddressIndex)
    }
    
    static {
      defaultInstance = new OsmAndAddressIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndAddressIndex)
  }
  
  public interface OsmAndAddressNameIndexDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .OsmAnd.OBF.IndexedStringTable table = 4;
    boolean hasTable();
    net.osmand.binary.OsmandOdb.IndexedStringTable getTable();
    net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndAddressNameIndexData.AddressNameIndexData atom = 7;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> 
        getAtomList();
    net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData getAtom(int index);
    int getAtomCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder> 
        getAtomOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder getAtomOrBuilder(
        int index);
  }
  public static final class OsmAndAddressNameIndexData extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndAddressNameIndexDataOrBuilder {
    // Use OsmAndAddressNameIndexData.newBuilder() to construct.
    private OsmAndAddressNameIndexData(Builder builder) {
      super(builder);
    }
    private OsmAndAddressNameIndexData(boolean noInit) {}
    
    private static final OsmAndAddressNameIndexData defaultInstance;
    public static OsmAndAddressNameIndexData getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndAddressNameIndexData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_fieldAccessorTable;
    }
    
    public interface AddressNameIndexDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // repeated .OsmAnd.OBF.AddressNameIndexDataAtom atom = 4;
      java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> 
          getAtomList();
      net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom getAtom(int index);
      int getAtomCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder> 
          getAtomOrBuilderList();
      net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder getAtomOrBuilder(
          int index);
    }
    public static final class AddressNameIndexData extends
        com.google.protobuf.GeneratedMessage
        implements AddressNameIndexDataOrBuilder {
      // Use AddressNameIndexData.newBuilder() to construct.
      private AddressNameIndexData(Builder builder) {
        super(builder);
      }
      private AddressNameIndexData(boolean noInit) {}
      
      private static final AddressNameIndexData defaultInstance;
      public static AddressNameIndexData getDefaultInstance() {
        return defaultInstance;
      }
      
      public AddressNameIndexData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_fieldAccessorTable;
      }
      
      // repeated .OsmAnd.OBF.AddressNameIndexDataAtom atom = 4;
      public static final int ATOM_FIELD_NUMBER = 4;
      private java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> atom_;
      public java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> getAtomList() {
        return atom_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder> 
          getAtomOrBuilderList() {
        return atom_;
      }
      public int getAtomCount() {
        return atom_.size();
      }
      public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom getAtom(int index) {
        return atom_.get(index);
      }
      public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder getAtomOrBuilder(
          int index) {
        return atom_.get(index);
      }
      
      private void initFields() {
        atom_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        for (int i = 0; i < getAtomCount(); i++) {
          if (!getAtom(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < atom_.size(); i++) {
          output.writeMessage(4, atom_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (int i = 0; i < atom_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, atom_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAtomFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          if (atomBuilder_ == null) {
            atom_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            atomBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData build() {
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData result = new net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData(this);
          int from_bitField0_ = bitField0_;
          if (atomBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              atom_ = java.util.Collections.unmodifiableList(atom_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.atom_ = atom_;
          } else {
            result.atom_ = atomBuilder_.build();
          }
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.getDefaultInstance()) return this;
          if (atomBuilder_ == null) {
            if (!other.atom_.isEmpty()) {
              if (atom_.isEmpty()) {
                atom_ = other.atom_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureAtomIsMutable();
                atom_.addAll(other.atom_);
              }
              onChanged();
            }
          } else {
            if (!other.atom_.isEmpty()) {
              if (atomBuilder_.isEmpty()) {
                atomBuilder_.dispose();
                atomBuilder_ = null;
                atom_ = other.atom_;
                bitField0_ = (bitField0_ & ~0x00000001);
                atomBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAtomFieldBuilder() : null;
              } else {
                atomBuilder_.addAllMessages(other.atom_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          for (int i = 0; i < getAtomCount(); i++) {
            if (!getAtom(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 34: {
                net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder subBuilder = net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addAtom(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // repeated .OsmAnd.OBF.AddressNameIndexDataAtom atom = 4;
        private java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> atom_ =
          java.util.Collections.emptyList();
        private void ensureAtomIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            atom_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom>(atom_);
            bitField0_ |= 0x00000001;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder> atomBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> getAtomList() {
          if (atomBuilder_ == null) {
            return java.util.Collections.unmodifiableList(atom_);
          } else {
            return atomBuilder_.getMessageList();
          }
        }
        public int getAtomCount() {
          if (atomBuilder_ == null) {
            return atom_.size();
          } else {
            return atomBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom getAtom(int index) {
          if (atomBuilder_ == null) {
            return atom_.get(index);
          } else {
            return atomBuilder_.getMessage(index);
          }
        }
        public Builder setAtom(
            int index, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom value) {
          if (atomBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomIsMutable();
            atom_.set(index, value);
            onChanged();
          } else {
            atomBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setAtom(
            int index, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder builderForValue) {
          if (atomBuilder_ == null) {
            ensureAtomIsMutable();
            atom_.set(index, builderForValue.build());
            onChanged();
          } else {
            atomBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAtom(net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom value) {
          if (atomBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomIsMutable();
            atom_.add(value);
            onChanged();
          } else {
            atomBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addAtom(
            int index, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom value) {
          if (atomBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomIsMutable();
            atom_.add(index, value);
            onChanged();
          } else {
            atomBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addAtom(
            net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder builderForValue) {
          if (atomBuilder_ == null) {
            ensureAtomIsMutable();
            atom_.add(builderForValue.build());
            onChanged();
          } else {
            atomBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addAtom(
            int index, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder builderForValue) {
          if (atomBuilder_ == null) {
            ensureAtomIsMutable();
            atom_.add(index, builderForValue.build());
            onChanged();
          } else {
            atomBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllAtom(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom> values) {
          if (atomBuilder_ == null) {
            ensureAtomIsMutable();
            super.addAll(values, atom_);
            onChanged();
          } else {
            atomBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearAtom() {
          if (atomBuilder_ == null) {
            atom_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            atomBuilder_.clear();
          }
          return this;
        }
        public Builder removeAtom(int index) {
          if (atomBuilder_ == null) {
            ensureAtomIsMutable();
            atom_.remove(index);
            onChanged();
          } else {
            atomBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder getAtomBuilder(
            int index) {
          return getAtomFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder getAtomOrBuilder(
            int index) {
          if (atomBuilder_ == null) {
            return atom_.get(index);  } else {
            return atomBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder> 
             getAtomOrBuilderList() {
          if (atomBuilder_ != null) {
            return atomBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(atom_);
          }
        }
        public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder addAtomBuilder() {
          return getAtomFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder addAtomBuilder(
            int index) {
          return getAtomFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder> 
             getAtomBuilderList() {
          return getAtomFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder> 
            getAtomFieldBuilder() {
          if (atomBuilder_ == null) {
            atomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder>(
                    atom_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            atom_ = null;
          }
          return atomBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndAddressNameIndexData.AddressNameIndexData)
      }
      
      static {
        defaultInstance = new AddressNameIndexData(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndAddressNameIndexData.AddressNameIndexData)
    }
    
    private int bitField0_;
    // required .OsmAnd.OBF.IndexedStringTable table = 4;
    public static final int TABLE_FIELD_NUMBER = 4;
    private net.osmand.binary.OsmandOdb.IndexedStringTable table_;
    public boolean hasTable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTable getTable() {
      return table_;
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder() {
      return table_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndAddressNameIndexData.AddressNameIndexData atom = 7;
    public static final int ATOM_FIELD_NUMBER = 7;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> atom_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> getAtomList() {
      return atom_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder> 
        getAtomOrBuilderList() {
      return atom_;
    }
    public int getAtomCount() {
      return atom_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData getAtom(int index) {
      return atom_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder getAtomOrBuilder(
        int index) {
      return atom_.get(index);
    }
    
    private void initFields() {
      table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
      atom_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAtomCount(); i++) {
        if (!getAtom(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(4, table_);
      }
      for (int i = 0; i < atom_.size(); i++) {
        output.writeMessage(7, atom_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, table_);
      }
      for (int i = 0; i < atom_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, atom_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableFieldBuilder();
          getAtomFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (tableBuilder_ == null) {
          table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (atomBuilder_ == null) {
          atom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          atomBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData build() {
        net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData result = new net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (tableBuilder_ == null) {
          result.table_ = table_;
        } else {
          result.table_ = tableBuilder_.build();
        }
        if (atomBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            atom_ = java.util.Collections.unmodifiableList(atom_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.atom_ = atom_;
        } else {
          result.atom_ = atomBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.getDefaultInstance()) return this;
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (atomBuilder_ == null) {
          if (!other.atom_.isEmpty()) {
            if (atom_.isEmpty()) {
              atom_ = other.atom_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAtomIsMutable();
              atom_.addAll(other.atom_);
            }
            onChanged();
          }
        } else {
          if (!other.atom_.isEmpty()) {
            if (atomBuilder_.isEmpty()) {
              atomBuilder_.dispose();
              atomBuilder_ = null;
              atom_ = other.atom_;
              bitField0_ = (bitField0_ & ~0x00000002);
              atomBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAtomFieldBuilder() : null;
            } else {
              atomBuilder_.addAllMessages(other.atom_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTable()) {
          
          return false;
        }
        for (int i = 0; i < getAtomCount(); i++) {
          if (!getAtom(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.IndexedStringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder();
              if (hasTable()) {
                subBuilder.mergeFrom(getTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTable(subBuilder.buildPartial());
              break;
            }
            case 58: {
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAtom(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .OsmAnd.OBF.IndexedStringTable table = 4;
      private net.osmand.binary.OsmandOdb.IndexedStringTable table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> tableBuilder_;
      public boolean hasTable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable getTable() {
        if (tableBuilder_ == null) {
          return table_;
        } else {
          return tableBuilder_.getMessage();
        }
      }
      public Builder setTable(net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          table_ = value;
          onChanged();
        } else {
          tableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setTable(
          net.osmand.binary.OsmandOdb.IndexedStringTable.Builder builderForValue) {
        if (tableBuilder_ == null) {
          table_ = builderForValue.build();
          onChanged();
        } else {
          tableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeTable(net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (tableBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              table_ != net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance()) {
            table_ =
              net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder(table_).mergeFrom(value).buildPartial();
          } else {
            table_ = value;
          }
          onChanged();
        } else {
          tableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearTable() {
        if (tableBuilder_ == null) {
          table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
          onChanged();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable.Builder getTableBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder() {
        if (tableBuilder_ != null) {
          return tableBuilder_.getMessageOrBuilder();
        } else {
          return table_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
          getTableFieldBuilder() {
        if (tableBuilder_ == null) {
          tableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder>(
                  table_,
                  getParentForChildren(),
                  isClean());
          table_ = null;
        }
        return tableBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndAddressNameIndexData.AddressNameIndexData atom = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> atom_ =
        java.util.Collections.emptyList();
      private void ensureAtomIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          atom_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData>(atom_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder> atomBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> getAtomList() {
        if (atomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(atom_);
        } else {
          return atomBuilder_.getMessageList();
        }
      }
      public int getAtomCount() {
        if (atomBuilder_ == null) {
          return atom_.size();
        } else {
          return atomBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData getAtom(int index) {
        if (atomBuilder_ == null) {
          return atom_.get(index);
        } else {
          return atomBuilder_.getMessage(index);
        }
      }
      public Builder setAtom(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData value) {
        if (atomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtomIsMutable();
          atom_.set(index, value);
          onChanged();
        } else {
          atomBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAtom(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder builderForValue) {
        if (atomBuilder_ == null) {
          ensureAtomIsMutable();
          atom_.set(index, builderForValue.build());
          onChanged();
        } else {
          atomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAtom(net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData value) {
        if (atomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtomIsMutable();
          atom_.add(value);
          onChanged();
        } else {
          atomBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAtom(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData value) {
        if (atomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAtomIsMutable();
          atom_.add(index, value);
          onChanged();
        } else {
          atomBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAtom(
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder builderForValue) {
        if (atomBuilder_ == null) {
          ensureAtomIsMutable();
          atom_.add(builderForValue.build());
          onChanged();
        } else {
          atomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAtom(
          int index, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder builderForValue) {
        if (atomBuilder_ == null) {
          ensureAtomIsMutable();
          atom_.add(index, builderForValue.build());
          onChanged();
        } else {
          atomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAtom(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData> values) {
        if (atomBuilder_ == null) {
          ensureAtomIsMutable();
          super.addAll(values, atom_);
          onChanged();
        } else {
          atomBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAtom() {
        if (atomBuilder_ == null) {
          atom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          atomBuilder_.clear();
        }
        return this;
      }
      public Builder removeAtom(int index) {
        if (atomBuilder_ == null) {
          ensureAtomIsMutable();
          atom_.remove(index);
          onChanged();
        } else {
          atomBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder getAtomBuilder(
          int index) {
        return getAtomFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder getAtomOrBuilder(
          int index) {
        if (atomBuilder_ == null) {
          return atom_.get(index);  } else {
          return atomBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder> 
           getAtomOrBuilderList() {
        if (atomBuilder_ != null) {
          return atomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(atom_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder addAtomBuilder() {
        return getAtomFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder addAtomBuilder(
          int index) {
        return getAtomFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder> 
           getAtomBuilderList() {
        return getAtomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder> 
          getAtomFieldBuilder() {
        if (atomBuilder_ == null) {
          atomBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexDataOrBuilder>(
                  atom_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          atom_ = null;
        }
        return atomBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndAddressNameIndexData)
    }
    
    static {
      defaultInstance = new OsmAndAddressNameIndexData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndAddressNameIndexData)
  }
  
  public interface AddressNameIndexDataAtomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional string nameEn = 2;
    boolean hasNameEn();
    String getNameEn();
    
    // required uint32 type = 3;
    boolean hasType();
    int getType();
    
    // repeated int32 shiftToIndex = 5;
    java.util.List<java.lang.Integer> getShiftToIndexList();
    int getShiftToIndexCount();
    int getShiftToIndex(int index);
    
    // repeated int32 shiftToCityIndex = 6;
    java.util.List<java.lang.Integer> getShiftToCityIndexList();
    int getShiftToCityIndexCount();
    int getShiftToCityIndex(int index);
  }
  public static final class AddressNameIndexDataAtom extends
      com.google.protobuf.GeneratedMessage
      implements AddressNameIndexDataAtomOrBuilder {
    // Use AddressNameIndexDataAtom.newBuilder() to construct.
    private AddressNameIndexDataAtom(Builder builder) {
      super(builder);
    }
    private AddressNameIndexDataAtom(boolean noInit) {}
    
    private static final AddressNameIndexDataAtom defaultInstance;
    public static AddressNameIndexDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddressNameIndexDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string nameEn = 2;
    public static final int NAMEEN_FIELD_NUMBER = 2;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getType() {
      return type_;
    }
    
    // repeated int32 shiftToIndex = 5;
    public static final int SHIFTTOINDEX_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> shiftToIndex_;
    public java.util.List<java.lang.Integer>
        getShiftToIndexList() {
      return shiftToIndex_;
    }
    public int getShiftToIndexCount() {
      return shiftToIndex_.size();
    }
    public int getShiftToIndex(int index) {
      return shiftToIndex_.get(index);
    }
    
    // repeated int32 shiftToCityIndex = 6;
    public static final int SHIFTTOCITYINDEX_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> shiftToCityIndex_;
    public java.util.List<java.lang.Integer>
        getShiftToCityIndexList() {
      return shiftToCityIndex_;
    }
    public int getShiftToCityIndexCount() {
      return shiftToCityIndex_.size();
    }
    public int getShiftToCityIndex(int index) {
      return shiftToCityIndex_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      nameEn_ = "";
      type_ = 0;
      shiftToIndex_ = java.util.Collections.emptyList();;
      shiftToCityIndex_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, type_);
      }
      for (int i = 0; i < shiftToIndex_.size(); i++) {
        output.writeInt32(5, shiftToIndex_.get(i));
      }
      for (int i = 0; i < shiftToCityIndex_.size(); i++) {
        output.writeInt32(6, shiftToCityIndex_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shiftToIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shiftToIndex_.get(i));
        }
        size += dataSize;
        size += 1 * getShiftToIndexList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shiftToCityIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(shiftToCityIndex_.get(i));
        }
        size += dataSize;
        size += 1 * getShiftToCityIndexList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.AddressNameIndexDataAtomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        shiftToIndex_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        shiftToCityIndex_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom build() {
        net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom buildPartial() {
        net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom result = new net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameEn_ = nameEn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          shiftToIndex_ = java.util.Collections.unmodifiableList(shiftToIndex_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.shiftToIndex_ = shiftToIndex_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          shiftToCityIndex_ = java.util.Collections.unmodifiableList(shiftToCityIndex_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.shiftToCityIndex_ = shiftToCityIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom) {
          return mergeFrom((net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom other) {
        if (other == net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.shiftToIndex_.isEmpty()) {
          if (shiftToIndex_.isEmpty()) {
            shiftToIndex_ = other.shiftToIndex_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureShiftToIndexIsMutable();
            shiftToIndex_.addAll(other.shiftToIndex_);
          }
          onChanged();
        }
        if (!other.shiftToCityIndex_.isEmpty()) {
          if (shiftToCityIndex_.isEmpty()) {
            shiftToCityIndex_ = other.shiftToCityIndex_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureShiftToCityIndexIsMutable();
            shiftToCityIndex_.addAll(other.shiftToCityIndex_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nameEn_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readUInt32();
              break;
            }
            case 40: {
              ensureShiftToIndexIsMutable();
              shiftToIndex_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addShiftToIndex(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              ensureShiftToCityIndexIsMutable();
              shiftToCityIndex_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addShiftToCityIndex(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string nameEn = 2;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
      }
      
      // required uint32 type = 3;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 shiftToIndex = 5;
      private java.util.List<java.lang.Integer> shiftToIndex_ = java.util.Collections.emptyList();;
      private void ensureShiftToIndexIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          shiftToIndex_ = new java.util.ArrayList<java.lang.Integer>(shiftToIndex_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getShiftToIndexList() {
        return java.util.Collections.unmodifiableList(shiftToIndex_);
      }
      public int getShiftToIndexCount() {
        return shiftToIndex_.size();
      }
      public int getShiftToIndex(int index) {
        return shiftToIndex_.get(index);
      }
      public Builder setShiftToIndex(
          int index, int value) {
        ensureShiftToIndexIsMutable();
        shiftToIndex_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addShiftToIndex(int value) {
        ensureShiftToIndexIsMutable();
        shiftToIndex_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllShiftToIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShiftToIndexIsMutable();
        super.addAll(values, shiftToIndex_);
        onChanged();
        return this;
      }
      public Builder clearShiftToIndex() {
        shiftToIndex_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated int32 shiftToCityIndex = 6;
      private java.util.List<java.lang.Integer> shiftToCityIndex_ = java.util.Collections.emptyList();;
      private void ensureShiftToCityIndexIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          shiftToCityIndex_ = new java.util.ArrayList<java.lang.Integer>(shiftToCityIndex_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getShiftToCityIndexList() {
        return java.util.Collections.unmodifiableList(shiftToCityIndex_);
      }
      public int getShiftToCityIndexCount() {
        return shiftToCityIndex_.size();
      }
      public int getShiftToCityIndex(int index) {
        return shiftToCityIndex_.get(index);
      }
      public Builder setShiftToCityIndex(
          int index, int value) {
        ensureShiftToCityIndexIsMutable();
        shiftToCityIndex_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addShiftToCityIndex(int value) {
        ensureShiftToCityIndexIsMutable();
        shiftToCityIndex_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllShiftToCityIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureShiftToCityIndexIsMutable();
        super.addAll(values, shiftToCityIndex_);
        onChanged();
        return this;
      }
      public Builder clearShiftToCityIndex() {
        shiftToCityIndex_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.AddressNameIndexDataAtom)
    }
    
    static {
      defaultInstance = new AddressNameIndexDataAtom(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.AddressNameIndexDataAtom)
  }
  
  public interface CityIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 city_type = 1;
    boolean hasCityType();
    int getCityType();
    
    // required string name = 2;
    boolean hasName();
    String getName();
    
    // optional string name_en = 3;
    boolean hasNameEn();
    String getNameEn();
    
    // repeated uint32 attributeTagIds = 11;
    java.util.List<java.lang.Integer> getAttributeTagIdsList();
    int getAttributeTagIdsCount();
    int getAttributeTagIds(int index);
    
    // repeated string attributeValues = 12;
    java.util.List<String> getAttributeValuesList();
    int getAttributeValuesCount();
    String getAttributeValues(int index);
    
    // optional uint64 id = 4;
    boolean hasId();
    long getId();
    
    // required uint32 x = 5;
    boolean hasX();
    int getX();
    
    // required uint32 y = 6;
    boolean hasY();
    int getY();
    
    // optional fixed32 shiftToCityBlockIndex = 10;
    boolean hasShiftToCityBlockIndex();
    int getShiftToCityBlockIndex();
  }
  public static final class CityIndex extends
      com.google.protobuf.GeneratedMessage
      implements CityIndexOrBuilder {
    // Use CityIndex.newBuilder() to construct.
    private CityIndex(Builder builder) {
      super(builder);
    }
    private CityIndex(boolean noInit) {}
    
    private static final CityIndex defaultInstance;
    public static CityIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public CityIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 city_type = 1;
    public static final int CITY_TYPE_FIELD_NUMBER = 1;
    private int cityType_;
    public boolean hasCityType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCityType() {
      return cityType_;
    }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en = 3;
    public static final int NAME_EN_FIELD_NUMBER = 3;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 attributeTagIds = 11;
    public static final int ATTRIBUTETAGIDS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> attributeTagIds_;
    public java.util.List<java.lang.Integer>
        getAttributeTagIdsList() {
      return attributeTagIds_;
    }
    public int getAttributeTagIdsCount() {
      return attributeTagIds_.size();
    }
    public int getAttributeTagIds(int index) {
      return attributeTagIds_.get(index);
    }
    
    // repeated string attributeValues = 12;
    public static final int ATTRIBUTEVALUES_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList attributeValues_;
    public java.util.List<String>
        getAttributeValuesList() {
      return attributeValues_;
    }
    public int getAttributeValuesCount() {
      return attributeValues_.size();
    }
    public String getAttributeValues(int index) {
      return attributeValues_.get(index);
    }
    
    // optional uint64 id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getId() {
      return id_;
    }
    
    // required uint32 x = 5;
    public static final int X_FIELD_NUMBER = 5;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getX() {
      return x_;
    }
    
    // required uint32 y = 6;
    public static final int Y_FIELD_NUMBER = 6;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getY() {
      return y_;
    }
    
    // optional fixed32 shiftToCityBlockIndex = 10;
    public static final int SHIFTTOCITYBLOCKINDEX_FIELD_NUMBER = 10;
    private int shiftToCityBlockIndex_;
    public boolean hasShiftToCityBlockIndex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getShiftToCityBlockIndex() {
      return shiftToCityBlockIndex_;
    }
    
    private void initFields() {
      cityType_ = 0;
      name_ = "";
      nameEn_ = "";
      attributeTagIds_ = java.util.Collections.emptyList();;
      attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      id_ = 0L;
      x_ = 0;
      y_ = 0;
      shiftToCityBlockIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cityType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, x_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, y_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFixed32(10, shiftToCityBlockIndex_);
      }
      for (int i = 0; i < attributeTagIds_.size(); i++) {
        output.writeUInt32(11, attributeTagIds_.get(i));
      }
      for (int i = 0; i < attributeValues_.size(); i++) {
        output.writeBytes(12, attributeValues_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cityType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, id_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, x_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, y_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(10, shiftToCityBlockIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeTagIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(attributeTagIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributeTagIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attributeValues_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAttributeValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.CityIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.CityIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.CityIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cityType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        shiftToCityBlockIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.CityIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.CityIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.CityIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.CityIndex build() {
        net.osmand.binary.OsmandOdb.CityIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.CityIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.CityIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.CityIndex buildPartial() {
        net.osmand.binary.OsmandOdb.CityIndex result = new net.osmand.binary.OsmandOdb.CityIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cityType_ = cityType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nameEn_ = nameEn_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeTagIds_ = java.util.Collections.unmodifiableList(attributeTagIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.attributeTagIds_ = attributeTagIds_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          attributeValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attributeValues_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.attributeValues_ = attributeValues_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shiftToCityBlockIndex_ = shiftToCityBlockIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.CityIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.CityIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.CityIndex other) {
        if (other == net.osmand.binary.OsmandOdb.CityIndex.getDefaultInstance()) return this;
        if (other.hasCityType()) {
          setCityType(other.getCityType());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.attributeTagIds_.isEmpty()) {
          if (attributeTagIds_.isEmpty()) {
            attributeTagIds_ = other.attributeTagIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAttributeTagIdsIsMutable();
            attributeTagIds_.addAll(other.attributeTagIds_);
          }
          onChanged();
        }
        if (!other.attributeValues_.isEmpty()) {
          if (attributeValues_.isEmpty()) {
            attributeValues_ = other.attributeValues_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAttributeValuesIsMutable();
            attributeValues_.addAll(other.attributeValues_);
          }
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasShiftToCityBlockIndex()) {
          setShiftToCityBlockIndex(other.getShiftToCityBlockIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cityType_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nameEn_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000020;
              id_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000040;
              x_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000080;
              y_ = input.readUInt32();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000100;
              shiftToCityBlockIndex_ = input.readFixed32();
              break;
            }
            case 88: {
              ensureAttributeTagIdsIsMutable();
              attributeTagIds_.add(input.readUInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttributeTagIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 98: {
              ensureAttributeValuesIsMutable();
              attributeValues_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 city_type = 1;
      private int cityType_ ;
      public boolean hasCityType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCityType() {
        return cityType_;
      }
      public Builder setCityType(int value) {
        bitField0_ |= 0x00000001;
        cityType_ = value;
        onChanged();
        return this;
      }
      public Builder clearCityType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cityType_ = 0;
        onChanged();
        return this;
      }
      
      // required string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional string name_en = 3;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        nameEn_ = value;
        onChanged();
      }
      
      // repeated uint32 attributeTagIds = 11;
      private java.util.List<java.lang.Integer> attributeTagIds_ = java.util.Collections.emptyList();;
      private void ensureAttributeTagIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeTagIds_ = new java.util.ArrayList<java.lang.Integer>(attributeTagIds_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttributeTagIdsList() {
        return java.util.Collections.unmodifiableList(attributeTagIds_);
      }
      public int getAttributeTagIdsCount() {
        return attributeTagIds_.size();
      }
      public int getAttributeTagIds(int index) {
        return attributeTagIds_.get(index);
      }
      public Builder setAttributeTagIds(
          int index, int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeTagIds(int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeTagIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeTagIdsIsMutable();
        super.addAll(values, attributeTagIds_);
        onChanged();
        return this;
      }
      public Builder clearAttributeTagIds() {
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated string attributeValues = 12;
      private com.google.protobuf.LazyStringList attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttributeValuesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          attributeValues_ = new com.google.protobuf.LazyStringArrayList(attributeValues_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<String>
          getAttributeValuesList() {
        return java.util.Collections.unmodifiableList(attributeValues_);
      }
      public int getAttributeValuesCount() {
        return attributeValues_.size();
      }
      public String getAttributeValues(int index) {
        return attributeValues_.get(index);
      }
      public Builder setAttributeValues(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeValues(
          java.lang.Iterable<String> values) {
        ensureAttributeValuesIsMutable();
        super.addAll(values, attributeValues_);
        onChanged();
        return this;
      }
      public Builder clearAttributeValues() {
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      void addAttributeValues(com.google.protobuf.ByteString value) {
        ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
      }
      
      // optional uint64 id = 4;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000020;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint32 x = 5;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000040;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000040);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 y = 6;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000080;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000080);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional fixed32 shiftToCityBlockIndex = 10;
      private int shiftToCityBlockIndex_ ;
      public boolean hasShiftToCityBlockIndex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getShiftToCityBlockIndex() {
        return shiftToCityBlockIndex_;
      }
      public Builder setShiftToCityBlockIndex(int value) {
        bitField0_ |= 0x00000100;
        shiftToCityBlockIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearShiftToCityBlockIndex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        shiftToCityBlockIndex_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.CityIndex)
    }
    
    static {
      defaultInstance = new CityIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.CityIndex)
  }
  
  public interface CityBlockIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional fixed32 shiftToCityIndex = 4;
    boolean hasShiftToCityIndex();
    int getShiftToCityIndex();
    
    // repeated .OsmAnd.OBF.BuildingIndex buildings = 10;
    java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> 
        getBuildingsList();
    net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index);
    int getBuildingsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
        getBuildingsOrBuilderList();
    net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.StreetIndex streets = 12;
    java.util.List<net.osmand.binary.OsmandOdb.StreetIndex> 
        getStreetsList();
    net.osmand.binary.OsmandOdb.StreetIndex getStreets(int index);
    int getStreetsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIndexOrBuilder> 
        getStreetsOrBuilderList();
    net.osmand.binary.OsmandOdb.StreetIndexOrBuilder getStreetsOrBuilder(
        int index);
  }
  public static final class CityBlockIndex extends
      com.google.protobuf.GeneratedMessage
      implements CityBlockIndexOrBuilder {
    // Use CityBlockIndex.newBuilder() to construct.
    private CityBlockIndex(Builder builder) {
      super(builder);
    }
    private CityBlockIndex(boolean noInit) {}
    
    private static final CityBlockIndex defaultInstance;
    public static CityBlockIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public CityBlockIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityBlockIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityBlockIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional fixed32 shiftToCityIndex = 4;
    public static final int SHIFTTOCITYINDEX_FIELD_NUMBER = 4;
    private int shiftToCityIndex_;
    public boolean hasShiftToCityIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getShiftToCityIndex() {
      return shiftToCityIndex_;
    }
    
    // repeated .OsmAnd.OBF.BuildingIndex buildings = 10;
    public static final int BUILDINGS_FIELD_NUMBER = 10;
    private java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> buildings_;
    public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> getBuildingsList() {
      return buildings_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
        getBuildingsOrBuilderList() {
      return buildings_;
    }
    public int getBuildingsCount() {
      return buildings_.size();
    }
    public net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index) {
      return buildings_.get(index);
    }
    public net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
        int index) {
      return buildings_.get(index);
    }
    
    // repeated .OsmAnd.OBF.StreetIndex streets = 12;
    public static final int STREETS_FIELD_NUMBER = 12;
    private java.util.List<net.osmand.binary.OsmandOdb.StreetIndex> streets_;
    public java.util.List<net.osmand.binary.OsmandOdb.StreetIndex> getStreetsList() {
      return streets_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIndexOrBuilder> 
        getStreetsOrBuilderList() {
      return streets_;
    }
    public int getStreetsCount() {
      return streets_.size();
    }
    public net.osmand.binary.OsmandOdb.StreetIndex getStreets(int index) {
      return streets_.get(index);
    }
    public net.osmand.binary.OsmandOdb.StreetIndexOrBuilder getStreetsOrBuilder(
        int index) {
      return streets_.get(index);
    }
    
    private void initFields() {
      shiftToCityIndex_ = 0;
      buildings_ = java.util.Collections.emptyList();
      streets_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getBuildingsCount(); i++) {
        if (!getBuildings(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getStreetsCount(); i++) {
        if (!getStreets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(4, shiftToCityIndex_);
      }
      for (int i = 0; i < buildings_.size(); i++) {
        output.writeMessage(10, buildings_.get(i));
      }
      for (int i = 0; i < streets_.size(); i++) {
        output.writeMessage(12, streets_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, shiftToCityIndex_);
      }
      for (int i = 0; i < buildings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, buildings_.get(i));
      }
      for (int i = 0; i < streets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, streets_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.CityBlockIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.CityBlockIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.CityBlockIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityBlockIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_CityBlockIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.CityBlockIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuildingsFieldBuilder();
          getStreetsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        shiftToCityIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (buildingsBuilder_ == null) {
          buildings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          buildingsBuilder_.clear();
        }
        if (streetsBuilder_ == null) {
          streets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          streetsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.CityBlockIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.CityBlockIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.CityBlockIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.CityBlockIndex build() {
        net.osmand.binary.OsmandOdb.CityBlockIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.CityBlockIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.CityBlockIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.CityBlockIndex buildPartial() {
        net.osmand.binary.OsmandOdb.CityBlockIndex result = new net.osmand.binary.OsmandOdb.CityBlockIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.shiftToCityIndex_ = shiftToCityIndex_;
        if (buildingsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            buildings_ = java.util.Collections.unmodifiableList(buildings_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.buildings_ = buildings_;
        } else {
          result.buildings_ = buildingsBuilder_.build();
        }
        if (streetsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            streets_ = java.util.Collections.unmodifiableList(streets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.streets_ = streets_;
        } else {
          result.streets_ = streetsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.CityBlockIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.CityBlockIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.CityBlockIndex other) {
        if (other == net.osmand.binary.OsmandOdb.CityBlockIndex.getDefaultInstance()) return this;
        if (other.hasShiftToCityIndex()) {
          setShiftToCityIndex(other.getShiftToCityIndex());
        }
        if (buildingsBuilder_ == null) {
          if (!other.buildings_.isEmpty()) {
            if (buildings_.isEmpty()) {
              buildings_ = other.buildings_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBuildingsIsMutable();
              buildings_.addAll(other.buildings_);
            }
            onChanged();
          }
        } else {
          if (!other.buildings_.isEmpty()) {
            if (buildingsBuilder_.isEmpty()) {
              buildingsBuilder_.dispose();
              buildingsBuilder_ = null;
              buildings_ = other.buildings_;
              bitField0_ = (bitField0_ & ~0x00000002);
              buildingsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuildingsFieldBuilder() : null;
            } else {
              buildingsBuilder_.addAllMessages(other.buildings_);
            }
          }
        }
        if (streetsBuilder_ == null) {
          if (!other.streets_.isEmpty()) {
            if (streets_.isEmpty()) {
              streets_ = other.streets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStreetsIsMutable();
              streets_.addAll(other.streets_);
            }
            onChanged();
          }
        } else {
          if (!other.streets_.isEmpty()) {
            if (streetsBuilder_.isEmpty()) {
              streetsBuilder_.dispose();
              streetsBuilder_ = null;
              streets_ = other.streets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              streetsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStreetsFieldBuilder() : null;
            } else {
              streetsBuilder_.addAllMessages(other.streets_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getBuildingsCount(); i++) {
          if (!getBuildings(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getStreetsCount(); i++) {
          if (!getStreets(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 37: {
              bitField0_ |= 0x00000001;
              shiftToCityIndex_ = input.readFixed32();
              break;
            }
            case 82: {
              net.osmand.binary.OsmandOdb.BuildingIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.BuildingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBuildings(subBuilder.buildPartial());
              break;
            }
            case 98: {
              net.osmand.binary.OsmandOdb.StreetIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.StreetIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStreets(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional fixed32 shiftToCityIndex = 4;
      private int shiftToCityIndex_ ;
      public boolean hasShiftToCityIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getShiftToCityIndex() {
        return shiftToCityIndex_;
      }
      public Builder setShiftToCityIndex(int value) {
        bitField0_ |= 0x00000001;
        shiftToCityIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearShiftToCityIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        shiftToCityIndex_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.BuildingIndex buildings = 10;
      private java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> buildings_ =
        java.util.Collections.emptyList();
      private void ensureBuildingsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          buildings_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.BuildingIndex>(buildings_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> buildingsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> getBuildingsList() {
        if (buildingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buildings_);
        } else {
          return buildingsBuilder_.getMessageList();
        }
      }
      public int getBuildingsCount() {
        if (buildingsBuilder_ == null) {
          return buildings_.size();
        } else {
          return buildingsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index) {
        if (buildingsBuilder_ == null) {
          return buildings_.get(index);
        } else {
          return buildingsBuilder_.getMessage(index);
        }
      }
      public Builder setBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.set(index, value);
          onChanged();
        } else {
          buildingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.set(index, builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBuildings(net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.add(value);
          onChanged();
        } else {
          buildingsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.add(index, value);
          onChanged();
        } else {
          buildingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBuildings(
          net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.add(builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.add(index, builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBuildings(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.BuildingIndex> values) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          super.addAll(values, buildings_);
          onChanged();
        } else {
          buildingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBuildings() {
        if (buildingsBuilder_ == null) {
          buildings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          buildingsBuilder_.clear();
        }
        return this;
      }
      public Builder removeBuildings(int index) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.remove(index);
          onChanged();
        } else {
          buildingsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder getBuildingsBuilder(
          int index) {
        return getBuildingsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
          int index) {
        if (buildingsBuilder_ == null) {
          return buildings_.get(index);  } else {
          return buildingsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
           getBuildingsOrBuilderList() {
        if (buildingsBuilder_ != null) {
          return buildingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buildings_);
        }
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder addBuildingsBuilder() {
        return getBuildingsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder addBuildingsBuilder(
          int index) {
        return getBuildingsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex.Builder> 
           getBuildingsBuilderList() {
        return getBuildingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
          getBuildingsFieldBuilder() {
        if (buildingsBuilder_ == null) {
          buildingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder>(
                  buildings_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          buildings_ = null;
        }
        return buildingsBuilder_;
      }
      
      // repeated .OsmAnd.OBF.StreetIndex streets = 12;
      private java.util.List<net.osmand.binary.OsmandOdb.StreetIndex> streets_ =
        java.util.Collections.emptyList();
      private void ensureStreetsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          streets_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.StreetIndex>(streets_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.StreetIndex, net.osmand.binary.OsmandOdb.StreetIndex.Builder, net.osmand.binary.OsmandOdb.StreetIndexOrBuilder> streetsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.StreetIndex> getStreetsList() {
        if (streetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(streets_);
        } else {
          return streetsBuilder_.getMessageList();
        }
      }
      public int getStreetsCount() {
        if (streetsBuilder_ == null) {
          return streets_.size();
        } else {
          return streetsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.StreetIndex getStreets(int index) {
        if (streetsBuilder_ == null) {
          return streets_.get(index);
        } else {
          return streetsBuilder_.getMessage(index);
        }
      }
      public Builder setStreets(
          int index, net.osmand.binary.OsmandOdb.StreetIndex value) {
        if (streetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreetsIsMutable();
          streets_.set(index, value);
          onChanged();
        } else {
          streetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setStreets(
          int index, net.osmand.binary.OsmandOdb.StreetIndex.Builder builderForValue) {
        if (streetsBuilder_ == null) {
          ensureStreetsIsMutable();
          streets_.set(index, builderForValue.build());
          onChanged();
        } else {
          streetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addStreets(net.osmand.binary.OsmandOdb.StreetIndex value) {
        if (streetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreetsIsMutable();
          streets_.add(value);
          onChanged();
        } else {
          streetsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addStreets(
          int index, net.osmand.binary.OsmandOdb.StreetIndex value) {
        if (streetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStreetsIsMutable();
          streets_.add(index, value);
          onChanged();
        } else {
          streetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addStreets(
          net.osmand.binary.OsmandOdb.StreetIndex.Builder builderForValue) {
        if (streetsBuilder_ == null) {
          ensureStreetsIsMutable();
          streets_.add(builderForValue.build());
          onChanged();
        } else {
          streetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addStreets(
          int index, net.osmand.binary.OsmandOdb.StreetIndex.Builder builderForValue) {
        if (streetsBuilder_ == null) {
          ensureStreetsIsMutable();
          streets_.add(index, builderForValue.build());
          onChanged();
        } else {
          streetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllStreets(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.StreetIndex> values) {
        if (streetsBuilder_ == null) {
          ensureStreetsIsMutable();
          super.addAll(values, streets_);
          onChanged();
        } else {
          streetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearStreets() {
        if (streetsBuilder_ == null) {
          streets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          streetsBuilder_.clear();
        }
        return this;
      }
      public Builder removeStreets(int index) {
        if (streetsBuilder_ == null) {
          ensureStreetsIsMutable();
          streets_.remove(index);
          onChanged();
        } else {
          streetsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.StreetIndex.Builder getStreetsBuilder(
          int index) {
        return getStreetsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.StreetIndexOrBuilder getStreetsOrBuilder(
          int index) {
        if (streetsBuilder_ == null) {
          return streets_.get(index);  } else {
          return streetsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIndexOrBuilder> 
           getStreetsOrBuilderList() {
        if (streetsBuilder_ != null) {
          return streetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(streets_);
        }
      }
      public net.osmand.binary.OsmandOdb.StreetIndex.Builder addStreetsBuilder() {
        return getStreetsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.StreetIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.StreetIndex.Builder addStreetsBuilder(
          int index) {
        return getStreetsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.StreetIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.StreetIndex.Builder> 
           getStreetsBuilderList() {
        return getStreetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.StreetIndex, net.osmand.binary.OsmandOdb.StreetIndex.Builder, net.osmand.binary.OsmandOdb.StreetIndexOrBuilder> 
          getStreetsFieldBuilder() {
        if (streetsBuilder_ == null) {
          streetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.StreetIndex, net.osmand.binary.OsmandOdb.StreetIndex.Builder, net.osmand.binary.OsmandOdb.StreetIndexOrBuilder>(
                  streets_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          streets_ = null;
        }
        return streetsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.CityBlockIndex)
    }
    
    static {
      defaultInstance = new CityBlockIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.CityBlockIndex)
  }
  
  public interface StreetIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // optional string name_en = 2;
    boolean hasNameEn();
    String getNameEn();
    
    // repeated uint32 attributeTagIds = 13;
    java.util.List<java.lang.Integer> getAttributeTagIdsList();
    int getAttributeTagIdsCount();
    int getAttributeTagIds(int index);
    
    // repeated string attributeValues = 14;
    java.util.List<String> getAttributeValuesList();
    int getAttributeValuesCount();
    String getAttributeValues(int index);
    
    // required sint32 x = 3;
    boolean hasX();
    int getX();
    
    // required sint32 y = 4;
    boolean hasY();
    int getY();
    
    // optional uint64 id = 6;
    boolean hasId();
    long getId();
    
    // repeated .OsmAnd.OBF.BuildingIndex buildings = 12;
    java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> 
        getBuildingsList();
    net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index);
    int getBuildingsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
        getBuildingsOrBuilderList();
    net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.StreetIntersection intersections = 5;
    java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection> 
        getIntersectionsList();
    net.osmand.binary.OsmandOdb.StreetIntersection getIntersections(int index);
    int getIntersectionsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder> 
        getIntersectionsOrBuilderList();
    net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder getIntersectionsOrBuilder(
        int index);
  }
  public static final class StreetIndex extends
      com.google.protobuf.GeneratedMessage
      implements StreetIndexOrBuilder {
    // Use StreetIndex.newBuilder() to construct.
    private StreetIndex(Builder builder) {
      super(builder);
    }
    private StreetIndex(boolean noInit) {}
    
    private static final StreetIndex defaultInstance;
    public static StreetIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public StreetIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 attributeTagIds = 13;
    public static final int ATTRIBUTETAGIDS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> attributeTagIds_;
    public java.util.List<java.lang.Integer>
        getAttributeTagIdsList() {
      return attributeTagIds_;
    }
    public int getAttributeTagIdsCount() {
      return attributeTagIds_.size();
    }
    public int getAttributeTagIds(int index) {
      return attributeTagIds_.get(index);
    }
    
    // repeated string attributeValues = 14;
    public static final int ATTRIBUTEVALUES_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList attributeValues_;
    public java.util.List<String>
        getAttributeValuesList() {
      return attributeValues_;
    }
    public int getAttributeValuesCount() {
      return attributeValues_.size();
    }
    public String getAttributeValues(int index) {
      return attributeValues_.get(index);
    }
    
    // required sint32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getX() {
      return x_;
    }
    
    // required sint32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getY() {
      return y_;
    }
    
    // optional uint64 id = 6;
    public static final int ID_FIELD_NUMBER = 6;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getId() {
      return id_;
    }
    
    // repeated .OsmAnd.OBF.BuildingIndex buildings = 12;
    public static final int BUILDINGS_FIELD_NUMBER = 12;
    private java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> buildings_;
    public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> getBuildingsList() {
      return buildings_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
        getBuildingsOrBuilderList() {
      return buildings_;
    }
    public int getBuildingsCount() {
      return buildings_.size();
    }
    public net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index) {
      return buildings_.get(index);
    }
    public net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
        int index) {
      return buildings_.get(index);
    }
    
    // repeated .OsmAnd.OBF.StreetIntersection intersections = 5;
    public static final int INTERSECTIONS_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection> intersections_;
    public java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection> getIntersectionsList() {
      return intersections_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder> 
        getIntersectionsOrBuilderList() {
      return intersections_;
    }
    public int getIntersectionsCount() {
      return intersections_.size();
    }
    public net.osmand.binary.OsmandOdb.StreetIntersection getIntersections(int index) {
      return intersections_.get(index);
    }
    public net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder getIntersectionsOrBuilder(
        int index) {
      return intersections_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      nameEn_ = "";
      attributeTagIds_ = java.util.Collections.emptyList();;
      attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      x_ = 0;
      y_ = 0;
      id_ = 0L;
      buildings_ = java.util.Collections.emptyList();
      intersections_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBuildingsCount(); i++) {
        if (!getBuildings(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getIntersectionsCount(); i++) {
        if (!getIntersections(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, y_);
      }
      for (int i = 0; i < intersections_.size(); i++) {
        output.writeMessage(5, intersections_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(6, id_);
      }
      for (int i = 0; i < buildings_.size(); i++) {
        output.writeMessage(12, buildings_.get(i));
      }
      for (int i = 0; i < attributeTagIds_.size(); i++) {
        output.writeUInt32(13, attributeTagIds_.get(i));
      }
      for (int i = 0; i < attributeValues_.size(); i++) {
        output.writeBytes(14, attributeValues_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, y_);
      }
      for (int i = 0; i < intersections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, intersections_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, id_);
      }
      for (int i = 0; i < buildings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, buildings_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeTagIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(attributeTagIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributeTagIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attributeValues_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAttributeValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.StreetIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.StreetIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.StreetIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBuildingsFieldBuilder();
          getIntersectionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (buildingsBuilder_ == null) {
          buildings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          buildingsBuilder_.clear();
        }
        if (intersectionsBuilder_ == null) {
          intersections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          intersectionsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.StreetIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.StreetIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.StreetIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.StreetIndex build() {
        net.osmand.binary.OsmandOdb.StreetIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.StreetIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.StreetIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.StreetIndex buildPartial() {
        net.osmand.binary.OsmandOdb.StreetIndex result = new net.osmand.binary.OsmandOdb.StreetIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameEn_ = nameEn_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = java.util.Collections.unmodifiableList(attributeTagIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.attributeTagIds_ = attributeTagIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attributeValues_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.attributeValues_ = attributeValues_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.id_ = id_;
        if (buildingsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            buildings_ = java.util.Collections.unmodifiableList(buildings_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.buildings_ = buildings_;
        } else {
          result.buildings_ = buildingsBuilder_.build();
        }
        if (intersectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            intersections_ = java.util.Collections.unmodifiableList(intersections_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.intersections_ = intersections_;
        } else {
          result.intersections_ = intersectionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.StreetIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.StreetIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.StreetIndex other) {
        if (other == net.osmand.binary.OsmandOdb.StreetIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.attributeTagIds_.isEmpty()) {
          if (attributeTagIds_.isEmpty()) {
            attributeTagIds_ = other.attributeTagIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAttributeTagIdsIsMutable();
            attributeTagIds_.addAll(other.attributeTagIds_);
          }
          onChanged();
        }
        if (!other.attributeValues_.isEmpty()) {
          if (attributeValues_.isEmpty()) {
            attributeValues_ = other.attributeValues_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAttributeValuesIsMutable();
            attributeValues_.addAll(other.attributeValues_);
          }
          onChanged();
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (buildingsBuilder_ == null) {
          if (!other.buildings_.isEmpty()) {
            if (buildings_.isEmpty()) {
              buildings_ = other.buildings_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureBuildingsIsMutable();
              buildings_.addAll(other.buildings_);
            }
            onChanged();
          }
        } else {
          if (!other.buildings_.isEmpty()) {
            if (buildingsBuilder_.isEmpty()) {
              buildingsBuilder_.dispose();
              buildingsBuilder_ = null;
              buildings_ = other.buildings_;
              bitField0_ = (bitField0_ & ~0x00000080);
              buildingsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBuildingsFieldBuilder() : null;
            } else {
              buildingsBuilder_.addAllMessages(other.buildings_);
            }
          }
        }
        if (intersectionsBuilder_ == null) {
          if (!other.intersections_.isEmpty()) {
            if (intersections_.isEmpty()) {
              intersections_ = other.intersections_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureIntersectionsIsMutable();
              intersections_.addAll(other.intersections_);
            }
            onChanged();
          }
        } else {
          if (!other.intersections_.isEmpty()) {
            if (intersectionsBuilder_.isEmpty()) {
              intersectionsBuilder_.dispose();
              intersectionsBuilder_ = null;
              intersections_ = other.intersections_;
              bitField0_ = (bitField0_ & ~0x00000100);
              intersectionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIntersectionsFieldBuilder() : null;
            } else {
              intersectionsBuilder_.addAllMessages(other.intersections_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        for (int i = 0; i < getBuildingsCount(); i++) {
          if (!getBuildings(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getIntersectionsCount(); i++) {
          if (!getIntersections(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nameEn_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000010;
              x_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000020;
              y_ = input.readSInt32();
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.StreetIntersection.Builder subBuilder = net.osmand.binary.OsmandOdb.StreetIntersection.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIntersections(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000040;
              id_ = input.readUInt64();
              break;
            }
            case 98: {
              net.osmand.binary.OsmandOdb.BuildingIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.BuildingIndex.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBuildings(subBuilder.buildPartial());
              break;
            }
            case 104: {
              ensureAttributeTagIdsIsMutable();
              attributeTagIds_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttributeTagIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              ensureAttributeValuesIsMutable();
              attributeValues_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string name_en = 2;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
      }
      
      // repeated uint32 attributeTagIds = 13;
      private java.util.List<java.lang.Integer> attributeTagIds_ = java.util.Collections.emptyList();;
      private void ensureAttributeTagIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = new java.util.ArrayList<java.lang.Integer>(attributeTagIds_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttributeTagIdsList() {
        return java.util.Collections.unmodifiableList(attributeTagIds_);
      }
      public int getAttributeTagIdsCount() {
        return attributeTagIds_.size();
      }
      public int getAttributeTagIds(int index) {
        return attributeTagIds_.get(index);
      }
      public Builder setAttributeTagIds(
          int index, int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeTagIds(int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeTagIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeTagIdsIsMutable();
        super.addAll(values, attributeTagIds_);
        onChanged();
        return this;
      }
      public Builder clearAttributeTagIds() {
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated string attributeValues = 14;
      private com.google.protobuf.LazyStringList attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttributeValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.LazyStringArrayList(attributeValues_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getAttributeValuesList() {
        return java.util.Collections.unmodifiableList(attributeValues_);
      }
      public int getAttributeValuesCount() {
        return attributeValues_.size();
      }
      public String getAttributeValues(int index) {
        return attributeValues_.get(index);
      }
      public Builder setAttributeValues(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeValues(
          java.lang.Iterable<String> values) {
        ensureAttributeValuesIsMutable();
        super.addAll(values, attributeValues_);
        onChanged();
        return this;
      }
      public Builder clearAttributeValues() {
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      void addAttributeValues(com.google.protobuf.ByteString value) {
        ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
      }
      
      // required sint32 x = 3;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000010;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000010);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 y = 4;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000020;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 id = 6;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000040;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.BuildingIndex buildings = 12;
      private java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> buildings_ =
        java.util.Collections.emptyList();
      private void ensureBuildingsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          buildings_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.BuildingIndex>(buildings_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> buildingsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex> getBuildingsList() {
        if (buildingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buildings_);
        } else {
          return buildingsBuilder_.getMessageList();
        }
      }
      public int getBuildingsCount() {
        if (buildingsBuilder_ == null) {
          return buildings_.size();
        } else {
          return buildingsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex getBuildings(int index) {
        if (buildingsBuilder_ == null) {
          return buildings_.get(index);
        } else {
          return buildingsBuilder_.getMessage(index);
        }
      }
      public Builder setBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.set(index, value);
          onChanged();
        } else {
          buildingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.set(index, builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBuildings(net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.add(value);
          onChanged();
        } else {
          buildingsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex value) {
        if (buildingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildingsIsMutable();
          buildings_.add(index, value);
          onChanged();
        } else {
          buildingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBuildings(
          net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.add(builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBuildings(
          int index, net.osmand.binary.OsmandOdb.BuildingIndex.Builder builderForValue) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.add(index, builderForValue.build());
          onChanged();
        } else {
          buildingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBuildings(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.BuildingIndex> values) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          super.addAll(values, buildings_);
          onChanged();
        } else {
          buildingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBuildings() {
        if (buildingsBuilder_ == null) {
          buildings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          buildingsBuilder_.clear();
        }
        return this;
      }
      public Builder removeBuildings(int index) {
        if (buildingsBuilder_ == null) {
          ensureBuildingsIsMutable();
          buildings_.remove(index);
          onChanged();
        } else {
          buildingsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder getBuildingsBuilder(
          int index) {
        return getBuildingsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder getBuildingsOrBuilder(
          int index) {
        if (buildingsBuilder_ == null) {
          return buildings_.get(index);  } else {
          return buildingsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
           getBuildingsOrBuilderList() {
        if (buildingsBuilder_ != null) {
          return buildingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buildings_);
        }
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder addBuildingsBuilder() {
        return getBuildingsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.BuildingIndex.Builder addBuildingsBuilder(
          int index) {
        return getBuildingsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.BuildingIndex.Builder> 
           getBuildingsBuilderList() {
        return getBuildingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder> 
          getBuildingsFieldBuilder() {
        if (buildingsBuilder_ == null) {
          buildingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.BuildingIndex, net.osmand.binary.OsmandOdb.BuildingIndex.Builder, net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder>(
                  buildings_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          buildings_ = null;
        }
        return buildingsBuilder_;
      }
      
      // repeated .OsmAnd.OBF.StreetIntersection intersections = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection> intersections_ =
        java.util.Collections.emptyList();
      private void ensureIntersectionsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          intersections_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.StreetIntersection>(intersections_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.StreetIntersection, net.osmand.binary.OsmandOdb.StreetIntersection.Builder, net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder> intersectionsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection> getIntersectionsList() {
        if (intersectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(intersections_);
        } else {
          return intersectionsBuilder_.getMessageList();
        }
      }
      public int getIntersectionsCount() {
        if (intersectionsBuilder_ == null) {
          return intersections_.size();
        } else {
          return intersectionsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.StreetIntersection getIntersections(int index) {
        if (intersectionsBuilder_ == null) {
          return intersections_.get(index);
        } else {
          return intersectionsBuilder_.getMessage(index);
        }
      }
      public Builder setIntersections(
          int index, net.osmand.binary.OsmandOdb.StreetIntersection value) {
        if (intersectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntersectionsIsMutable();
          intersections_.set(index, value);
          onChanged();
        } else {
          intersectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setIntersections(
          int index, net.osmand.binary.OsmandOdb.StreetIntersection.Builder builderForValue) {
        if (intersectionsBuilder_ == null) {
          ensureIntersectionsIsMutable();
          intersections_.set(index, builderForValue.build());
          onChanged();
        } else {
          intersectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addIntersections(net.osmand.binary.OsmandOdb.StreetIntersection value) {
        if (intersectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntersectionsIsMutable();
          intersections_.add(value);
          onChanged();
        } else {
          intersectionsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addIntersections(
          int index, net.osmand.binary.OsmandOdb.StreetIntersection value) {
        if (intersectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIntersectionsIsMutable();
          intersections_.add(index, value);
          onChanged();
        } else {
          intersectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addIntersections(
          net.osmand.binary.OsmandOdb.StreetIntersection.Builder builderForValue) {
        if (intersectionsBuilder_ == null) {
          ensureIntersectionsIsMutable();
          intersections_.add(builderForValue.build());
          onChanged();
        } else {
          intersectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addIntersections(
          int index, net.osmand.binary.OsmandOdb.StreetIntersection.Builder builderForValue) {
        if (intersectionsBuilder_ == null) {
          ensureIntersectionsIsMutable();
          intersections_.add(index, builderForValue.build());
          onChanged();
        } else {
          intersectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllIntersections(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.StreetIntersection> values) {
        if (intersectionsBuilder_ == null) {
          ensureIntersectionsIsMutable();
          super.addAll(values, intersections_);
          onChanged();
        } else {
          intersectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearIntersections() {
        if (intersectionsBuilder_ == null) {
          intersections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          intersectionsBuilder_.clear();
        }
        return this;
      }
      public Builder removeIntersections(int index) {
        if (intersectionsBuilder_ == null) {
          ensureIntersectionsIsMutable();
          intersections_.remove(index);
          onChanged();
        } else {
          intersectionsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.StreetIntersection.Builder getIntersectionsBuilder(
          int index) {
        return getIntersectionsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder getIntersectionsOrBuilder(
          int index) {
        if (intersectionsBuilder_ == null) {
          return intersections_.get(index);  } else {
          return intersectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder> 
           getIntersectionsOrBuilderList() {
        if (intersectionsBuilder_ != null) {
          return intersectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(intersections_);
        }
      }
      public net.osmand.binary.OsmandOdb.StreetIntersection.Builder addIntersectionsBuilder() {
        return getIntersectionsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.StreetIntersection.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.StreetIntersection.Builder addIntersectionsBuilder(
          int index) {
        return getIntersectionsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.StreetIntersection.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.StreetIntersection.Builder> 
           getIntersectionsBuilderList() {
        return getIntersectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.StreetIntersection, net.osmand.binary.OsmandOdb.StreetIntersection.Builder, net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder> 
          getIntersectionsFieldBuilder() {
        if (intersectionsBuilder_ == null) {
          intersectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.StreetIntersection, net.osmand.binary.OsmandOdb.StreetIntersection.Builder, net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder>(
                  intersections_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          intersections_ = null;
        }
        return intersectionsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.StreetIndex)
    }
    
    static {
      defaultInstance = new StreetIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.StreetIndex)
  }
  
  public interface StreetIntersectionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 2;
    boolean hasName();
    String getName();
    
    // optional string name_en = 3;
    boolean hasNameEn();
    String getNameEn();
    
    // repeated uint32 attributeTagIds = 6;
    java.util.List<java.lang.Integer> getAttributeTagIdsList();
    int getAttributeTagIdsCount();
    int getAttributeTagIds(int index);
    
    // repeated string attributeValues = 7;
    java.util.List<String> getAttributeValuesList();
    int getAttributeValuesCount();
    String getAttributeValues(int index);
    
    // required sint32 intersectedX = 4;
    boolean hasIntersectedX();
    int getIntersectedX();
    
    // required sint32 intersectedY = 5;
    boolean hasIntersectedY();
    int getIntersectedY();
  }
  public static final class StreetIntersection extends
      com.google.protobuf.GeneratedMessage
      implements StreetIntersectionOrBuilder {
    // Use StreetIntersection.newBuilder() to construct.
    private StreetIntersection(Builder builder) {
      super(builder);
    }
    private StreetIntersection(boolean noInit) {}
    
    private static final StreetIntersection defaultInstance;
    public static StreetIntersection getDefaultInstance() {
      return defaultInstance;
    }
    
    public StreetIntersection getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIntersection_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIntersection_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en = 3;
    public static final int NAME_EN_FIELD_NUMBER = 3;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 attributeTagIds = 6;
    public static final int ATTRIBUTETAGIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> attributeTagIds_;
    public java.util.List<java.lang.Integer>
        getAttributeTagIdsList() {
      return attributeTagIds_;
    }
    public int getAttributeTagIdsCount() {
      return attributeTagIds_.size();
    }
    public int getAttributeTagIds(int index) {
      return attributeTagIds_.get(index);
    }
    
    // repeated string attributeValues = 7;
    public static final int ATTRIBUTEVALUES_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList attributeValues_;
    public java.util.List<String>
        getAttributeValuesList() {
      return attributeValues_;
    }
    public int getAttributeValuesCount() {
      return attributeValues_.size();
    }
    public String getAttributeValues(int index) {
      return attributeValues_.get(index);
    }
    
    // required sint32 intersectedX = 4;
    public static final int INTERSECTEDX_FIELD_NUMBER = 4;
    private int intersectedX_;
    public boolean hasIntersectedX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getIntersectedX() {
      return intersectedX_;
    }
    
    // required sint32 intersectedY = 5;
    public static final int INTERSECTEDY_FIELD_NUMBER = 5;
    private int intersectedY_;
    public boolean hasIntersectedY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getIntersectedY() {
      return intersectedY_;
    }
    
    private void initFields() {
      name_ = "";
      nameEn_ = "";
      attributeTagIds_ = java.util.Collections.emptyList();;
      attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      intersectedX_ = 0;
      intersectedY_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntersectedX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIntersectedY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(4, intersectedX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(5, intersectedY_);
      }
      for (int i = 0; i < attributeTagIds_.size(); i++) {
        output.writeUInt32(6, attributeTagIds_.get(i));
      }
      for (int i = 0; i < attributeValues_.size(); i++) {
        output.writeBytes(7, attributeValues_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, intersectedX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, intersectedY_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeTagIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(attributeTagIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributeTagIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attributeValues_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAttributeValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.StreetIntersection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.StreetIntersection prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.StreetIntersectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIntersection_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_StreetIntersection_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.StreetIntersection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        intersectedX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        intersectedY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.StreetIntersection.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.StreetIntersection getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.StreetIntersection.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.StreetIntersection build() {
        net.osmand.binary.OsmandOdb.StreetIntersection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.StreetIntersection buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.StreetIntersection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.StreetIntersection buildPartial() {
        net.osmand.binary.OsmandOdb.StreetIntersection result = new net.osmand.binary.OsmandOdb.StreetIntersection(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameEn_ = nameEn_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = java.util.Collections.unmodifiableList(attributeTagIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.attributeTagIds_ = attributeTagIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attributeValues_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.attributeValues_ = attributeValues_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intersectedX_ = intersectedX_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.intersectedY_ = intersectedY_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.StreetIntersection) {
          return mergeFrom((net.osmand.binary.OsmandOdb.StreetIntersection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.StreetIntersection other) {
        if (other == net.osmand.binary.OsmandOdb.StreetIntersection.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.attributeTagIds_.isEmpty()) {
          if (attributeTagIds_.isEmpty()) {
            attributeTagIds_ = other.attributeTagIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAttributeTagIdsIsMutable();
            attributeTagIds_.addAll(other.attributeTagIds_);
          }
          onChanged();
        }
        if (!other.attributeValues_.isEmpty()) {
          if (attributeValues_.isEmpty()) {
            attributeValues_ = other.attributeValues_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAttributeValuesIsMutable();
            attributeValues_.addAll(other.attributeValues_);
          }
          onChanged();
        }
        if (other.hasIntersectedX()) {
          setIntersectedX(other.getIntersectedX());
        }
        if (other.hasIntersectedY()) {
          setIntersectedY(other.getIntersectedY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasIntersectedX()) {
          
          return false;
        }
        if (!hasIntersectedY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              nameEn_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              intersectedX_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000020;
              intersectedY_ = input.readSInt32();
              break;
            }
            case 48: {
              ensureAttributeTagIdsIsMutable();
              attributeTagIds_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttributeTagIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              ensureAttributeValuesIsMutable();
              attributeValues_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string name_en = 3;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
      }
      
      // repeated uint32 attributeTagIds = 6;
      private java.util.List<java.lang.Integer> attributeTagIds_ = java.util.Collections.emptyList();;
      private void ensureAttributeTagIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = new java.util.ArrayList<java.lang.Integer>(attributeTagIds_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttributeTagIdsList() {
        return java.util.Collections.unmodifiableList(attributeTagIds_);
      }
      public int getAttributeTagIdsCount() {
        return attributeTagIds_.size();
      }
      public int getAttributeTagIds(int index) {
        return attributeTagIds_.get(index);
      }
      public Builder setAttributeTagIds(
          int index, int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeTagIds(int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeTagIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeTagIdsIsMutable();
        super.addAll(values, attributeTagIds_);
        onChanged();
        return this;
      }
      public Builder clearAttributeTagIds() {
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated string attributeValues = 7;
      private com.google.protobuf.LazyStringList attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttributeValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.LazyStringArrayList(attributeValues_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getAttributeValuesList() {
        return java.util.Collections.unmodifiableList(attributeValues_);
      }
      public int getAttributeValuesCount() {
        return attributeValues_.size();
      }
      public String getAttributeValues(int index) {
        return attributeValues_.get(index);
      }
      public Builder setAttributeValues(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeValues(
          java.lang.Iterable<String> values) {
        ensureAttributeValuesIsMutable();
        super.addAll(values, attributeValues_);
        onChanged();
        return this;
      }
      public Builder clearAttributeValues() {
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      void addAttributeValues(com.google.protobuf.ByteString value) {
        ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
      }
      
      // required sint32 intersectedX = 4;
      private int intersectedX_ ;
      public boolean hasIntersectedX() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getIntersectedX() {
        return intersectedX_;
      }
      public Builder setIntersectedX(int value) {
        bitField0_ |= 0x00000010;
        intersectedX_ = value;
        onChanged();
        return this;
      }
      public Builder clearIntersectedX() {
        bitField0_ = (bitField0_ & ~0x00000010);
        intersectedX_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 intersectedY = 5;
      private int intersectedY_ ;
      public boolean hasIntersectedY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getIntersectedY() {
        return intersectedY_;
      }
      public Builder setIntersectedY(int value) {
        bitField0_ |= 0x00000020;
        intersectedY_ = value;
        onChanged();
        return this;
      }
      public Builder clearIntersectedY() {
        bitField0_ = (bitField0_ & ~0x00000020);
        intersectedY_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.StreetIntersection)
    }
    
    static {
      defaultInstance = new StreetIntersection(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.StreetIntersection)
  }
  
  public interface BuildingIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // optional string name_en = 2;
    boolean hasNameEn();
    String getNameEn();
    
    // repeated uint32 attributeTagIds = 15;
    java.util.List<java.lang.Integer> getAttributeTagIdsList();
    int getAttributeTagIdsCount();
    int getAttributeTagIds(int index);
    
    // repeated string attributeValues = 16;
    java.util.List<String> getAttributeValuesList();
    int getAttributeValuesCount();
    String getAttributeValues(int index);
    
    // optional string name2 = 3;
    boolean hasName2();
    String getName2();
    
    // optional string name_en2 = 4;
    boolean hasNameEn2();
    String getNameEn2();
    
    // repeated uint32 attributeTagIds2 = 17;
    java.util.List<java.lang.Integer> getAttributeTagIds2List();
    int getAttributeTagIds2Count();
    int getAttributeTagIds2(int index);
    
    // repeated string attributeValues2 = 18;
    java.util.List<String> getAttributeValues2List();
    int getAttributeValues2Count();
    String getAttributeValues2(int index);
    
    // optional sint32 interpolation = 5;
    boolean hasInterpolation();
    int getInterpolation();
    
    // required sint32 x = 7;
    boolean hasX();
    int getX();
    
    // required sint32 y = 8;
    boolean hasY();
    int getY();
    
    // optional sint32 x2 = 9;
    boolean hasX2();
    int getX2();
    
    // optional sint32 y2 = 10;
    boolean hasY2();
    int getY2();
    
    // optional uint64 id = 13;
    boolean hasId();
    long getId();
    
    // optional string postcode = 14;
    boolean hasPostcode();
    String getPostcode();
  }
  public static final class BuildingIndex extends
      com.google.protobuf.GeneratedMessage
      implements BuildingIndexOrBuilder {
    // Use BuildingIndex.newBuilder() to construct.
    private BuildingIndex(Builder builder) {
      super(builder);
    }
    private BuildingIndex(boolean noInit) {}
    
    private static final BuildingIndex defaultInstance;
    public static BuildingIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public BuildingIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_BuildingIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_BuildingIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en = 2;
    public static final int NAME_EN_FIELD_NUMBER = 2;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 attributeTagIds = 15;
    public static final int ATTRIBUTETAGIDS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> attributeTagIds_;
    public java.util.List<java.lang.Integer>
        getAttributeTagIdsList() {
      return attributeTagIds_;
    }
    public int getAttributeTagIdsCount() {
      return attributeTagIds_.size();
    }
    public int getAttributeTagIds(int index) {
      return attributeTagIds_.get(index);
    }
    
    // repeated string attributeValues = 16;
    public static final int ATTRIBUTEVALUES_FIELD_NUMBER = 16;
    private com.google.protobuf.LazyStringList attributeValues_;
    public java.util.List<String>
        getAttributeValuesList() {
      return attributeValues_;
    }
    public int getAttributeValuesCount() {
      return attributeValues_.size();
    }
    public String getAttributeValues(int index) {
      return attributeValues_.get(index);
    }
    
    // optional string name2 = 3;
    public static final int NAME2_FIELD_NUMBER = 3;
    private java.lang.Object name2_;
    public boolean hasName2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getName2() {
      java.lang.Object ref = name2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name2_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getName2Bytes() {
      java.lang.Object ref = name2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string name_en2 = 4;
    public static final int NAME_EN2_FIELD_NUMBER = 4;
    private java.lang.Object nameEn2_;
    public boolean hasNameEn2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getNameEn2() {
      java.lang.Object ref = nameEn2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn2_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEn2Bytes() {
      java.lang.Object ref = nameEn2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 attributeTagIds2 = 17;
    public static final int ATTRIBUTETAGIDS2_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> attributeTagIds2_;
    public java.util.List<java.lang.Integer>
        getAttributeTagIds2List() {
      return attributeTagIds2_;
    }
    public int getAttributeTagIds2Count() {
      return attributeTagIds2_.size();
    }
    public int getAttributeTagIds2(int index) {
      return attributeTagIds2_.get(index);
    }
    
    // repeated string attributeValues2 = 18;
    public static final int ATTRIBUTEVALUES2_FIELD_NUMBER = 18;
    private com.google.protobuf.LazyStringList attributeValues2_;
    public java.util.List<String>
        getAttributeValues2List() {
      return attributeValues2_;
    }
    public int getAttributeValues2Count() {
      return attributeValues2_.size();
    }
    public String getAttributeValues2(int index) {
      return attributeValues2_.get(index);
    }
    
    // optional sint32 interpolation = 5;
    public static final int INTERPOLATION_FIELD_NUMBER = 5;
    private int interpolation_;
    public boolean hasInterpolation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getInterpolation() {
      return interpolation_;
    }
    
    // required sint32 x = 7;
    public static final int X_FIELD_NUMBER = 7;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getX() {
      return x_;
    }
    
    // required sint32 y = 8;
    public static final int Y_FIELD_NUMBER = 8;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getY() {
      return y_;
    }
    
    // optional sint32 x2 = 9;
    public static final int X2_FIELD_NUMBER = 9;
    private int x2_;
    public boolean hasX2() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getX2() {
      return x2_;
    }
    
    // optional sint32 y2 = 10;
    public static final int Y2_FIELD_NUMBER = 10;
    private int y2_;
    public boolean hasY2() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getY2() {
      return y2_;
    }
    
    // optional uint64 id = 13;
    public static final int ID_FIELD_NUMBER = 13;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getId() {
      return id_;
    }
    
    // optional string postcode = 14;
    public static final int POSTCODE_FIELD_NUMBER = 14;
    private java.lang.Object postcode_;
    public boolean hasPostcode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getPostcode() {
      java.lang.Object ref = postcode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          postcode_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPostcodeBytes() {
      java.lang.Object ref = postcode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        postcode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
      nameEn_ = "";
      attributeTagIds_ = java.util.Collections.emptyList();;
      attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      name2_ = "";
      nameEn2_ = "";
      attributeTagIds2_ = java.util.Collections.emptyList();;
      attributeValues2_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      interpolation_ = 0;
      x_ = 0;
      y_ = 0;
      x2_ = 0;
      y2_ = 0;
      id_ = 0L;
      postcode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getName2Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameEn2Bytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, interpolation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(7, x_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(8, y_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(9, x2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(10, y2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt64(13, id_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(14, getPostcodeBytes());
      }
      for (int i = 0; i < attributeTagIds_.size(); i++) {
        output.writeUInt32(15, attributeTagIds_.get(i));
      }
      for (int i = 0; i < attributeValues_.size(); i++) {
        output.writeBytes(16, attributeValues_.getByteString(i));
      }
      for (int i = 0; i < attributeTagIds2_.size(); i++) {
        output.writeUInt32(17, attributeTagIds2_.get(i));
      }
      for (int i = 0; i < attributeValues2_.size(); i++) {
        output.writeBytes(18, attributeValues2_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getName2Bytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameEn2Bytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, interpolation_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, x_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, y_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, x2_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, y2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, id_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getPostcodeBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeTagIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(attributeTagIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAttributeTagIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attributeValues_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getAttributeValuesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeTagIds2_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(attributeTagIds2_.get(i));
        }
        size += dataSize;
        size += 2 * getAttributeTagIds2List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attributeValues2_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attributeValues2_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getAttributeValues2List().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.BuildingIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.BuildingIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.BuildingIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_BuildingIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_BuildingIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.BuildingIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        name2_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        nameEn2_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        attributeTagIds2_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        attributeValues2_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        interpolation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        x2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        y2_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        postcode_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.BuildingIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.BuildingIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.BuildingIndex build() {
        net.osmand.binary.OsmandOdb.BuildingIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.BuildingIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.BuildingIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.BuildingIndex buildPartial() {
        net.osmand.binary.OsmandOdb.BuildingIndex result = new net.osmand.binary.OsmandOdb.BuildingIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nameEn_ = nameEn_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = java.util.Collections.unmodifiableList(attributeTagIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.attributeTagIds_ = attributeTagIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attributeValues_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.attributeValues_ = attributeValues_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name2_ = name2_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nameEn2_ = nameEn2_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          attributeTagIds2_ = java.util.Collections.unmodifiableList(attributeTagIds2_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.attributeTagIds2_ = attributeTagIds2_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          attributeValues2_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attributeValues2_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.attributeValues2_ = attributeValues2_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.interpolation_ = interpolation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.x2_ = x2_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.y2_ = y2_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.postcode_ = postcode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.BuildingIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.BuildingIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.BuildingIndex other) {
        if (other == net.osmand.binary.OsmandOdb.BuildingIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.attributeTagIds_.isEmpty()) {
          if (attributeTagIds_.isEmpty()) {
            attributeTagIds_ = other.attributeTagIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAttributeTagIdsIsMutable();
            attributeTagIds_.addAll(other.attributeTagIds_);
          }
          onChanged();
        }
        if (!other.attributeValues_.isEmpty()) {
          if (attributeValues_.isEmpty()) {
            attributeValues_ = other.attributeValues_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAttributeValuesIsMutable();
            attributeValues_.addAll(other.attributeValues_);
          }
          onChanged();
        }
        if (other.hasName2()) {
          setName2(other.getName2());
        }
        if (other.hasNameEn2()) {
          setNameEn2(other.getNameEn2());
        }
        if (!other.attributeTagIds2_.isEmpty()) {
          if (attributeTagIds2_.isEmpty()) {
            attributeTagIds2_ = other.attributeTagIds2_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAttributeTagIds2IsMutable();
            attributeTagIds2_.addAll(other.attributeTagIds2_);
          }
          onChanged();
        }
        if (!other.attributeValues2_.isEmpty()) {
          if (attributeValues2_.isEmpty()) {
            attributeValues2_ = other.attributeValues2_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureAttributeValues2IsMutable();
            attributeValues2_.addAll(other.attributeValues2_);
          }
          onChanged();
        }
        if (other.hasInterpolation()) {
          setInterpolation(other.getInterpolation());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasX2()) {
          setX2(other.getX2());
        }
        if (other.hasY2()) {
          setY2(other.getY2());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPostcode()) {
          setPostcode(other.getPostcode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nameEn_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000010;
              name2_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000020;
              nameEn2_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000100;
              interpolation_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000200;
              x_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000400;
              y_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000800;
              x2_ = input.readSInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00001000;
              y2_ = input.readSInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00002000;
              id_ = input.readUInt64();
              break;
            }
            case 114: {
              bitField0_ |= 0x00004000;
              postcode_ = input.readBytes();
              break;
            }
            case 120: {
              ensureAttributeTagIdsIsMutable();
              attributeTagIds_.add(input.readUInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttributeTagIds(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              ensureAttributeValuesIsMutable();
              attributeValues_.add(input.readBytes());
              break;
            }
            case 136: {
              ensureAttributeTagIds2IsMutable();
              attributeTagIds2_.add(input.readUInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addAttributeTagIds2(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 146: {
              ensureAttributeValues2IsMutable();
              attributeValues2_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string name_en = 2;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nameEn_ = value;
        onChanged();
      }
      
      // repeated uint32 attributeTagIds = 15;
      private java.util.List<java.lang.Integer> attributeTagIds_ = java.util.Collections.emptyList();;
      private void ensureAttributeTagIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attributeTagIds_ = new java.util.ArrayList<java.lang.Integer>(attributeTagIds_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttributeTagIdsList() {
        return java.util.Collections.unmodifiableList(attributeTagIds_);
      }
      public int getAttributeTagIdsCount() {
        return attributeTagIds_.size();
      }
      public int getAttributeTagIds(int index) {
        return attributeTagIds_.get(index);
      }
      public Builder setAttributeTagIds(
          int index, int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeTagIds(int value) {
        ensureAttributeTagIdsIsMutable();
        attributeTagIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeTagIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeTagIdsIsMutable();
        super.addAll(values, attributeTagIds_);
        onChanged();
        return this;
      }
      public Builder clearAttributeTagIds() {
        attributeTagIds_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated string attributeValues = 16;
      private com.google.protobuf.LazyStringList attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttributeValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          attributeValues_ = new com.google.protobuf.LazyStringArrayList(attributeValues_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getAttributeValuesList() {
        return java.util.Collections.unmodifiableList(attributeValues_);
      }
      public int getAttributeValuesCount() {
        return attributeValues_.size();
      }
      public String getAttributeValues(int index) {
        return attributeValues_.get(index);
      }
      public Builder setAttributeValues(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeValues(
          java.lang.Iterable<String> values) {
        ensureAttributeValuesIsMutable();
        super.addAll(values, attributeValues_);
        onChanged();
        return this;
      }
      public Builder clearAttributeValues() {
        attributeValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      void addAttributeValues(com.google.protobuf.ByteString value) {
        ensureAttributeValuesIsMutable();
        attributeValues_.add(value);
        onChanged();
      }
      
      // optional string name2 = 3;
      private java.lang.Object name2_ = "";
      public boolean hasName2() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getName2() {
        java.lang.Object ref = name2_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName2(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        name2_ = value;
        onChanged();
        return this;
      }
      public Builder clearName2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        name2_ = getDefaultInstance().getName2();
        onChanged();
        return this;
      }
      void setName2(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        name2_ = value;
        onChanged();
      }
      
      // optional string name_en2 = 4;
      private java.lang.Object nameEn2_ = "";
      public boolean hasNameEn2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getNameEn2() {
        java.lang.Object ref = nameEn2_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn2(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        nameEn2_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nameEn2_ = getDefaultInstance().getNameEn2();
        onChanged();
        return this;
      }
      void setNameEn2(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        nameEn2_ = value;
        onChanged();
      }
      
      // repeated uint32 attributeTagIds2 = 17;
      private java.util.List<java.lang.Integer> attributeTagIds2_ = java.util.Collections.emptyList();;
      private void ensureAttributeTagIds2IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          attributeTagIds2_ = new java.util.ArrayList<java.lang.Integer>(attributeTagIds2_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getAttributeTagIds2List() {
        return java.util.Collections.unmodifiableList(attributeTagIds2_);
      }
      public int getAttributeTagIds2Count() {
        return attributeTagIds2_.size();
      }
      public int getAttributeTagIds2(int index) {
        return attributeTagIds2_.get(index);
      }
      public Builder setAttributeTagIds2(
          int index, int value) {
        ensureAttributeTagIds2IsMutable();
        attributeTagIds2_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeTagIds2(int value) {
        ensureAttributeTagIds2IsMutable();
        attributeTagIds2_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeTagIds2(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAttributeTagIds2IsMutable();
        super.addAll(values, attributeTagIds2_);
        onChanged();
        return this;
      }
      public Builder clearAttributeTagIds2() {
        attributeTagIds2_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // repeated string attributeValues2 = 18;
      private com.google.protobuf.LazyStringList attributeValues2_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttributeValues2IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          attributeValues2_ = new com.google.protobuf.LazyStringArrayList(attributeValues2_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<String>
          getAttributeValues2List() {
        return java.util.Collections.unmodifiableList(attributeValues2_);
      }
      public int getAttributeValues2Count() {
        return attributeValues2_.size();
      }
      public String getAttributeValues2(int index) {
        return attributeValues2_.get(index);
      }
      public Builder setAttributeValues2(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValues2IsMutable();
        attributeValues2_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttributeValues2(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttributeValues2IsMutable();
        attributeValues2_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttributeValues2(
          java.lang.Iterable<String> values) {
        ensureAttributeValues2IsMutable();
        super.addAll(values, attributeValues2_);
        onChanged();
        return this;
      }
      public Builder clearAttributeValues2() {
        attributeValues2_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      void addAttributeValues2(com.google.protobuf.ByteString value) {
        ensureAttributeValues2IsMutable();
        attributeValues2_.add(value);
        onChanged();
      }
      
      // optional sint32 interpolation = 5;
      private int interpolation_ ;
      public boolean hasInterpolation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getInterpolation() {
        return interpolation_;
      }
      public Builder setInterpolation(int value) {
        bitField0_ |= 0x00000100;
        interpolation_ = value;
        onChanged();
        return this;
      }
      public Builder clearInterpolation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        interpolation_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 x = 7;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000200;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000200);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 y = 8;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000400;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000400);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 x2 = 9;
      private int x2_ ;
      public boolean hasX2() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getX2() {
        return x2_;
      }
      public Builder setX2(int value) {
        bitField0_ |= 0x00000800;
        x2_ = value;
        onChanged();
        return this;
      }
      public Builder clearX2() {
        bitField0_ = (bitField0_ & ~0x00000800);
        x2_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint32 y2 = 10;
      private int y2_ ;
      public boolean hasY2() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getY2() {
        return y2_;
      }
      public Builder setY2(int value) {
        bitField0_ |= 0x00001000;
        y2_ = value;
        onChanged();
        return this;
      }
      public Builder clearY2() {
        bitField0_ = (bitField0_ & ~0x00001000);
        y2_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 id = 13;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00002000;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string postcode = 14;
      private java.lang.Object postcode_ = "";
      public boolean hasPostcode() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getPostcode() {
        java.lang.Object ref = postcode_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          postcode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPostcode(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        postcode_ = value;
        onChanged();
        return this;
      }
      public Builder clearPostcode() {
        bitField0_ = (bitField0_ & ~0x00004000);
        postcode_ = getDefaultInstance().getPostcode();
        onChanged();
        return this;
      }
      void setPostcode(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        postcode_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.BuildingIndex)
    }
    
    static {
      defaultInstance = new BuildingIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.BuildingIndex)
  }
  
  public interface TransportRoutesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .OsmAnd.OBF.TransportRoute routes = 6;
    java.util.List<net.osmand.binary.OsmandOdb.TransportRoute> 
        getRoutesList();
    net.osmand.binary.OsmandOdb.TransportRoute getRoutes(int index);
    int getRoutesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteOrBuilder> 
        getRoutesOrBuilderList();
    net.osmand.binary.OsmandOdb.TransportRouteOrBuilder getRoutesOrBuilder(
        int index);
  }
  public static final class TransportRoutes extends
      com.google.protobuf.GeneratedMessage
      implements TransportRoutesOrBuilder {
    // Use TransportRoutes.newBuilder() to construct.
    private TransportRoutes(Builder builder) {
      super(builder);
    }
    private TransportRoutes(boolean noInit) {}
    
    private static final TransportRoutes defaultInstance;
    public static TransportRoutes getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportRoutes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoutes_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoutes_fieldAccessorTable;
    }
    
    // repeated .OsmAnd.OBF.TransportRoute routes = 6;
    public static final int ROUTES_FIELD_NUMBER = 6;
    private java.util.List<net.osmand.binary.OsmandOdb.TransportRoute> routes_;
    public java.util.List<net.osmand.binary.OsmandOdb.TransportRoute> getRoutesList() {
      return routes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteOrBuilder> 
        getRoutesOrBuilderList() {
      return routes_;
    }
    public int getRoutesCount() {
      return routes_.size();
    }
    public net.osmand.binary.OsmandOdb.TransportRoute getRoutes(int index) {
      return routes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.TransportRouteOrBuilder getRoutesOrBuilder(
        int index) {
      return routes_.get(index);
    }
    
    private void initFields() {
      routes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getRoutesCount(); i++) {
        if (!getRoutes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < routes_.size(); i++) {
        output.writeMessage(6, routes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < routes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, routes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoutes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.TransportRoutes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoutes_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoutes_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.TransportRoutes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoutesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (routesBuilder_ == null) {
          routes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          routesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.TransportRoutes.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoutes getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoutes build() {
        net.osmand.binary.OsmandOdb.TransportRoutes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.TransportRoutes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.TransportRoutes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoutes buildPartial() {
        net.osmand.binary.OsmandOdb.TransportRoutes result = new net.osmand.binary.OsmandOdb.TransportRoutes(this);
        int from_bitField0_ = bitField0_;
        if (routesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            routes_ = java.util.Collections.unmodifiableList(routes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.routes_ = routes_;
        } else {
          result.routes_ = routesBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.TransportRoutes) {
          return mergeFrom((net.osmand.binary.OsmandOdb.TransportRoutes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.TransportRoutes other) {
        if (other == net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance()) return this;
        if (routesBuilder_ == null) {
          if (!other.routes_.isEmpty()) {
            if (routes_.isEmpty()) {
              routes_ = other.routes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoutesIsMutable();
              routes_.addAll(other.routes_);
            }
            onChanged();
          }
        } else {
          if (!other.routes_.isEmpty()) {
            if (routesBuilder_.isEmpty()) {
              routesBuilder_.dispose();
              routesBuilder_ = null;
              routes_ = other.routes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              routesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoutesFieldBuilder() : null;
            } else {
              routesBuilder_.addAllMessages(other.routes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getRoutesCount(); i++) {
          if (!getRoutes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 50: {
              net.osmand.binary.OsmandOdb.TransportRoute.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportRoute.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRoutes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .OsmAnd.OBF.TransportRoute routes = 6;
      private java.util.List<net.osmand.binary.OsmandOdb.TransportRoute> routes_ =
        java.util.Collections.emptyList();
      private void ensureRoutesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          routes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.TransportRoute>(routes_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRoute, net.osmand.binary.OsmandOdb.TransportRoute.Builder, net.osmand.binary.OsmandOdb.TransportRouteOrBuilder> routesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRoute> getRoutesList() {
        if (routesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(routes_);
        } else {
          return routesBuilder_.getMessageList();
        }
      }
      public int getRoutesCount() {
        if (routesBuilder_ == null) {
          return routes_.size();
        } else {
          return routesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRoute getRoutes(int index) {
        if (routesBuilder_ == null) {
          return routes_.get(index);
        } else {
          return routesBuilder_.getMessage(index);
        }
      }
      public Builder setRoutes(
          int index, net.osmand.binary.OsmandOdb.TransportRoute value) {
        if (routesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutesIsMutable();
          routes_.set(index, value);
          onChanged();
        } else {
          routesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRoutes(
          int index, net.osmand.binary.OsmandOdb.TransportRoute.Builder builderForValue) {
        if (routesBuilder_ == null) {
          ensureRoutesIsMutable();
          routes_.set(index, builderForValue.build());
          onChanged();
        } else {
          routesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRoutes(net.osmand.binary.OsmandOdb.TransportRoute value) {
        if (routesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutesIsMutable();
          routes_.add(value);
          onChanged();
        } else {
          routesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRoutes(
          int index, net.osmand.binary.OsmandOdb.TransportRoute value) {
        if (routesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoutesIsMutable();
          routes_.add(index, value);
          onChanged();
        } else {
          routesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRoutes(
          net.osmand.binary.OsmandOdb.TransportRoute.Builder builderForValue) {
        if (routesBuilder_ == null) {
          ensureRoutesIsMutable();
          routes_.add(builderForValue.build());
          onChanged();
        } else {
          routesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRoutes(
          int index, net.osmand.binary.OsmandOdb.TransportRoute.Builder builderForValue) {
        if (routesBuilder_ == null) {
          ensureRoutesIsMutable();
          routes_.add(index, builderForValue.build());
          onChanged();
        } else {
          routesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRoutes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.TransportRoute> values) {
        if (routesBuilder_ == null) {
          ensureRoutesIsMutable();
          super.addAll(values, routes_);
          onChanged();
        } else {
          routesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRoutes() {
        if (routesBuilder_ == null) {
          routes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          routesBuilder_.clear();
        }
        return this;
      }
      public Builder removeRoutes(int index) {
        if (routesBuilder_ == null) {
          ensureRoutesIsMutable();
          routes_.remove(index);
          onChanged();
        } else {
          routesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportRoute.Builder getRoutesBuilder(
          int index) {
        return getRoutesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.TransportRouteOrBuilder getRoutesOrBuilder(
          int index) {
        if (routesBuilder_ == null) {
          return routes_.get(index);  } else {
          return routesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteOrBuilder> 
           getRoutesOrBuilderList() {
        if (routesBuilder_ != null) {
          return routesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(routes_);
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRoute.Builder addRoutesBuilder() {
        return getRoutesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.TransportRoute.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.TransportRoute.Builder addRoutesBuilder(
          int index) {
        return getRoutesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.TransportRoute.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRoute.Builder> 
           getRoutesBuilderList() {
        return getRoutesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRoute, net.osmand.binary.OsmandOdb.TransportRoute.Builder, net.osmand.binary.OsmandOdb.TransportRouteOrBuilder> 
          getRoutesFieldBuilder() {
        if (routesBuilder_ == null) {
          routesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportRoute, net.osmand.binary.OsmandOdb.TransportRoute.Builder, net.osmand.binary.OsmandOdb.TransportRouteOrBuilder>(
                  routes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          routes_ = null;
        }
        return routesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportRoutes)
    }
    
    static {
      defaultInstance = new TransportRoutes(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportRoutes)
  }
  
  public interface TransportRouteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 id = 1;
    boolean hasId();
    long getId();
    
    // optional uint32 type = 3;
    boolean hasType();
    int getType();
    
    // optional uint32 operator = 4;
    boolean hasOperator();
    int getOperator();
    
    // optional string ref = 5;
    boolean hasRef();
    String getRef();
    
    // optional uint32 name = 6;
    boolean hasName();
    int getName();
    
    // optional uint32 name_en = 7;
    boolean hasNameEn();
    int getNameEn();
    
    // optional uint32 distance = 8;
    boolean hasDistance();
    int getDistance();
    
    // repeated .OsmAnd.OBF.TransportRouteStop directStops = 15;
    java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> 
        getDirectStopsList();
    net.osmand.binary.OsmandOdb.TransportRouteStop getDirectStops(int index);
    int getDirectStopsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
        getDirectStopsOrBuilderList();
    net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getDirectStopsOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.TransportRouteStop reverseStops = 16;
    java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> 
        getReverseStopsList();
    net.osmand.binary.OsmandOdb.TransportRouteStop getReverseStops(int index);
    int getReverseStopsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
        getReverseStopsOrBuilderList();
    net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getReverseStopsOrBuilder(
        int index);
  }
  public static final class TransportRoute extends
      com.google.protobuf.GeneratedMessage
      implements TransportRouteOrBuilder {
    // Use TransportRoute.newBuilder() to construct.
    private TransportRoute(Builder builder) {
      super(builder);
    }
    private TransportRoute(boolean noInit) {}
    
    private static final TransportRoute defaultInstance;
    public static TransportRoute getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportRoute getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoute_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoute_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getId() {
      return id_;
    }
    
    // optional uint32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getType() {
      return type_;
    }
    
    // optional uint32 operator = 4;
    public static final int OPERATOR_FIELD_NUMBER = 4;
    private int operator_;
    public boolean hasOperator() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getOperator() {
      return operator_;
    }
    
    // optional string ref = 5;
    public static final int REF_FIELD_NUMBER = 5;
    private java.lang.Object ref_;
    public boolean hasRef() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getRef() {
      java.lang.Object ref = ref_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ref_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRefBytes() {
      java.lang.Object ref = ref_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ref_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private int name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getName() {
      return name_;
    }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private int nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getNameEn() {
      return nameEn_;
    }
    
    // optional uint32 distance = 8;
    public static final int DISTANCE_FIELD_NUMBER = 8;
    private int distance_;
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getDistance() {
      return distance_;
    }
    
    // repeated .OsmAnd.OBF.TransportRouteStop directStops = 15;
    public static final int DIRECTSTOPS_FIELD_NUMBER = 15;
    private java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> directStops_;
    public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> getDirectStopsList() {
      return directStops_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
        getDirectStopsOrBuilderList() {
      return directStops_;
    }
    public int getDirectStopsCount() {
      return directStops_.size();
    }
    public net.osmand.binary.OsmandOdb.TransportRouteStop getDirectStops(int index) {
      return directStops_.get(index);
    }
    public net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getDirectStopsOrBuilder(
        int index) {
      return directStops_.get(index);
    }
    
    // repeated .OsmAnd.OBF.TransportRouteStop reverseStops = 16;
    public static final int REVERSESTOPS_FIELD_NUMBER = 16;
    private java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> reverseStops_;
    public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> getReverseStopsList() {
      return reverseStops_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
        getReverseStopsOrBuilderList() {
      return reverseStops_;
    }
    public int getReverseStopsCount() {
      return reverseStops_.size();
    }
    public net.osmand.binary.OsmandOdb.TransportRouteStop getReverseStops(int index) {
      return reverseStops_.get(index);
    }
    public net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getReverseStopsOrBuilder(
        int index) {
      return reverseStops_.get(index);
    }
    
    private void initFields() {
      id_ = 0L;
      type_ = 0;
      operator_ = 0;
      ref_ = "";
      name_ = 0;
      nameEn_ = 0;
      distance_ = 0;
      directStops_ = java.util.Collections.emptyList();
      reverseStops_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDirectStopsCount(); i++) {
        if (!getDirectStops(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getReverseStopsCount(); i++) {
        if (!getReverseStops(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, operator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getRefBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, name_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, nameEn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(8, distance_);
      }
      for (int i = 0; i < directStops_.size(); i++) {
        output.writeMessage(15, directStops_.get(i));
      }
      for (int i = 0; i < reverseStops_.size(); i++) {
        output.writeMessage(16, reverseStops_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, operator_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getRefBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, name_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, nameEn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, distance_);
      }
      for (int i = 0; i < directStops_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, directStops_.get(i));
      }
      for (int i = 0; i < reverseStops_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, reverseStops_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRoute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.TransportRoute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.TransportRouteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoute_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRoute_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.TransportRoute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDirectStopsFieldBuilder();
          getReverseStopsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        operator_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ref_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nameEn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (directStopsBuilder_ == null) {
          directStops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          directStopsBuilder_.clear();
        }
        if (reverseStopsBuilder_ == null) {
          reverseStops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          reverseStopsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.TransportRoute.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoute getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.TransportRoute.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoute build() {
        net.osmand.binary.OsmandOdb.TransportRoute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.TransportRoute buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.TransportRoute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.TransportRoute buildPartial() {
        net.osmand.binary.OsmandOdb.TransportRoute result = new net.osmand.binary.OsmandOdb.TransportRoute(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operator_ = operator_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ref_ = ref_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nameEn_ = nameEn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.distance_ = distance_;
        if (directStopsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            directStops_ = java.util.Collections.unmodifiableList(directStops_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.directStops_ = directStops_;
        } else {
          result.directStops_ = directStopsBuilder_.build();
        }
        if (reverseStopsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            reverseStops_ = java.util.Collections.unmodifiableList(reverseStops_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.reverseStops_ = reverseStops_;
        } else {
          result.reverseStops_ = reverseStopsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.TransportRoute) {
          return mergeFrom((net.osmand.binary.OsmandOdb.TransportRoute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.TransportRoute other) {
        if (other == net.osmand.binary.OsmandOdb.TransportRoute.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOperator()) {
          setOperator(other.getOperator());
        }
        if (other.hasRef()) {
          setRef(other.getRef());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (directStopsBuilder_ == null) {
          if (!other.directStops_.isEmpty()) {
            if (directStops_.isEmpty()) {
              directStops_ = other.directStops_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDirectStopsIsMutable();
              directStops_.addAll(other.directStops_);
            }
            onChanged();
          }
        } else {
          if (!other.directStops_.isEmpty()) {
            if (directStopsBuilder_.isEmpty()) {
              directStopsBuilder_.dispose();
              directStopsBuilder_ = null;
              directStops_ = other.directStops_;
              bitField0_ = (bitField0_ & ~0x00000080);
              directStopsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDirectStopsFieldBuilder() : null;
            } else {
              directStopsBuilder_.addAllMessages(other.directStops_);
            }
          }
        }
        if (reverseStopsBuilder_ == null) {
          if (!other.reverseStops_.isEmpty()) {
            if (reverseStops_.isEmpty()) {
              reverseStops_ = other.reverseStops_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureReverseStopsIsMutable();
              reverseStops_.addAll(other.reverseStops_);
            }
            onChanged();
          }
        } else {
          if (!other.reverseStops_.isEmpty()) {
            if (reverseStopsBuilder_.isEmpty()) {
              reverseStopsBuilder_.dispose();
              reverseStopsBuilder_ = null;
              reverseStops_ = other.reverseStops_;
              bitField0_ = (bitField0_ & ~0x00000100);
              reverseStopsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getReverseStopsFieldBuilder() : null;
            } else {
              reverseStopsBuilder_.addAllMessages(other.reverseStops_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        for (int i = 0; i < getDirectStopsCount(); i++) {
          if (!getDirectStops(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getReverseStopsCount(); i++) {
          if (!getReverseStops(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              type_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              operator_ = input.readUInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              ref_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              name_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              nameEn_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              distance_ = input.readUInt32();
              break;
            }
            case 122: {
              net.osmand.binary.OsmandOdb.TransportRouteStop.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportRouteStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDirectStops(subBuilder.buildPartial());
              break;
            }
            case 130: {
              net.osmand.binary.OsmandOdb.TransportRouteStop.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportRouteStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReverseStops(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 id = 1;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint32 type = 3;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 operator = 4;
      private int operator_ ;
      public boolean hasOperator() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getOperator() {
        return operator_;
      }
      public Builder setOperator(int value) {
        bitField0_ |= 0x00000004;
        operator_ = value;
        onChanged();
        return this;
      }
      public Builder clearOperator() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operator_ = 0;
        onChanged();
        return this;
      }
      
      // optional string ref = 5;
      private java.lang.Object ref_ = "";
      public boolean hasRef() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getRef() {
        java.lang.Object ref = ref_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ref_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRef(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ref_ = value;
        onChanged();
        return this;
      }
      public Builder clearRef() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ref_ = getDefaultInstance().getRef();
        onChanged();
        return this;
      }
      void setRef(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ref_ = value;
        onChanged();
      }
      
      // optional uint32 name = 6;
      private int name_ ;
      public boolean hasName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getName() {
        return name_;
      }
      public Builder setName(int value) {
        bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 name_en = 7;
      private int nameEn_ ;
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getNameEn() {
        return nameEn_;
      }
      public Builder setNameEn(int value) {
        bitField0_ |= 0x00000020;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nameEn_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 distance = 8;
      private int distance_ ;
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getDistance() {
        return distance_;
      }
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000040;
        distance_ = value;
        onChanged();
        return this;
      }
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        distance_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.TransportRouteStop directStops = 15;
      private java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> directStops_ =
        java.util.Collections.emptyList();
      private void ensureDirectStopsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          directStops_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.TransportRouteStop>(directStops_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> directStopsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> getDirectStopsList() {
        if (directStopsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(directStops_);
        } else {
          return directStopsBuilder_.getMessageList();
        }
      }
      public int getDirectStopsCount() {
        if (directStopsBuilder_ == null) {
          return directStops_.size();
        } else {
          return directStopsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop getDirectStops(int index) {
        if (directStopsBuilder_ == null) {
          return directStops_.get(index);
        } else {
          return directStopsBuilder_.getMessage(index);
        }
      }
      public Builder setDirectStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (directStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDirectStopsIsMutable();
          directStops_.set(index, value);
          onChanged();
        } else {
          directStopsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDirectStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (directStopsBuilder_ == null) {
          ensureDirectStopsIsMutable();
          directStops_.set(index, builderForValue.build());
          onChanged();
        } else {
          directStopsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDirectStops(net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (directStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDirectStopsIsMutable();
          directStops_.add(value);
          onChanged();
        } else {
          directStopsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDirectStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (directStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDirectStopsIsMutable();
          directStops_.add(index, value);
          onChanged();
        } else {
          directStopsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDirectStops(
          net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (directStopsBuilder_ == null) {
          ensureDirectStopsIsMutable();
          directStops_.add(builderForValue.build());
          onChanged();
        } else {
          directStopsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDirectStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (directStopsBuilder_ == null) {
          ensureDirectStopsIsMutable();
          directStops_.add(index, builderForValue.build());
          onChanged();
        } else {
          directStopsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDirectStops(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.TransportRouteStop> values) {
        if (directStopsBuilder_ == null) {
          ensureDirectStopsIsMutable();
          super.addAll(values, directStops_);
          onChanged();
        } else {
          directStopsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDirectStops() {
        if (directStopsBuilder_ == null) {
          directStops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          directStopsBuilder_.clear();
        }
        return this;
      }
      public Builder removeDirectStops(int index) {
        if (directStopsBuilder_ == null) {
          ensureDirectStopsIsMutable();
          directStops_.remove(index);
          onChanged();
        } else {
          directStopsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder getDirectStopsBuilder(
          int index) {
        return getDirectStopsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getDirectStopsOrBuilder(
          int index) {
        if (directStopsBuilder_ == null) {
          return directStops_.get(index);  } else {
          return directStopsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
           getDirectStopsOrBuilderList() {
        if (directStopsBuilder_ != null) {
          return directStopsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(directStops_);
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder addDirectStopsBuilder() {
        return getDirectStopsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder addDirectStopsBuilder(
          int index) {
        return getDirectStopsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop.Builder> 
           getDirectStopsBuilderList() {
        return getDirectStopsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
          getDirectStopsFieldBuilder() {
        if (directStopsBuilder_ == null) {
          directStopsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder>(
                  directStops_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          directStops_ = null;
        }
        return directStopsBuilder_;
      }
      
      // repeated .OsmAnd.OBF.TransportRouteStop reverseStops = 16;
      private java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> reverseStops_ =
        java.util.Collections.emptyList();
      private void ensureReverseStopsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          reverseStops_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.TransportRouteStop>(reverseStops_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> reverseStopsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop> getReverseStopsList() {
        if (reverseStopsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reverseStops_);
        } else {
          return reverseStopsBuilder_.getMessageList();
        }
      }
      public int getReverseStopsCount() {
        if (reverseStopsBuilder_ == null) {
          return reverseStops_.size();
        } else {
          return reverseStopsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop getReverseStops(int index) {
        if (reverseStopsBuilder_ == null) {
          return reverseStops_.get(index);
        } else {
          return reverseStopsBuilder_.getMessage(index);
        }
      }
      public Builder setReverseStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (reverseStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReverseStopsIsMutable();
          reverseStops_.set(index, value);
          onChanged();
        } else {
          reverseStopsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setReverseStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (reverseStopsBuilder_ == null) {
          ensureReverseStopsIsMutable();
          reverseStops_.set(index, builderForValue.build());
          onChanged();
        } else {
          reverseStopsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addReverseStops(net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (reverseStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReverseStopsIsMutable();
          reverseStops_.add(value);
          onChanged();
        } else {
          reverseStopsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addReverseStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop value) {
        if (reverseStopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReverseStopsIsMutable();
          reverseStops_.add(index, value);
          onChanged();
        } else {
          reverseStopsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addReverseStops(
          net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (reverseStopsBuilder_ == null) {
          ensureReverseStopsIsMutable();
          reverseStops_.add(builderForValue.build());
          onChanged();
        } else {
          reverseStopsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addReverseStops(
          int index, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder builderForValue) {
        if (reverseStopsBuilder_ == null) {
          ensureReverseStopsIsMutable();
          reverseStops_.add(index, builderForValue.build());
          onChanged();
        } else {
          reverseStopsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllReverseStops(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.TransportRouteStop> values) {
        if (reverseStopsBuilder_ == null) {
          ensureReverseStopsIsMutable();
          super.addAll(values, reverseStops_);
          onChanged();
        } else {
          reverseStopsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearReverseStops() {
        if (reverseStopsBuilder_ == null) {
          reverseStops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          reverseStopsBuilder_.clear();
        }
        return this;
      }
      public Builder removeReverseStops(int index) {
        if (reverseStopsBuilder_ == null) {
          ensureReverseStopsIsMutable();
          reverseStops_.remove(index);
          onChanged();
        } else {
          reverseStopsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder getReverseStopsBuilder(
          int index) {
        return getReverseStopsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder getReverseStopsOrBuilder(
          int index) {
        if (reverseStopsBuilder_ == null) {
          return reverseStops_.get(index);  } else {
          return reverseStopsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
           getReverseStopsOrBuilderList() {
        if (reverseStopsBuilder_ != null) {
          return reverseStopsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reverseStops_);
        }
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder addReverseStopsBuilder() {
        return getReverseStopsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.TransportRouteStop.Builder addReverseStopsBuilder(
          int index) {
        return getReverseStopsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.TransportRouteStop.Builder> 
           getReverseStopsBuilderList() {
        return getReverseStopsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder> 
          getReverseStopsFieldBuilder() {
        if (reverseStopsBuilder_ == null) {
          reverseStopsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportRouteStop, net.osmand.binary.OsmandOdb.TransportRouteStop.Builder, net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder>(
                  reverseStops_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          reverseStops_ = null;
        }
        return reverseStopsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportRoute)
    }
    
    static {
      defaultInstance = new TransportRoute(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportRoute)
  }
  
  public interface TransportRouteStopOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required sint64 id = 1;
    boolean hasId();
    long getId();
    
    // required sint32 dx = 2;
    boolean hasDx();
    int getDx();
    
    // required sint32 dy = 3;
    boolean hasDy();
    int getDy();
    
    // required uint32 name = 6;
    boolean hasName();
    int getName();
    
    // optional uint32 name_en = 7;
    boolean hasNameEn();
    int getNameEn();
  }
  public static final class TransportRouteStop extends
      com.google.protobuf.GeneratedMessage
      implements TransportRouteStopOrBuilder {
    // Use TransportRouteStop.newBuilder() to construct.
    private TransportRouteStop(Builder builder) {
      super(builder);
    }
    private TransportRouteStop(boolean noInit) {}
    
    private static final TransportRouteStop defaultInstance;
    public static TransportRouteStop getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportRouteStop getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRouteStop_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRouteStop_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required sint64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getId() {
      return id_;
    }
    
    // required sint32 dx = 2;
    public static final int DX_FIELD_NUMBER = 2;
    private int dx_;
    public boolean hasDx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDx() {
      return dx_;
    }
    
    // required sint32 dy = 3;
    public static final int DY_FIELD_NUMBER = 3;
    private int dy_;
    public boolean hasDy() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDy() {
      return dy_;
    }
    
    // required uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private int name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getName() {
      return name_;
    }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private int nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getNameEn() {
      return nameEn_;
    }
    
    private void initFields() {
      id_ = 0L;
      dx_ = 0;
      dy_ = 0;
      name_ = 0;
      nameEn_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, dx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, dy_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(6, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, nameEn_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, dx_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, dy_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, nameEn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportRouteStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.TransportRouteStop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.TransportRouteStopOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRouteStop_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportRouteStop_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.TransportRouteStop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        dx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nameEn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.TransportRouteStop.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRouteStop getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.TransportRouteStop build() {
        net.osmand.binary.OsmandOdb.TransportRouteStop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.TransportRouteStop buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.TransportRouteStop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.TransportRouteStop buildPartial() {
        net.osmand.binary.OsmandOdb.TransportRouteStop result = new net.osmand.binary.OsmandOdb.TransportRouteStop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dx_ = dx_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dy_ = dy_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nameEn_ = nameEn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.TransportRouteStop) {
          return mergeFrom((net.osmand.binary.OsmandOdb.TransportRouteStop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.TransportRouteStop other) {
        if (other == net.osmand.binary.OsmandOdb.TransportRouteStop.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasDx()) {
          
          return false;
        }
        if (!hasDy()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dx_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dy_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              name_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              nameEn_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required sint64 id = 1;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // required sint32 dx = 2;
      private int dx_ ;
      public boolean hasDx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDx() {
        return dx_;
      }
      public Builder setDx(int value) {
        bitField0_ |= 0x00000002;
        dx_ = value;
        onChanged();
        return this;
      }
      public Builder clearDx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dx_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 dy = 3;
      private int dy_ ;
      public boolean hasDy() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDy() {
        return dy_;
      }
      public Builder setDy(int value) {
        bitField0_ |= 0x00000004;
        dy_ = value;
        onChanged();
        return this;
      }
      public Builder clearDy() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dy_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 name = 6;
      private int name_ ;
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getName() {
        return name_;
      }
      public Builder setName(int value) {
        bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 name_en = 7;
      private int nameEn_ ;
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNameEn() {
        return nameEn_;
      }
      public Builder setNameEn(int value) {
        bitField0_ |= 0x00000010;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nameEn_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportRouteStop)
    }
    
    static {
      defaultInstance = new TransportRouteStop(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportRouteStop)
  }
  
  public interface TransportStopOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required sint32 dx = 1;
    boolean hasDx();
    int getDx();
    
    // required sint32 dy = 2;
    boolean hasDy();
    int getDy();
    
    // required sint64 id = 5;
    boolean hasId();
    long getId();
    
    // required uint32 name = 6;
    boolean hasName();
    int getName();
    
    // optional uint32 name_en = 7;
    boolean hasNameEn();
    int getNameEn();
    
    // repeated uint32 routes = 16;
    java.util.List<java.lang.Integer> getRoutesList();
    int getRoutesCount();
    int getRoutes(int index);
  }
  public static final class TransportStop extends
      com.google.protobuf.GeneratedMessage
      implements TransportStopOrBuilder {
    // Use TransportStop.newBuilder() to construct.
    private TransportStop(Builder builder) {
      super(builder);
    }
    private TransportStop(boolean noInit) {}
    
    private static final TransportStop defaultInstance;
    public static TransportStop getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportStop getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStop_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStop_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required sint32 dx = 1;
    public static final int DX_FIELD_NUMBER = 1;
    private int dx_;
    public boolean hasDx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getDx() {
      return dx_;
    }
    
    // required sint32 dy = 2;
    public static final int DY_FIELD_NUMBER = 2;
    private int dy_;
    public boolean hasDy() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDy() {
      return dy_;
    }
    
    // required sint64 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getId() {
      return id_;
    }
    
    // required uint32 name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private int name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getName() {
      return name_;
    }
    
    // optional uint32 name_en = 7;
    public static final int NAME_EN_FIELD_NUMBER = 7;
    private int nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getNameEn() {
      return nameEn_;
    }
    
    // repeated uint32 routes = 16;
    public static final int ROUTES_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> routes_;
    public java.util.List<java.lang.Integer>
        getRoutesList() {
      return routes_;
    }
    public int getRoutesCount() {
      return routes_.size();
    }
    public int getRoutes(int index) {
      return routes_.get(index);
    }
    
    private void initFields() {
      dx_ = 0;
      dy_ = 0;
      id_ = 0L;
      name_ = 0;
      nameEn_ = 0;
      routes_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasDx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, dx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, dy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(5, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(6, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, nameEn_);
      }
      for (int i = 0; i < routes_.size(); i++) {
        output.writeUInt32(16, routes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, dx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, dy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, id_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, nameEn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < routes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(routes_.get(i));
        }
        size += dataSize;
        size += 2 * getRoutesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.TransportStop prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.TransportStopOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStop_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStop_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.TransportStop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        dx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        nameEn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        routes_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.TransportStop.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.TransportStop getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.TransportStop.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.TransportStop build() {
        net.osmand.binary.OsmandOdb.TransportStop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.TransportStop buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.TransportStop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.TransportStop buildPartial() {
        net.osmand.binary.OsmandOdb.TransportStop result = new net.osmand.binary.OsmandOdb.TransportStop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dx_ = dx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dy_ = dy_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nameEn_ = nameEn_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          routes_ = java.util.Collections.unmodifiableList(routes_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.routes_ = routes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.TransportStop) {
          return mergeFrom((net.osmand.binary.OsmandOdb.TransportStop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.TransportStop other) {
        if (other == net.osmand.binary.OsmandOdb.TransportStop.getDefaultInstance()) return this;
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (!other.routes_.isEmpty()) {
          if (routes_.isEmpty()) {
            routes_ = other.routes_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRoutesIsMutable();
            routes_.addAll(other.routes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasDx()) {
          
          return false;
        }
        if (!hasDy()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              dx_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dy_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              id_ = input.readSInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              name_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              nameEn_ = input.readUInt32();
              break;
            }
            case 128: {
              ensureRoutesIsMutable();
              routes_.add(input.readUInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRoutes(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required sint32 dx = 1;
      private int dx_ ;
      public boolean hasDx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getDx() {
        return dx_;
      }
      public Builder setDx(int value) {
        bitField0_ |= 0x00000001;
        dx_ = value;
        onChanged();
        return this;
      }
      public Builder clearDx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dx_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 dy = 2;
      private int dy_ ;
      public boolean hasDy() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDy() {
        return dy_;
      }
      public Builder setDy(int value) {
        bitField0_ |= 0x00000002;
        dy_ = value;
        onChanged();
        return this;
      }
      public Builder clearDy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dy_ = 0;
        onChanged();
        return this;
      }
      
      // required sint64 id = 5;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000004;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint32 name = 6;
      private int name_ ;
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getName() {
        return name_;
      }
      public Builder setName(int value) {
        bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 name_en = 7;
      private int nameEn_ ;
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getNameEn() {
        return nameEn_;
      }
      public Builder setNameEn(int value) {
        bitField0_ |= 0x00000010;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nameEn_ = 0;
        onChanged();
        return this;
      }
      
      // repeated uint32 routes = 16;
      private java.util.List<java.lang.Integer> routes_ = java.util.Collections.emptyList();;
      private void ensureRoutesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          routes_ = new java.util.ArrayList<java.lang.Integer>(routes_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Integer>
          getRoutesList() {
        return java.util.Collections.unmodifiableList(routes_);
      }
      public int getRoutesCount() {
        return routes_.size();
      }
      public int getRoutes(int index) {
        return routes_.get(index);
      }
      public Builder setRoutes(
          int index, int value) {
        ensureRoutesIsMutable();
        routes_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRoutes(int value) {
        ensureRoutesIsMutable();
        routes_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRoutes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRoutesIsMutable();
        super.addAll(values, routes_);
        onChanged();
        return this;
      }
      public Builder clearRoutes() {
        routes_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportStop)
    }
    
    static {
      defaultInstance = new TransportStop(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportStop)
  }
  
  public interface TransportStopsTreeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required sint32 left = 1;
    boolean hasLeft();
    int getLeft();
    
    // required sint32 right = 2;
    boolean hasRight();
    int getRight();
    
    // required sint32 top = 3;
    boolean hasTop();
    int getTop();
    
    // required sint32 bottom = 4;
    boolean hasBottom();
    int getBottom();
    
    // repeated .OsmAnd.OBF.TransportStopsTree subtrees = 7;
    java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree> 
        getSubtreesList();
    net.osmand.binary.OsmandOdb.TransportStopsTree getSubtrees(int index);
    int getSubtreesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> 
        getSubtreesOrBuilderList();
    net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getSubtreesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.TransportStop leafs = 8;
    java.util.List<net.osmand.binary.OsmandOdb.TransportStop> 
        getLeafsList();
    net.osmand.binary.OsmandOdb.TransportStop getLeafs(int index);
    int getLeafsCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopOrBuilder> 
        getLeafsOrBuilderList();
    net.osmand.binary.OsmandOdb.TransportStopOrBuilder getLeafsOrBuilder(
        int index);
    
    // optional uint64 baseId = 16;
    boolean hasBaseId();
    long getBaseId();
  }
  public static final class TransportStopsTree extends
      com.google.protobuf.GeneratedMessage
      implements TransportStopsTreeOrBuilder {
    // Use TransportStopsTree.newBuilder() to construct.
    private TransportStopsTree(Builder builder) {
      super(builder);
    }
    private TransportStopsTree(boolean noInit) {}
    
    private static final TransportStopsTree defaultInstance;
    public static TransportStopsTree getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransportStopsTree getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStopsTree_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStopsTree_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required sint32 left = 1;
    public static final int LEFT_FIELD_NUMBER = 1;
    private int left_;
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLeft() {
      return left_;
    }
    
    // required sint32 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private int right_;
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRight() {
      return right_;
    }
    
    // required sint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private int top_;
    public boolean hasTop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTop() {
      return top_;
    }
    
    // required sint32 bottom = 4;
    public static final int BOTTOM_FIELD_NUMBER = 4;
    private int bottom_;
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getBottom() {
      return bottom_;
    }
    
    // repeated .OsmAnd.OBF.TransportStopsTree subtrees = 7;
    public static final int SUBTREES_FIELD_NUMBER = 7;
    private java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree> subtrees_;
    public java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree> getSubtreesList() {
      return subtrees_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> 
        getSubtreesOrBuilderList() {
      return subtrees_;
    }
    public int getSubtreesCount() {
      return subtrees_.size();
    }
    public net.osmand.binary.OsmandOdb.TransportStopsTree getSubtrees(int index) {
      return subtrees_.get(index);
    }
    public net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getSubtreesOrBuilder(
        int index) {
      return subtrees_.get(index);
    }
    
    // repeated .OsmAnd.OBF.TransportStop leafs = 8;
    public static final int LEAFS_FIELD_NUMBER = 8;
    private java.util.List<net.osmand.binary.OsmandOdb.TransportStop> leafs_;
    public java.util.List<net.osmand.binary.OsmandOdb.TransportStop> getLeafsList() {
      return leafs_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopOrBuilder> 
        getLeafsOrBuilderList() {
      return leafs_;
    }
    public int getLeafsCount() {
      return leafs_.size();
    }
    public net.osmand.binary.OsmandOdb.TransportStop getLeafs(int index) {
      return leafs_.get(index);
    }
    public net.osmand.binary.OsmandOdb.TransportStopOrBuilder getLeafsOrBuilder(
        int index) {
      return leafs_.get(index);
    }
    
    // optional uint64 baseId = 16;
    public static final int BASEID_FIELD_NUMBER = 16;
    private long baseId_;
    public boolean hasBaseId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getBaseId() {
      return baseId_;
    }
    
    private void initFields() {
      left_ = 0;
      right_ = 0;
      top_ = 0;
      bottom_ = 0;
      subtrees_ = java.util.Collections.emptyList();
      leafs_ = java.util.Collections.emptyList();
      baseId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBottom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubtreesCount(); i++) {
        if (!getSubtrees(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLeafsCount(); i++) {
        if (!getLeafs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, bottom_);
      }
      for (int i = 0; i < subtrees_.size(); i++) {
        output.writeMessage(7, subtrees_.get(i));
      }
      for (int i = 0; i < leafs_.size(); i++) {
        output.writeMessage(8, leafs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(16, baseId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, left_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, bottom_);
      }
      for (int i = 0; i < subtrees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, subtrees_.get(i));
      }
      for (int i = 0; i < leafs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, leafs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, baseId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.TransportStopsTree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.TransportStopsTree prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStopsTree_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_TransportStopsTree_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.TransportStopsTree.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubtreesFieldBuilder();
          getLeafsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (subtreesBuilder_ == null) {
          subtrees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          subtreesBuilder_.clear();
        }
        if (leafsBuilder_ == null) {
          leafs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          leafsBuilder_.clear();
        }
        baseId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.TransportStopsTree.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.TransportStopsTree getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.TransportStopsTree build() {
        net.osmand.binary.OsmandOdb.TransportStopsTree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.TransportStopsTree buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.TransportStopsTree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.TransportStopsTree buildPartial() {
        net.osmand.binary.OsmandOdb.TransportStopsTree result = new net.osmand.binary.OsmandOdb.TransportStopsTree(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bottom_ = bottom_;
        if (subtreesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            subtrees_ = java.util.Collections.unmodifiableList(subtrees_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.subtrees_ = subtrees_;
        } else {
          result.subtrees_ = subtreesBuilder_.build();
        }
        if (leafsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            leafs_ = java.util.Collections.unmodifiableList(leafs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.leafs_ = leafs_;
        } else {
          result.leafs_ = leafsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.baseId_ = baseId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.TransportStopsTree) {
          return mergeFrom((net.osmand.binary.OsmandOdb.TransportStopsTree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.TransportStopsTree other) {
        if (other == net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance()) return this;
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (subtreesBuilder_ == null) {
          if (!other.subtrees_.isEmpty()) {
            if (subtrees_.isEmpty()) {
              subtrees_ = other.subtrees_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSubtreesIsMutable();
              subtrees_.addAll(other.subtrees_);
            }
            onChanged();
          }
        } else {
          if (!other.subtrees_.isEmpty()) {
            if (subtreesBuilder_.isEmpty()) {
              subtreesBuilder_.dispose();
              subtreesBuilder_ = null;
              subtrees_ = other.subtrees_;
              bitField0_ = (bitField0_ & ~0x00000010);
              subtreesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubtreesFieldBuilder() : null;
            } else {
              subtreesBuilder_.addAllMessages(other.subtrees_);
            }
          }
        }
        if (leafsBuilder_ == null) {
          if (!other.leafs_.isEmpty()) {
            if (leafs_.isEmpty()) {
              leafs_ = other.leafs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureLeafsIsMutable();
              leafs_.addAll(other.leafs_);
            }
            onChanged();
          }
        } else {
          if (!other.leafs_.isEmpty()) {
            if (leafsBuilder_.isEmpty()) {
              leafsBuilder_.dispose();
              leafsBuilder_ = null;
              leafs_ = other.leafs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              leafsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeafsFieldBuilder() : null;
            } else {
              leafsBuilder_.addAllMessages(other.leafs_);
            }
          }
        }
        if (other.hasBaseId()) {
          setBaseId(other.getBaseId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        if (!hasBottom()) {
          
          return false;
        }
        for (int i = 0; i < getSubtreesCount(); i++) {
          if (!getSubtrees(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLeafsCount(); i++) {
          if (!getLeafs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              left_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              right_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              top_ = input.readSInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bottom_ = input.readSInt32();
              break;
            }
            case 58: {
              net.osmand.binary.OsmandOdb.TransportStopsTree.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportStopsTree.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtrees(subBuilder.buildPartial());
              break;
            }
            case 66: {
              net.osmand.binary.OsmandOdb.TransportStop.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportStop.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLeafs(subBuilder.buildPartial());
              break;
            }
            case 128: {
              bitField0_ |= 0x00000040;
              baseId_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required sint32 left = 1;
      private int left_ ;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLeft() {
        return left_;
      }
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000001;
        left_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000001);
        left_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 right = 2;
      private int right_ ;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRight() {
        return right_;
      }
      public Builder setRight(int value) {
        bitField0_ |= 0x00000002;
        right_ = value;
        onChanged();
        return this;
      }
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        right_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 top = 3;
      private int top_ ;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTop() {
        return top_;
      }
      public Builder setTop(int value) {
        bitField0_ |= 0x00000004;
        top_ = value;
        onChanged();
        return this;
      }
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        top_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 bottom = 4;
      private int bottom_ ;
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBottom() {
        return bottom_;
      }
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000008;
        bottom_ = value;
        onChanged();
        return this;
      }
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bottom_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.TransportStopsTree subtrees = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree> subtrees_ =
        java.util.Collections.emptyList();
      private void ensureSubtreesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          subtrees_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.TransportStopsTree>(subtrees_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> subtreesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree> getSubtreesList() {
        if (subtreesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subtrees_);
        } else {
          return subtreesBuilder_.getMessageList();
        }
      }
      public int getSubtreesCount() {
        if (subtreesBuilder_ == null) {
          return subtrees_.size();
        } else {
          return subtreesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree getSubtrees(int index) {
        if (subtreesBuilder_ == null) {
          return subtrees_.get(index);
        } else {
          return subtreesBuilder_.getMessage(index);
        }
      }
      public Builder setSubtrees(
          int index, net.osmand.binary.OsmandOdb.TransportStopsTree value) {
        if (subtreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtreesIsMutable();
          subtrees_.set(index, value);
          onChanged();
        } else {
          subtreesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubtrees(
          int index, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder builderForValue) {
        if (subtreesBuilder_ == null) {
          ensureSubtreesIsMutable();
          subtrees_.set(index, builderForValue.build());
          onChanged();
        } else {
          subtreesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubtrees(net.osmand.binary.OsmandOdb.TransportStopsTree value) {
        if (subtreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtreesIsMutable();
          subtrees_.add(value);
          onChanged();
        } else {
          subtreesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubtrees(
          int index, net.osmand.binary.OsmandOdb.TransportStopsTree value) {
        if (subtreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtreesIsMutable();
          subtrees_.add(index, value);
          onChanged();
        } else {
          subtreesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubtrees(
          net.osmand.binary.OsmandOdb.TransportStopsTree.Builder builderForValue) {
        if (subtreesBuilder_ == null) {
          ensureSubtreesIsMutable();
          subtrees_.add(builderForValue.build());
          onChanged();
        } else {
          subtreesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubtrees(
          int index, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder builderForValue) {
        if (subtreesBuilder_ == null) {
          ensureSubtreesIsMutable();
          subtrees_.add(index, builderForValue.build());
          onChanged();
        } else {
          subtreesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubtrees(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.TransportStopsTree> values) {
        if (subtreesBuilder_ == null) {
          ensureSubtreesIsMutable();
          super.addAll(values, subtrees_);
          onChanged();
        } else {
          subtreesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubtrees() {
        if (subtreesBuilder_ == null) {
          subtrees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          subtreesBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubtrees(int index) {
        if (subtreesBuilder_ == null) {
          ensureSubtreesIsMutable();
          subtrees_.remove(index);
          onChanged();
        } else {
          subtreesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree.Builder getSubtreesBuilder(
          int index) {
        return getSubtreesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getSubtreesOrBuilder(
          int index) {
        if (subtreesBuilder_ == null) {
          return subtrees_.get(index);  } else {
          return subtreesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> 
           getSubtreesOrBuilderList() {
        if (subtreesBuilder_ != null) {
          return subtreesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subtrees_);
        }
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree.Builder addSubtreesBuilder() {
        return getSubtreesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree.Builder addSubtreesBuilder(
          int index) {
        return getSubtreesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.TransportStopsTree.Builder> 
           getSubtreesBuilderList() {
        return getSubtreesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> 
          getSubtreesFieldBuilder() {
        if (subtreesBuilder_ == null) {
          subtreesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder>(
                  subtrees_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          subtrees_ = null;
        }
        return subtreesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.TransportStop leafs = 8;
      private java.util.List<net.osmand.binary.OsmandOdb.TransportStop> leafs_ =
        java.util.Collections.emptyList();
      private void ensureLeafsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          leafs_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.TransportStop>(leafs_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStop, net.osmand.binary.OsmandOdb.TransportStop.Builder, net.osmand.binary.OsmandOdb.TransportStopOrBuilder> leafsBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.TransportStop> getLeafsList() {
        if (leafsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leafs_);
        } else {
          return leafsBuilder_.getMessageList();
        }
      }
      public int getLeafsCount() {
        if (leafsBuilder_ == null) {
          return leafs_.size();
        } else {
          return leafsBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.TransportStop getLeafs(int index) {
        if (leafsBuilder_ == null) {
          return leafs_.get(index);
        } else {
          return leafsBuilder_.getMessage(index);
        }
      }
      public Builder setLeafs(
          int index, net.osmand.binary.OsmandOdb.TransportStop value) {
        if (leafsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafsIsMutable();
          leafs_.set(index, value);
          onChanged();
        } else {
          leafsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLeafs(
          int index, net.osmand.binary.OsmandOdb.TransportStop.Builder builderForValue) {
        if (leafsBuilder_ == null) {
          ensureLeafsIsMutable();
          leafs_.set(index, builderForValue.build());
          onChanged();
        } else {
          leafsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLeafs(net.osmand.binary.OsmandOdb.TransportStop value) {
        if (leafsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafsIsMutable();
          leafs_.add(value);
          onChanged();
        } else {
          leafsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLeafs(
          int index, net.osmand.binary.OsmandOdb.TransportStop value) {
        if (leafsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeafsIsMutable();
          leafs_.add(index, value);
          onChanged();
        } else {
          leafsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLeafs(
          net.osmand.binary.OsmandOdb.TransportStop.Builder builderForValue) {
        if (leafsBuilder_ == null) {
          ensureLeafsIsMutable();
          leafs_.add(builderForValue.build());
          onChanged();
        } else {
          leafsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLeafs(
          int index, net.osmand.binary.OsmandOdb.TransportStop.Builder builderForValue) {
        if (leafsBuilder_ == null) {
          ensureLeafsIsMutable();
          leafs_.add(index, builderForValue.build());
          onChanged();
        } else {
          leafsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLeafs(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.TransportStop> values) {
        if (leafsBuilder_ == null) {
          ensureLeafsIsMutable();
          super.addAll(values, leafs_);
          onChanged();
        } else {
          leafsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLeafs() {
        if (leafsBuilder_ == null) {
          leafs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          leafsBuilder_.clear();
        }
        return this;
      }
      public Builder removeLeafs(int index) {
        if (leafsBuilder_ == null) {
          ensureLeafsIsMutable();
          leafs_.remove(index);
          onChanged();
        } else {
          leafsBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportStop.Builder getLeafsBuilder(
          int index) {
        return getLeafsFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.TransportStopOrBuilder getLeafsOrBuilder(
          int index) {
        if (leafsBuilder_ == null) {
          return leafs_.get(index);  } else {
          return leafsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.TransportStopOrBuilder> 
           getLeafsOrBuilderList() {
        if (leafsBuilder_ != null) {
          return leafsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leafs_);
        }
      }
      public net.osmand.binary.OsmandOdb.TransportStop.Builder addLeafsBuilder() {
        return getLeafsFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.TransportStop.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.TransportStop.Builder addLeafsBuilder(
          int index) {
        return getLeafsFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.TransportStop.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.TransportStop.Builder> 
           getLeafsBuilderList() {
        return getLeafsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStop, net.osmand.binary.OsmandOdb.TransportStop.Builder, net.osmand.binary.OsmandOdb.TransportStopOrBuilder> 
          getLeafsFieldBuilder() {
        if (leafsBuilder_ == null) {
          leafsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportStop, net.osmand.binary.OsmandOdb.TransportStop.Builder, net.osmand.binary.OsmandOdb.TransportStopOrBuilder>(
                  leafs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          leafs_ = null;
        }
        return leafsBuilder_;
      }
      
      // optional uint64 baseId = 16;
      private long baseId_ ;
      public boolean hasBaseId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getBaseId() {
        return baseId_;
      }
      public Builder setBaseId(long value) {
        bitField0_ |= 0x00000040;
        baseId_ = value;
        onChanged();
        return this;
      }
      public Builder clearBaseId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        baseId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.TransportStopsTree)
    }
    
    static {
      defaultInstance = new TransportStopsTree(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.TransportStopsTree)
  }
  
  public interface OsmAndTransportIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional .OsmAnd.OBF.TransportRoutes routes = 3;
    boolean hasRoutes();
    net.osmand.binary.OsmandOdb.TransportRoutes getRoutes();
    net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder getRoutesOrBuilder();
    
    // optional .OsmAnd.OBF.TransportStopsTree stops = 6;
    boolean hasStops();
    net.osmand.binary.OsmandOdb.TransportStopsTree getStops();
    net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getStopsOrBuilder();
    
    // required .OsmAnd.OBF.StringTable stringTable = 9;
    boolean hasStringTable();
    net.osmand.binary.OsmandOdb.StringTable getStringTable();
    net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder();
  }
  public static final class OsmAndTransportIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndTransportIndexOrBuilder {
    // Use OsmAndTransportIndex.newBuilder() to construct.
    private OsmAndTransportIndex(Builder builder) {
      super(builder);
    }
    private OsmAndTransportIndex(boolean noInit) {}
    
    private static final OsmAndTransportIndex defaultInstance;
    public static OsmAndTransportIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndTransportIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTransportIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTransportIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .OsmAnd.OBF.TransportRoutes routes = 3;
    public static final int ROUTES_FIELD_NUMBER = 3;
    private net.osmand.binary.OsmandOdb.TransportRoutes routes_;
    public boolean hasRoutes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public net.osmand.binary.OsmandOdb.TransportRoutes getRoutes() {
      return routes_;
    }
    public net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder getRoutesOrBuilder() {
      return routes_;
    }
    
    // optional .OsmAnd.OBF.TransportStopsTree stops = 6;
    public static final int STOPS_FIELD_NUMBER = 6;
    private net.osmand.binary.OsmandOdb.TransportStopsTree stops_;
    public boolean hasStops() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public net.osmand.binary.OsmandOdb.TransportStopsTree getStops() {
      return stops_;
    }
    public net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getStopsOrBuilder() {
      return stops_;
    }
    
    // required .OsmAnd.OBF.StringTable stringTable = 9;
    public static final int STRINGTABLE_FIELD_NUMBER = 9;
    private net.osmand.binary.OsmandOdb.StringTable stringTable_;
    public boolean hasStringTable() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
      return stringTable_;
    }
    public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
      return stringTable_;
    }
    
    private void initFields() {
      name_ = "";
      routes_ = net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance();
      stops_ = net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance();
      stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStringTable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRoutes()) {
        if (!getRoutes().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStops()) {
        if (!getStops().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, routes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(6, stops_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(9, stringTable_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, routes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stops_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, stringTable_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndTransportIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndTransportIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndTransportIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTransportIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndTransportIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndTransportIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoutesFieldBuilder();
          getStopsFieldBuilder();
          getStringTableFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (routesBuilder_ == null) {
          routes_ = net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance();
        } else {
          routesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (stopsBuilder_ == null) {
          stops_ = net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance();
        } else {
          stopsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stringTableBuilder_ == null) {
          stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
        } else {
          stringTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndTransportIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndTransportIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndTransportIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndTransportIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndTransportIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndTransportIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndTransportIndex result = new net.osmand.binary.OsmandOdb.OsmAndTransportIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (routesBuilder_ == null) {
          result.routes_ = routes_;
        } else {
          result.routes_ = routesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (stopsBuilder_ == null) {
          result.stops_ = stops_;
        } else {
          result.stops_ = stopsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (stringTableBuilder_ == null) {
          result.stringTable_ = stringTable_;
        } else {
          result.stringTable_ = stringTableBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndTransportIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndTransportIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndTransportIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndTransportIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasRoutes()) {
          mergeRoutes(other.getRoutes());
        }
        if (other.hasStops()) {
          mergeStops(other.getStops());
        }
        if (other.hasStringTable()) {
          mergeStringTable(other.getStringTable());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStringTable()) {
          
          return false;
        }
        if (hasRoutes()) {
          if (!getRoutes().isInitialized()) {
            
            return false;
          }
        }
        if (hasStops()) {
          if (!getStops().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              net.osmand.binary.OsmandOdb.TransportRoutes.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportRoutes.newBuilder();
              if (hasRoutes()) {
                subBuilder.mergeFrom(getRoutes());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRoutes(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.osmand.binary.OsmandOdb.TransportStopsTree.Builder subBuilder = net.osmand.binary.OsmandOdb.TransportStopsTree.newBuilder();
              if (hasStops()) {
                subBuilder.mergeFrom(getStops());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStops(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.StringTable.newBuilder();
              if (hasStringTable()) {
                subBuilder.mergeFrom(getStringTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStringTable(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional .OsmAnd.OBF.TransportRoutes routes = 3;
      private net.osmand.binary.OsmandOdb.TransportRoutes routes_ = net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRoutes, net.osmand.binary.OsmandOdb.TransportRoutes.Builder, net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder> routesBuilder_;
      public boolean hasRoutes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public net.osmand.binary.OsmandOdb.TransportRoutes getRoutes() {
        if (routesBuilder_ == null) {
          return routes_;
        } else {
          return routesBuilder_.getMessage();
        }
      }
      public Builder setRoutes(net.osmand.binary.OsmandOdb.TransportRoutes value) {
        if (routesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routes_ = value;
          onChanged();
        } else {
          routesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setRoutes(
          net.osmand.binary.OsmandOdb.TransportRoutes.Builder builderForValue) {
        if (routesBuilder_ == null) {
          routes_ = builderForValue.build();
          onChanged();
        } else {
          routesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeRoutes(net.osmand.binary.OsmandOdb.TransportRoutes value) {
        if (routesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              routes_ != net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance()) {
            routes_ =
              net.osmand.binary.OsmandOdb.TransportRoutes.newBuilder(routes_).mergeFrom(value).buildPartial();
          } else {
            routes_ = value;
          }
          onChanged();
        } else {
          routesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearRoutes() {
        if (routesBuilder_ == null) {
          routes_ = net.osmand.binary.OsmandOdb.TransportRoutes.getDefaultInstance();
          onChanged();
        } else {
          routesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportRoutes.Builder getRoutesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRoutesFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder getRoutesOrBuilder() {
        if (routesBuilder_ != null) {
          return routesBuilder_.getMessageOrBuilder();
        } else {
          return routes_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportRoutes, net.osmand.binary.OsmandOdb.TransportRoutes.Builder, net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder> 
          getRoutesFieldBuilder() {
        if (routesBuilder_ == null) {
          routesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportRoutes, net.osmand.binary.OsmandOdb.TransportRoutes.Builder, net.osmand.binary.OsmandOdb.TransportRoutesOrBuilder>(
                  routes_,
                  getParentForChildren(),
                  isClean());
          routes_ = null;
        }
        return routesBuilder_;
      }
      
      // optional .OsmAnd.OBF.TransportStopsTree stops = 6;
      private net.osmand.binary.OsmandOdb.TransportStopsTree stops_ = net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> stopsBuilder_;
      public boolean hasStops() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree getStops() {
        if (stopsBuilder_ == null) {
          return stops_;
        } else {
          return stopsBuilder_.getMessage();
        }
      }
      public Builder setStops(net.osmand.binary.OsmandOdb.TransportStopsTree value) {
        if (stopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stops_ = value;
          onChanged();
        } else {
          stopsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setStops(
          net.osmand.binary.OsmandOdb.TransportStopsTree.Builder builderForValue) {
        if (stopsBuilder_ == null) {
          stops_ = builderForValue.build();
          onChanged();
        } else {
          stopsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeStops(net.osmand.binary.OsmandOdb.TransportStopsTree value) {
        if (stopsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              stops_ != net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance()) {
            stops_ =
              net.osmand.binary.OsmandOdb.TransportStopsTree.newBuilder(stops_).mergeFrom(value).buildPartial();
          } else {
            stops_ = value;
          }
          onChanged();
        } else {
          stopsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearStops() {
        if (stopsBuilder_ == null) {
          stops_ = net.osmand.binary.OsmandOdb.TransportStopsTree.getDefaultInstance();
          onChanged();
        } else {
          stopsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTree.Builder getStopsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStopsFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder getStopsOrBuilder() {
        if (stopsBuilder_ != null) {
          return stopsBuilder_.getMessageOrBuilder();
        } else {
          return stops_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder> 
          getStopsFieldBuilder() {
        if (stopsBuilder_ == null) {
          stopsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.TransportStopsTree, net.osmand.binary.OsmandOdb.TransportStopsTree.Builder, net.osmand.binary.OsmandOdb.TransportStopsTreeOrBuilder>(
                  stops_,
                  getParentForChildren(),
                  isClean());
          stops_ = null;
        }
        return stopsBuilder_;
      }
      
      // required .OsmAnd.OBF.StringTable stringTable = 9;
      private net.osmand.binary.OsmandOdb.StringTable stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> stringTableBuilder_;
      public boolean hasStringTable() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
        if (stringTableBuilder_ == null) {
          return stringTable_;
        } else {
          return stringTableBuilder_.getMessage();
        }
      }
      public Builder setStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (stringTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stringTable_ = value;
          onChanged();
        } else {
          stringTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setStringTable(
          net.osmand.binary.OsmandOdb.StringTable.Builder builderForValue) {
        if (stringTableBuilder_ == null) {
          stringTable_ = builderForValue.build();
          onChanged();
        } else {
          stringTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
        if (stringTableBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              stringTable_ != net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance()) {
            stringTable_ =
              net.osmand.binary.OsmandOdb.StringTable.newBuilder(stringTable_).mergeFrom(value).buildPartial();
          } else {
            stringTable_ = value;
          }
          onChanged();
        } else {
          stringTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearStringTable() {
        if (stringTableBuilder_ == null) {
          stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
          onChanged();
        } else {
          stringTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public net.osmand.binary.OsmandOdb.StringTable.Builder getStringTableBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getStringTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
        if (stringTableBuilder_ != null) {
          return stringTableBuilder_.getMessageOrBuilder();
        } else {
          return stringTable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> 
          getStringTableFieldBuilder() {
        if (stringTableBuilder_ == null) {
          stringTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder>(
                  stringTable_,
                  getParentForChildren(),
                  isClean());
          stringTable_ = null;
        }
        return stringTableBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndTransportIndex)
    }
    
    static {
      defaultInstance = new OsmAndTransportIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndTransportIndex)
  }
  
  public interface OsmAndPoiIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required .OsmAnd.OBF.OsmAndTileBox boundaries = 2;
    boolean hasBoundaries();
    net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries();
    net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndCategoryTable categoriesTable = 3;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable> 
        getCategoriesTableList();
    net.osmand.binary.OsmandOdb.OsmAndCategoryTable getCategoriesTable(int index);
    int getCategoriesTableCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder> 
        getCategoriesTableOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder getCategoriesTableOrBuilder(
        int index);
    
    // optional .OsmAnd.OBF.OsmAndPoiNameIndex nameIndex = 4;
    boolean hasNameIndex();
    net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex getNameIndex();
    net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder getNameIndexOrBuilder();
    
    // optional .OsmAnd.OBF.OsmAndSubtypesTable subtypesTable = 5;
    boolean hasSubtypesTable();
    net.osmand.binary.OsmandOdb.OsmAndSubtypesTable getSubtypesTable();
    net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder getSubtypesTableOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndPoiBox boxes = 6;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> 
        getBoxesList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBox getBoxes(int index);
    int getBoxesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
        getBoxesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getBoxesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndPoiBoxData poiData = 9;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> 
        getPoiDataList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxData getPoiData(int index);
    int getPoiDataCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder> 
        getPoiDataOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder getPoiDataOrBuilder(
        int index);
  }
  public static final class OsmAndPoiIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiIndexOrBuilder {
    // Use OsmAndPoiIndex.newBuilder() to construct.
    private OsmAndPoiIndex(Builder builder) {
      super(builder);
    }
    private OsmAndPoiIndex(boolean noInit) {}
    
    private static final OsmAndPoiIndex defaultInstance;
    public static OsmAndPoiIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiIndex_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .OsmAnd.OBF.OsmAndTileBox boundaries = 2;
    public static final int BOUNDARIES_FIELD_NUMBER = 2;
    private net.osmand.binary.OsmandOdb.OsmAndTileBox boundaries_;
    public boolean hasBoundaries() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries() {
      return boundaries_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder() {
      return boundaries_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndCategoryTable categoriesTable = 3;
    public static final int CATEGORIESTABLE_FIELD_NUMBER = 3;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable> categoriesTable_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable> getCategoriesTableList() {
      return categoriesTable_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder> 
        getCategoriesTableOrBuilderList() {
      return categoriesTable_;
    }
    public int getCategoriesTableCount() {
      return categoriesTable_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndCategoryTable getCategoriesTable(int index) {
      return categoriesTable_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder getCategoriesTableOrBuilder(
        int index) {
      return categoriesTable_.get(index);
    }
    
    // optional .OsmAnd.OBF.OsmAndPoiNameIndex nameIndex = 4;
    public static final int NAMEINDEX_FIELD_NUMBER = 4;
    private net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex nameIndex_;
    public boolean hasNameIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex getNameIndex() {
      return nameIndex_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder getNameIndexOrBuilder() {
      return nameIndex_;
    }
    
    // optional .OsmAnd.OBF.OsmAndSubtypesTable subtypesTable = 5;
    public static final int SUBTYPESTABLE_FIELD_NUMBER = 5;
    private net.osmand.binary.OsmandOdb.OsmAndSubtypesTable subtypesTable_;
    public boolean hasSubtypesTable() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable getSubtypesTable() {
      return subtypesTable_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder getSubtypesTableOrBuilder() {
      return subtypesTable_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiBox boxes = 6;
    public static final int BOXES_FIELD_NUMBER = 6;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> boxes_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> getBoxesList() {
      return boxes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
        getBoxesOrBuilderList() {
      return boxes_;
    }
    public int getBoxesCount() {
      return boxes_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBox getBoxes(int index) {
      return boxes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getBoxesOrBuilder(
        int index) {
      return boxes_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiBoxData poiData = 9;
    public static final int POIDATA_FIELD_NUMBER = 9;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> poiData_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> getPoiDataList() {
      return poiData_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder> 
        getPoiDataOrBuilderList() {
      return poiData_;
    }
    public int getPoiDataCount() {
      return poiData_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData getPoiData(int index) {
      return poiData_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder getPoiDataOrBuilder(
        int index) {
      return poiData_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
      categoriesTable_ = java.util.Collections.emptyList();
      nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance();
      subtypesTable_ = net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance();
      boxes_ = java.util.Collections.emptyList();
      poiData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoundaries()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBoundaries().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCategoriesTableCount(); i++) {
        if (!getCategoriesTable(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNameIndex()) {
        if (!getNameIndex().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSubtypesTable()) {
        if (!getSubtypesTable().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBoxesCount(); i++) {
        if (!getBoxes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPoiDataCount(); i++) {
        if (!getPoiData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, boundaries_);
      }
      for (int i = 0; i < categoriesTable_.size(); i++) {
        output.writeMessage(3, categoriesTable_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, nameIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, subtypesTable_);
      }
      for (int i = 0; i < boxes_.size(); i++) {
        output.writeMessage(6, boxes_.get(i));
      }
      for (int i = 0; i < poiData_.size(); i++) {
        output.writeMessage(9, poiData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, boundaries_);
      }
      for (int i = 0; i < categoriesTable_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, categoriesTable_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, nameIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, subtypesTable_);
      }
      for (int i = 0; i < boxes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, boxes_.get(i));
      }
      for (int i = 0; i < poiData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, poiData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBoundariesFieldBuilder();
          getCategoriesTableFieldBuilder();
          getNameIndexFieldBuilder();
          getSubtypesTableFieldBuilder();
          getBoxesFieldBuilder();
          getPoiDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (boundariesBuilder_ == null) {
          boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
        } else {
          boundariesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (categoriesTableBuilder_ == null) {
          categoriesTable_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          categoriesTableBuilder_.clear();
        }
        if (nameIndexBuilder_ == null) {
          nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance();
        } else {
          nameIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (subtypesTableBuilder_ == null) {
          subtypesTable_ = net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance();
        } else {
          subtypesTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (boxesBuilder_ == null) {
          boxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          boxesBuilder_.clear();
        }
        if (poiDataBuilder_ == null) {
          poiData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          poiDataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiIndex result = new net.osmand.binary.OsmandOdb.OsmAndPoiIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (boundariesBuilder_ == null) {
          result.boundaries_ = boundaries_;
        } else {
          result.boundaries_ = boundariesBuilder_.build();
        }
        if (categoriesTableBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            categoriesTable_ = java.util.Collections.unmodifiableList(categoriesTable_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.categoriesTable_ = categoriesTable_;
        } else {
          result.categoriesTable_ = categoriesTableBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (nameIndexBuilder_ == null) {
          result.nameIndex_ = nameIndex_;
        } else {
          result.nameIndex_ = nameIndexBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (subtypesTableBuilder_ == null) {
          result.subtypesTable_ = subtypesTable_;
        } else {
          result.subtypesTable_ = subtypesTableBuilder_.build();
        }
        if (boxesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            boxes_ = java.util.Collections.unmodifiableList(boxes_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.boxes_ = boxes_;
        } else {
          result.boxes_ = boxesBuilder_.build();
        }
        if (poiDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            poiData_ = java.util.Collections.unmodifiableList(poiData_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.poiData_ = poiData_;
        } else {
          result.poiData_ = poiDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasBoundaries()) {
          mergeBoundaries(other.getBoundaries());
        }
        if (categoriesTableBuilder_ == null) {
          if (!other.categoriesTable_.isEmpty()) {
            if (categoriesTable_.isEmpty()) {
              categoriesTable_ = other.categoriesTable_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCategoriesTableIsMutable();
              categoriesTable_.addAll(other.categoriesTable_);
            }
            onChanged();
          }
        } else {
          if (!other.categoriesTable_.isEmpty()) {
            if (categoriesTableBuilder_.isEmpty()) {
              categoriesTableBuilder_.dispose();
              categoriesTableBuilder_ = null;
              categoriesTable_ = other.categoriesTable_;
              bitField0_ = (bitField0_ & ~0x00000004);
              categoriesTableBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCategoriesTableFieldBuilder() : null;
            } else {
              categoriesTableBuilder_.addAllMessages(other.categoriesTable_);
            }
          }
        }
        if (other.hasNameIndex()) {
          mergeNameIndex(other.getNameIndex());
        }
        if (other.hasSubtypesTable()) {
          mergeSubtypesTable(other.getSubtypesTable());
        }
        if (boxesBuilder_ == null) {
          if (!other.boxes_.isEmpty()) {
            if (boxes_.isEmpty()) {
              boxes_ = other.boxes_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureBoxesIsMutable();
              boxes_.addAll(other.boxes_);
            }
            onChanged();
          }
        } else {
          if (!other.boxes_.isEmpty()) {
            if (boxesBuilder_.isEmpty()) {
              boxesBuilder_.dispose();
              boxesBuilder_ = null;
              boxes_ = other.boxes_;
              bitField0_ = (bitField0_ & ~0x00000020);
              boxesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoxesFieldBuilder() : null;
            } else {
              boxesBuilder_.addAllMessages(other.boxes_);
            }
          }
        }
        if (poiDataBuilder_ == null) {
          if (!other.poiData_.isEmpty()) {
            if (poiData_.isEmpty()) {
              poiData_ = other.poiData_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePoiDataIsMutable();
              poiData_.addAll(other.poiData_);
            }
            onChanged();
          }
        } else {
          if (!other.poiData_.isEmpty()) {
            if (poiDataBuilder_.isEmpty()) {
              poiDataBuilder_.dispose();
              poiDataBuilder_ = null;
              poiData_ = other.poiData_;
              bitField0_ = (bitField0_ & ~0x00000040);
              poiDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPoiDataFieldBuilder() : null;
            } else {
              poiDataBuilder_.addAllMessages(other.poiData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasBoundaries()) {
          
          return false;
        }
        if (!getBoundaries().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getCategoriesTableCount(); i++) {
          if (!getCategoriesTable(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasNameIndex()) {
          if (!getNameIndex().isInitialized()) {
            
            return false;
          }
        }
        if (hasSubtypesTable()) {
          if (!getSubtypesTable().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBoxesCount(); i++) {
          if (!getBoxes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPoiDataCount(); i++) {
          if (!getPoiData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndTileBox.newBuilder();
              if (hasBoundaries()) {
                subBuilder.mergeFrom(getBoundaries());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBoundaries(subBuilder.buildPartial());
              break;
            }
            case 26: {
              net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndCategoryTable.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCategoriesTable(subBuilder.buildPartial());
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.newBuilder();
              if (hasNameIndex()) {
                subBuilder.mergeFrom(getNameIndex());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNameIndex(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.newBuilder();
              if (hasSubtypesTable()) {
                subBuilder.mergeFrom(getSubtypesTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubtypesTable(subBuilder.buildPartial());
              break;
            }
            case 50: {
              net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBoxes(subBuilder.buildPartial());
              break;
            }
            case 74: {
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required .OsmAnd.OBF.OsmAndTileBox boundaries = 2;
      private net.osmand.binary.OsmandOdb.OsmAndTileBox boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder> boundariesBuilder_;
      public boolean hasBoundaries() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBox getBoundaries() {
        if (boundariesBuilder_ == null) {
          return boundaries_;
        } else {
          return boundariesBuilder_.getMessage();
        }
      }
      public Builder setBoundaries(net.osmand.binary.OsmandOdb.OsmAndTileBox value) {
        if (boundariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          boundaries_ = value;
          onChanged();
        } else {
          boundariesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setBoundaries(
          net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder builderForValue) {
        if (boundariesBuilder_ == null) {
          boundaries_ = builderForValue.build();
          onChanged();
        } else {
          boundariesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeBoundaries(net.osmand.binary.OsmandOdb.OsmAndTileBox value) {
        if (boundariesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              boundaries_ != net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance()) {
            boundaries_ =
              net.osmand.binary.OsmandOdb.OsmAndTileBox.newBuilder(boundaries_).mergeFrom(value).buildPartial();
          } else {
            boundaries_ = value;
          }
          onChanged();
        } else {
          boundariesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearBoundaries() {
        if (boundariesBuilder_ == null) {
          boundaries_ = net.osmand.binary.OsmandOdb.OsmAndTileBox.getDefaultInstance();
          onChanged();
        } else {
          boundariesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder getBoundariesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBoundariesFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder getBoundariesOrBuilder() {
        if (boundariesBuilder_ != null) {
          return boundariesBuilder_.getMessageOrBuilder();
        } else {
          return boundaries_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder> 
          getBoundariesFieldBuilder() {
        if (boundariesBuilder_ == null) {
          boundariesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndTileBox, net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder, net.osmand.binary.OsmandOdb.OsmAndTileBoxOrBuilder>(
                  boundaries_,
                  getParentForChildren(),
                  isClean());
          boundaries_ = null;
        }
        return boundariesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndCategoryTable categoriesTable = 3;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable> categoriesTable_ =
        java.util.Collections.emptyList();
      private void ensureCategoriesTableIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          categoriesTable_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndCategoryTable>(categoriesTable_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndCategoryTable, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder, net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder> categoriesTableBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable> getCategoriesTableList() {
        if (categoriesTableBuilder_ == null) {
          return java.util.Collections.unmodifiableList(categoriesTable_);
        } else {
          return categoriesTableBuilder_.getMessageList();
        }
      }
      public int getCategoriesTableCount() {
        if (categoriesTableBuilder_ == null) {
          return categoriesTable_.size();
        } else {
          return categoriesTableBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable getCategoriesTable(int index) {
        if (categoriesTableBuilder_ == null) {
          return categoriesTable_.get(index);
        } else {
          return categoriesTableBuilder_.getMessage(index);
        }
      }
      public Builder setCategoriesTable(
          int index, net.osmand.binary.OsmandOdb.OsmAndCategoryTable value) {
        if (categoriesTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoriesTableIsMutable();
          categoriesTable_.set(index, value);
          onChanged();
        } else {
          categoriesTableBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCategoriesTable(
          int index, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder builderForValue) {
        if (categoriesTableBuilder_ == null) {
          ensureCategoriesTableIsMutable();
          categoriesTable_.set(index, builderForValue.build());
          onChanged();
        } else {
          categoriesTableBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCategoriesTable(net.osmand.binary.OsmandOdb.OsmAndCategoryTable value) {
        if (categoriesTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoriesTableIsMutable();
          categoriesTable_.add(value);
          onChanged();
        } else {
          categoriesTableBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCategoriesTable(
          int index, net.osmand.binary.OsmandOdb.OsmAndCategoryTable value) {
        if (categoriesTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCategoriesTableIsMutable();
          categoriesTable_.add(index, value);
          onChanged();
        } else {
          categoriesTableBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCategoriesTable(
          net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder builderForValue) {
        if (categoriesTableBuilder_ == null) {
          ensureCategoriesTableIsMutable();
          categoriesTable_.add(builderForValue.build());
          onChanged();
        } else {
          categoriesTableBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCategoriesTable(
          int index, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder builderForValue) {
        if (categoriesTableBuilder_ == null) {
          ensureCategoriesTableIsMutable();
          categoriesTable_.add(index, builderForValue.build());
          onChanged();
        } else {
          categoriesTableBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCategoriesTable(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndCategoryTable> values) {
        if (categoriesTableBuilder_ == null) {
          ensureCategoriesTableIsMutable();
          super.addAll(values, categoriesTable_);
          onChanged();
        } else {
          categoriesTableBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCategoriesTable() {
        if (categoriesTableBuilder_ == null) {
          categoriesTable_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          categoriesTableBuilder_.clear();
        }
        return this;
      }
      public Builder removeCategoriesTable(int index) {
        if (categoriesTableBuilder_ == null) {
          ensureCategoriesTableIsMutable();
          categoriesTable_.remove(index);
          onChanged();
        } else {
          categoriesTableBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder getCategoriesTableBuilder(
          int index) {
        return getCategoriesTableFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder getCategoriesTableOrBuilder(
          int index) {
        if (categoriesTableBuilder_ == null) {
          return categoriesTable_.get(index);  } else {
          return categoriesTableBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder> 
           getCategoriesTableOrBuilderList() {
        if (categoriesTableBuilder_ != null) {
          return categoriesTableBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(categoriesTable_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder addCategoriesTableBuilder() {
        return getCategoriesTableFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndCategoryTable.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder addCategoriesTableBuilder(
          int index) {
        return getCategoriesTableFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder> 
           getCategoriesTableBuilderList() {
        return getCategoriesTableFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndCategoryTable, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder, net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder> 
          getCategoriesTableFieldBuilder() {
        if (categoriesTableBuilder_ == null) {
          categoriesTableBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndCategoryTable, net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder, net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder>(
                  categoriesTable_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          categoriesTable_ = null;
        }
        return categoriesTableBuilder_;
      }
      
      // optional .OsmAnd.OBF.OsmAndPoiNameIndex nameIndex = 4;
      private net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder> nameIndexBuilder_;
      public boolean hasNameIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex getNameIndex() {
        if (nameIndexBuilder_ == null) {
          return nameIndex_;
        } else {
          return nameIndexBuilder_.getMessage();
        }
      }
      public Builder setNameIndex(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex value) {
        if (nameIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nameIndex_ = value;
          onChanged();
        } else {
          nameIndexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setNameIndex(
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder builderForValue) {
        if (nameIndexBuilder_ == null) {
          nameIndex_ = builderForValue.build();
          onChanged();
        } else {
          nameIndexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeNameIndex(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex value) {
        if (nameIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              nameIndex_ != net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance()) {
            nameIndex_ =
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.newBuilder(nameIndex_).mergeFrom(value).buildPartial();
          } else {
            nameIndex_ = value;
          }
          onChanged();
        } else {
          nameIndexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearNameIndex() {
        if (nameIndexBuilder_ == null) {
          nameIndex_ = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance();
          onChanged();
        } else {
          nameIndexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder getNameIndexBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNameIndexFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder getNameIndexOrBuilder() {
        if (nameIndexBuilder_ != null) {
          return nameIndexBuilder_.getMessageOrBuilder();
        } else {
          return nameIndex_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder> 
          getNameIndexFieldBuilder() {
        if (nameIndexBuilder_ == null) {
          nameIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder>(
                  nameIndex_,
                  getParentForChildren(),
                  isClean());
          nameIndex_ = null;
        }
        return nameIndexBuilder_;
      }
      
      // optional .OsmAnd.OBF.OsmAndSubtypesTable subtypesTable = 5;
      private net.osmand.binary.OsmandOdb.OsmAndSubtypesTable subtypesTable_ = net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndSubtypesTable, net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder, net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder> subtypesTableBuilder_;
      public boolean hasSubtypesTable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable getSubtypesTable() {
        if (subtypesTableBuilder_ == null) {
          return subtypesTable_;
        } else {
          return subtypesTableBuilder_.getMessage();
        }
      }
      public Builder setSubtypesTable(net.osmand.binary.OsmandOdb.OsmAndSubtypesTable value) {
        if (subtypesTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subtypesTable_ = value;
          onChanged();
        } else {
          subtypesTableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setSubtypesTable(
          net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder builderForValue) {
        if (subtypesTableBuilder_ == null) {
          subtypesTable_ = builderForValue.build();
          onChanged();
        } else {
          subtypesTableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeSubtypesTable(net.osmand.binary.OsmandOdb.OsmAndSubtypesTable value) {
        if (subtypesTableBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              subtypesTable_ != net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance()) {
            subtypesTable_ =
              net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.newBuilder(subtypesTable_).mergeFrom(value).buildPartial();
          } else {
            subtypesTable_ = value;
          }
          onChanged();
        } else {
          subtypesTableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearSubtypesTable() {
        if (subtypesTableBuilder_ == null) {
          subtypesTable_ = net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance();
          onChanged();
        } else {
          subtypesTableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder getSubtypesTableBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSubtypesTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder getSubtypesTableOrBuilder() {
        if (subtypesTableBuilder_ != null) {
          return subtypesTableBuilder_.getMessageOrBuilder();
        } else {
          return subtypesTable_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndSubtypesTable, net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder, net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder> 
          getSubtypesTableFieldBuilder() {
        if (subtypesTableBuilder_ == null) {
          subtypesTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndSubtypesTable, net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder, net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder>(
                  subtypesTable_,
                  getParentForChildren(),
                  isClean());
          subtypesTable_ = null;
        }
        return subtypesTableBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiBox boxes = 6;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> boxes_ =
        java.util.Collections.emptyList();
      private void ensureBoxesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          boxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBox>(boxes_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> boxesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> getBoxesList() {
        if (boxesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boxes_);
        } else {
          return boxesBuilder_.getMessageList();
        }
      }
      public int getBoxesCount() {
        if (boxesBuilder_ == null) {
          return boxes_.size();
        } else {
          return boxesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox getBoxes(int index) {
        if (boxesBuilder_ == null) {
          return boxes_.get(index);
        } else {
          return boxesBuilder_.getMessage(index);
        }
      }
      public Builder setBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.set(index, value);
          onChanged();
        } else {
          boxesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.set(index, builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBoxes(net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.add(value);
          onChanged();
        } else {
          boxesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (boxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxesIsMutable();
          boxes_.add(index, value);
          onChanged();
        } else {
          boxesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBoxes(
          net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.add(builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.add(index, builderForValue.build());
          onChanged();
        } else {
          boxesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBoxes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBox> values) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          super.addAll(values, boxes_);
          onChanged();
        } else {
          boxesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBoxes() {
        if (boxesBuilder_ == null) {
          boxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          boxesBuilder_.clear();
        }
        return this;
      }
      public Builder removeBoxes(int index) {
        if (boxesBuilder_ == null) {
          ensureBoxesIsMutable();
          boxes_.remove(index);
          onChanged();
        } else {
          boxesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder getBoxesBuilder(
          int index) {
        return getBoxesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getBoxesOrBuilder(
          int index) {
        if (boxesBuilder_ == null) {
          return boxes_.get(index);  } else {
          return boxesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
           getBoxesOrBuilderList() {
        if (boxesBuilder_ != null) {
          return boxesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boxes_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder addBoxesBuilder() {
        return getBoxesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder addBoxesBuilder(
          int index) {
        return getBoxesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder> 
           getBoxesBuilderList() {
        return getBoxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
          getBoxesFieldBuilder() {
        if (boxesBuilder_ == null) {
          boxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder>(
                  boxes_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          boxes_ = null;
        }
        return boxesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiBoxData poiData = 9;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> poiData_ =
        java.util.Collections.emptyList();
      private void ensurePoiDataIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          poiData_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData>(poiData_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxData, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder> poiDataBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> getPoiDataList() {
        if (poiDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(poiData_);
        } else {
          return poiDataBuilder_.getMessageList();
        }
      }
      public int getPoiDataCount() {
        if (poiDataBuilder_ == null) {
          return poiData_.size();
        } else {
          return poiDataBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData getPoiData(int index) {
        if (poiDataBuilder_ == null) {
          return poiData_.get(index);
        } else {
          return poiDataBuilder_.getMessage(index);
        }
      }
      public Builder setPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.set(index, value);
          onChanged();
        } else {
          poiDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.set(index, builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPoiData(net.osmand.binary.OsmandOdb.OsmAndPoiBoxData value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.add(value);
          onChanged();
        } else {
          poiDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.add(index, value);
          onChanged();
        } else {
          poiDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPoiData(
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.add(builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.add(index, builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPoiData(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxData> values) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          super.addAll(values, poiData_);
          onChanged();
        } else {
          poiDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPoiData() {
        if (poiDataBuilder_ == null) {
          poiData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          poiDataBuilder_.clear();
        }
        return this;
      }
      public Builder removePoiData(int index) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.remove(index);
          onChanged();
        } else {
          poiDataBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder getPoiDataBuilder(
          int index) {
        return getPoiDataFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder getPoiDataOrBuilder(
          int index) {
        if (poiDataBuilder_ == null) {
          return poiData_.get(index);  } else {
          return poiDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder> 
           getPoiDataOrBuilderList() {
        if (poiDataBuilder_ != null) {
          return poiDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(poiData_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder addPoiDataBuilder() {
        return getPoiDataFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder addPoiDataBuilder(
          int index) {
        return getPoiDataFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder> 
           getPoiDataBuilderList() {
        return getPoiDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxData, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder> 
          getPoiDataFieldBuilder() {
        if (poiDataBuilder_ == null) {
          poiDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxData, net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder>(
                  poiData_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          poiData_ = null;
        }
        return poiDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiIndex)
    }
    
    static {
      defaultInstance = new OsmAndPoiIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiIndex)
  }
  
  public interface OsmAndPoiNameIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .OsmAnd.OBF.IndexedStringTable table = 3;
    boolean hasTable();
    net.osmand.binary.OsmandOdb.IndexedStringTable getTable();
    net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndPoiNameIndex.OsmAndPoiNameIndexData data = 5;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> 
        getDataList();
    net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData getData(int index);
    int getDataCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder> 
        getDataOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder getDataOrBuilder(
        int index);
  }
  public static final class OsmAndPoiNameIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiNameIndexOrBuilder {
    // Use OsmAndPoiNameIndex.newBuilder() to construct.
    private OsmAndPoiNameIndex(Builder builder) {
      super(builder);
    }
    private OsmAndPoiNameIndex(boolean noInit) {}
    
    private static final OsmAndPoiNameIndex defaultInstance;
    public static OsmAndPoiNameIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiNameIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_fieldAccessorTable;
    }
    
    public interface OsmAndPoiNameIndexDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // repeated .OsmAnd.OBF.OsmAndPoiNameIndexDataAtom atoms = 3;
      java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> 
          getAtomsList();
      net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom getAtoms(int index);
      int getAtomsCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder> 
          getAtomsOrBuilderList();
      net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder getAtomsOrBuilder(
          int index);
    }
    public static final class OsmAndPoiNameIndexData extends
        com.google.protobuf.GeneratedMessage
        implements OsmAndPoiNameIndexDataOrBuilder {
      // Use OsmAndPoiNameIndexData.newBuilder() to construct.
      private OsmAndPoiNameIndexData(Builder builder) {
        super(builder);
      }
      private OsmAndPoiNameIndexData(boolean noInit) {}
      
      private static final OsmAndPoiNameIndexData defaultInstance;
      public static OsmAndPoiNameIndexData getDefaultInstance() {
        return defaultInstance;
      }
      
      public OsmAndPoiNameIndexData getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_fieldAccessorTable;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiNameIndexDataAtom atoms = 3;
      public static final int ATOMS_FIELD_NUMBER = 3;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> atoms_;
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> getAtomsList() {
        return atoms_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder> 
          getAtomsOrBuilderList() {
        return atoms_;
      }
      public int getAtomsCount() {
        return atoms_.size();
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom getAtoms(int index) {
        return atoms_.get(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder getAtomsOrBuilder(
          int index) {
        return atoms_.get(index);
      }
      
      private void initFields() {
        atoms_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < atoms_.size(); i++) {
          output.writeMessage(3, atoms_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        for (int i = 0; i < atoms_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, atoms_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAtomsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          if (atomsBuilder_ == null) {
            atoms_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            atomsBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData build() {
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData result = new net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData(this);
          int from_bitField0_ = bitField0_;
          if (atomsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              atoms_ = java.util.Collections.unmodifiableList(atoms_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.atoms_ = atoms_;
          } else {
            result.atoms_ = atomsBuilder_.build();
          }
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.getDefaultInstance()) return this;
          if (atomsBuilder_ == null) {
            if (!other.atoms_.isEmpty()) {
              if (atoms_.isEmpty()) {
                atoms_ = other.atoms_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureAtomsIsMutable();
                atoms_.addAll(other.atoms_);
              }
              onChanged();
            }
          } else {
            if (!other.atoms_.isEmpty()) {
              if (atomsBuilder_.isEmpty()) {
                atomsBuilder_.dispose();
                atomsBuilder_ = null;
                atoms_ = other.atoms_;
                bitField0_ = (bitField0_ & ~0x00000001);
                atomsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAtomsFieldBuilder() : null;
              } else {
                atomsBuilder_.addAllMessages(other.atoms_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 26: {
                net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addAtoms(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // repeated .OsmAnd.OBF.OsmAndPoiNameIndexDataAtom atoms = 3;
        private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> atoms_ =
          java.util.Collections.emptyList();
        private void ensureAtomsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            atoms_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom>(atoms_);
            bitField0_ |= 0x00000001;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder> atomsBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> getAtomsList() {
          if (atomsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(atoms_);
          } else {
            return atomsBuilder_.getMessageList();
          }
        }
        public int getAtomsCount() {
          if (atomsBuilder_ == null) {
            return atoms_.size();
          } else {
            return atomsBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom getAtoms(int index) {
          if (atomsBuilder_ == null) {
            return atoms_.get(index);
          } else {
            return atomsBuilder_.getMessage(index);
          }
        }
        public Builder setAtoms(
            int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom value) {
          if (atomsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomsIsMutable();
            atoms_.set(index, value);
            onChanged();
          } else {
            atomsBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setAtoms(
            int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder builderForValue) {
          if (atomsBuilder_ == null) {
            ensureAtomsIsMutable();
            atoms_.set(index, builderForValue.build());
            onChanged();
          } else {
            atomsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAtoms(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom value) {
          if (atomsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomsIsMutable();
            atoms_.add(value);
            onChanged();
          } else {
            atomsBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addAtoms(
            int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom value) {
          if (atomsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAtomsIsMutable();
            atoms_.add(index, value);
            onChanged();
          } else {
            atomsBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addAtoms(
            net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder builderForValue) {
          if (atomsBuilder_ == null) {
            ensureAtomsIsMutable();
            atoms_.add(builderForValue.build());
            onChanged();
          } else {
            atomsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addAtoms(
            int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder builderForValue) {
          if (atomsBuilder_ == null) {
            ensureAtomsIsMutable();
            atoms_.add(index, builderForValue.build());
            onChanged();
          } else {
            atomsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllAtoms(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom> values) {
          if (atomsBuilder_ == null) {
            ensureAtomsIsMutable();
            super.addAll(values, atoms_);
            onChanged();
          } else {
            atomsBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearAtoms() {
          if (atomsBuilder_ == null) {
            atoms_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            atomsBuilder_.clear();
          }
          return this;
        }
        public Builder removeAtoms(int index) {
          if (atomsBuilder_ == null) {
            ensureAtomsIsMutable();
            atoms_.remove(index);
            onChanged();
          } else {
            atomsBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder getAtomsBuilder(
            int index) {
          return getAtomsFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder getAtomsOrBuilder(
            int index) {
          if (atomsBuilder_ == null) {
            return atoms_.get(index);  } else {
            return atomsBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder> 
             getAtomsOrBuilderList() {
          if (atomsBuilder_ != null) {
            return atomsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(atoms_);
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder addAtomsBuilder() {
          return getAtomsFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder addAtomsBuilder(
            int index) {
          return getAtomsFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder> 
             getAtomsBuilderList() {
          return getAtomsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder> 
            getAtomsFieldBuilder() {
          if (atomsBuilder_ == null) {
            atomsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder>(
                    atoms_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            atoms_ = null;
          }
          return atomsBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiNameIndex.OsmAndPoiNameIndexData)
      }
      
      static {
        defaultInstance = new OsmAndPoiNameIndexData(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiNameIndex.OsmAndPoiNameIndexData)
    }
    
    private int bitField0_;
    // required .OsmAnd.OBF.IndexedStringTable table = 3;
    public static final int TABLE_FIELD_NUMBER = 3;
    private net.osmand.binary.OsmandOdb.IndexedStringTable table_;
    public boolean hasTable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTable getTable() {
      return table_;
    }
    public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder() {
      return table_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiNameIndex.OsmAndPoiNameIndexData data = 5;
    public static final int DATA_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> data_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> getDataList() {
      return data_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    public int getDataCount() {
      return data_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData getData(int index) {
      return data_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }
    
    private void initFields() {
      table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(3, table_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(5, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, table_);
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableFieldBuilder();
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (tableBuilder_ == null) {
          table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex result = new net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (tableBuilder_ == null) {
          result.table_ = table_;
        } else {
          result.table_ = tableBuilder_.build();
        }
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.getDefaultInstance()) return this;
        if (other.hasTable()) {
          mergeTable(other.getTable());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTable()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 26: {
              net.osmand.binary.OsmandOdb.IndexedStringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder();
              if (hasTable()) {
                subBuilder.mergeFrom(getTable());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTable(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .OsmAnd.OBF.IndexedStringTable table = 3;
      private net.osmand.binary.OsmandOdb.IndexedStringTable table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> tableBuilder_;
      public boolean hasTable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable getTable() {
        if (tableBuilder_ == null) {
          return table_;
        } else {
          return tableBuilder_.getMessage();
        }
      }
      public Builder setTable(net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (tableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          table_ = value;
          onChanged();
        } else {
          tableBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setTable(
          net.osmand.binary.OsmandOdb.IndexedStringTable.Builder builderForValue) {
        if (tableBuilder_ == null) {
          table_ = builderForValue.build();
          onChanged();
        } else {
          tableBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeTable(net.osmand.binary.OsmandOdb.IndexedStringTable value) {
        if (tableBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              table_ != net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance()) {
            table_ =
              net.osmand.binary.OsmandOdb.IndexedStringTable.newBuilder(table_).mergeFrom(value).buildPartial();
          } else {
            table_ = value;
          }
          onChanged();
        } else {
          tableBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearTable() {
        if (tableBuilder_ == null) {
          table_ = net.osmand.binary.OsmandOdb.IndexedStringTable.getDefaultInstance();
          onChanged();
        } else {
          tableBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTable.Builder getTableBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTableFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder getTableOrBuilder() {
        if (tableBuilder_ != null) {
          return tableBuilder_.getMessageOrBuilder();
        } else {
          return table_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder> 
          getTableFieldBuilder() {
        if (tableBuilder_ == null) {
          tableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.IndexedStringTable, net.osmand.binary.OsmandOdb.IndexedStringTable.Builder, net.osmand.binary.OsmandOdb.IndexedStringTableOrBuilder>(
                  table_,
                  getParentForChildren(),
                  isClean());
          table_ = null;
        }
        return tableBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiNameIndex.OsmAndPoiNameIndexData data = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          data_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData>(data_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder> dataBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      public Builder setData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addData(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addData(
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllData(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          super.addAll(values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiNameIndex)
    }
    
    static {
      defaultInstance = new OsmAndPoiNameIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiNameIndex)
  }
  
  public interface OsmAndPoiNameIndexDataAtomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 zoom = 2;
    boolean hasZoom();
    int getZoom();
    
    // optional uint32 x = 3;
    boolean hasX();
    int getX();
    
    // optional uint32 y = 4;
    boolean hasY();
    int getY();
    
    // optional fixed32 shiftTo = 14;
    boolean hasShiftTo();
    int getShiftTo();
  }
  public static final class OsmAndPoiNameIndexDataAtom extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiNameIndexDataAtomOrBuilder {
    // Use OsmAndPoiNameIndexDataAtom.newBuilder() to construct.
    private OsmAndPoiNameIndexDataAtom(Builder builder) {
      super(builder);
    }
    private OsmAndPoiNameIndexDataAtom(boolean noInit) {}
    
    private static final OsmAndPoiNameIndexDataAtom defaultInstance;
    public static OsmAndPoiNameIndexDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiNameIndexDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 zoom = 2;
    public static final int ZOOM_FIELD_NUMBER = 2;
    private int zoom_;
    public boolean hasZoom() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getZoom() {
      return zoom_;
    }
    
    // optional uint32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getX() {
      return x_;
    }
    
    // optional uint32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getY() {
      return y_;
    }
    
    // optional fixed32 shiftTo = 14;
    public static final int SHIFTTO_FIELD_NUMBER = 14;
    private int shiftTo_;
    public boolean hasShiftTo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getShiftTo() {
      return shiftTo_;
    }
    
    private void initFields() {
      zoom_ = 0;
      x_ = 0;
      y_ = 0;
      shiftTo_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFixed32(14, shiftTo_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, y_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, shiftTo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        zoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        shiftTo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom result = new net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zoom_ = zoom_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shiftTo_ = shiftTo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasShiftTo()) {
          setShiftTo(other.getShiftTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              zoom_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              x_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              y_ = input.readUInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000008;
              shiftTo_ = input.readFixed32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 zoom = 2;
      private int zoom_ ;
      public boolean hasZoom() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getZoom() {
        return zoom_;
      }
      public Builder setZoom(int value) {
        bitField0_ |= 0x00000001;
        zoom_ = value;
        onChanged();
        return this;
      }
      public Builder clearZoom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zoom_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 x = 3;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000002;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 y = 4;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000004;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // optional fixed32 shiftTo = 14;
      private int shiftTo_ ;
      public boolean hasShiftTo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getShiftTo() {
        return shiftTo_;
      }
      public Builder setShiftTo(int value) {
        bitField0_ |= 0x00000008;
        shiftTo_ = value;
        onChanged();
        return this;
      }
      public Builder clearShiftTo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shiftTo_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiNameIndexDataAtom)
    }
    
    static {
      defaultInstance = new OsmAndPoiNameIndexDataAtom(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiNameIndexDataAtom)
  }
  
  public interface OsmAndCategoryTableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string category = 1;
    boolean hasCategory();
    String getCategory();
    
    // repeated string subcategories = 3;
    java.util.List<String> getSubcategoriesList();
    int getSubcategoriesCount();
    String getSubcategories(int index);
  }
  public static final class OsmAndCategoryTable extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndCategoryTableOrBuilder {
    // Use OsmAndCategoryTable.newBuilder() to construct.
    private OsmAndCategoryTable(Builder builder) {
      super(builder);
    }
    private OsmAndCategoryTable(boolean noInit) {}
    
    private static final OsmAndCategoryTable defaultInstance;
    public static OsmAndCategoryTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndCategoryTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndCategoryTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndCategoryTable_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string category = 1;
    public static final int CATEGORY_FIELD_NUMBER = 1;
    private java.lang.Object category_;
    public boolean hasCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getCategory() {
      java.lang.Object ref = category_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          category_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCategoryBytes() {
      java.lang.Object ref = category_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        category_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string subcategories = 3;
    public static final int SUBCATEGORIES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList subcategories_;
    public java.util.List<String>
        getSubcategoriesList() {
      return subcategories_;
    }
    public int getSubcategoriesCount() {
      return subcategories_.size();
    }
    public String getSubcategories(int index) {
      return subcategories_.get(index);
    }
    
    private void initFields() {
      category_ = "";
      subcategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCategory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCategoryBytes());
      }
      for (int i = 0; i < subcategories_.size(); i++) {
        output.writeBytes(3, subcategories_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCategoryBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subcategories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(subcategories_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSubcategoriesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndCategoryTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndCategoryTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndCategoryTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndCategoryTable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndCategoryTable_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndCategoryTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        category_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        subcategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndCategoryTable.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndCategoryTable.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable build() {
        net.osmand.binary.OsmandOdb.OsmAndCategoryTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndCategoryTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndCategoryTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndCategoryTable buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndCategoryTable result = new net.osmand.binary.OsmandOdb.OsmAndCategoryTable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.category_ = category_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          subcategories_ = new com.google.protobuf.UnmodifiableLazyStringList(
              subcategories_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.subcategories_ = subcategories_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndCategoryTable) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndCategoryTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndCategoryTable other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndCategoryTable.getDefaultInstance()) return this;
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (!other.subcategories_.isEmpty()) {
          if (subcategories_.isEmpty()) {
            subcategories_ = other.subcategories_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSubcategoriesIsMutable();
            subcategories_.addAll(other.subcategories_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCategory()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              category_ = input.readBytes();
              break;
            }
            case 26: {
              ensureSubcategoriesIsMutable();
              subcategories_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string category = 1;
      private java.lang.Object category_ = "";
      public boolean hasCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getCategory() {
        java.lang.Object ref = category_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          category_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCategory(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        category_ = value;
        onChanged();
        return this;
      }
      public Builder clearCategory() {
        bitField0_ = (bitField0_ & ~0x00000001);
        category_ = getDefaultInstance().getCategory();
        onChanged();
        return this;
      }
      void setCategory(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        category_ = value;
        onChanged();
      }
      
      // repeated string subcategories = 3;
      private com.google.protobuf.LazyStringList subcategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSubcategoriesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          subcategories_ = new com.google.protobuf.LazyStringArrayList(subcategories_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getSubcategoriesList() {
        return java.util.Collections.unmodifiableList(subcategories_);
      }
      public int getSubcategoriesCount() {
        return subcategories_.size();
      }
      public String getSubcategories(int index) {
        return subcategories_.get(index);
      }
      public Builder setSubcategories(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubcategoriesIsMutable();
        subcategories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSubcategories(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubcategoriesIsMutable();
        subcategories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSubcategories(
          java.lang.Iterable<String> values) {
        ensureSubcategoriesIsMutable();
        super.addAll(values, subcategories_);
        onChanged();
        return this;
      }
      public Builder clearSubcategories() {
        subcategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addSubcategories(com.google.protobuf.ByteString value) {
        ensureSubcategoriesIsMutable();
        subcategories_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndCategoryTable)
    }
    
    static {
      defaultInstance = new OsmAndCategoryTable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndCategoryTable)
  }
  
  public interface OsmAndSubtypesTableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .OsmAnd.OBF.OsmAndPoiSubtype subtypes = 4;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> 
        getSubtypesList();
    net.osmand.binary.OsmandOdb.OsmAndPoiSubtype getSubtypes(int index);
    int getSubtypesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder> 
        getSubtypesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder getSubtypesOrBuilder(
        int index);
  }
  public static final class OsmAndSubtypesTable extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndSubtypesTableOrBuilder {
    // Use OsmAndSubtypesTable.newBuilder() to construct.
    private OsmAndSubtypesTable(Builder builder) {
      super(builder);
    }
    private OsmAndSubtypesTable(boolean noInit) {}
    
    private static final OsmAndSubtypesTable defaultInstance;
    public static OsmAndSubtypesTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndSubtypesTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndSubtypesTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndSubtypesTable_fieldAccessorTable;
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiSubtype subtypes = 4;
    public static final int SUBTYPES_FIELD_NUMBER = 4;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> subtypes_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> getSubtypesList() {
      return subtypes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder> 
        getSubtypesOrBuilderList() {
      return subtypes_;
    }
    public int getSubtypesCount() {
      return subtypes_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype getSubtypes(int index) {
      return subtypes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder getSubtypesOrBuilder(
        int index) {
      return subtypes_.get(index);
    }
    
    private void initFields() {
      subtypes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getSubtypesCount(); i++) {
        if (!getSubtypes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < subtypes_.size(); i++) {
        output.writeMessage(4, subtypes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < subtypes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, subtypes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndSubtypesTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndSubtypesTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndSubtypesTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndSubtypesTable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndSubtypesTable_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubtypesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (subtypesBuilder_ == null) {
          subtypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subtypesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable build() {
        net.osmand.binary.OsmandOdb.OsmAndSubtypesTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndSubtypesTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndSubtypesTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndSubtypesTable buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndSubtypesTable result = new net.osmand.binary.OsmandOdb.OsmAndSubtypesTable(this);
        int from_bitField0_ = bitField0_;
        if (subtypesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            subtypes_ = java.util.Collections.unmodifiableList(subtypes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subtypes_ = subtypes_;
        } else {
          result.subtypes_ = subtypesBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndSubtypesTable) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndSubtypesTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndSubtypesTable other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.getDefaultInstance()) return this;
        if (subtypesBuilder_ == null) {
          if (!other.subtypes_.isEmpty()) {
            if (subtypes_.isEmpty()) {
              subtypes_ = other.subtypes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubtypesIsMutable();
              subtypes_.addAll(other.subtypes_);
            }
            onChanged();
          }
        } else {
          if (!other.subtypes_.isEmpty()) {
            if (subtypesBuilder_.isEmpty()) {
              subtypesBuilder_.dispose();
              subtypesBuilder_ = null;
              subtypes_ = other.subtypes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subtypesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubtypesFieldBuilder() : null;
            } else {
              subtypesBuilder_.addAllMessages(other.subtypes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getSubtypesCount(); i++) {
          if (!getSubtypes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtypes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .OsmAnd.OBF.OsmAndPoiSubtype subtypes = 4;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> subtypes_ =
        java.util.Collections.emptyList();
      private void ensureSubtypesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          subtypes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype>(subtypes_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiSubtype, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder> subtypesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> getSubtypesList() {
        if (subtypesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subtypes_);
        } else {
          return subtypesBuilder_.getMessageList();
        }
      }
      public int getSubtypesCount() {
        if (subtypesBuilder_ == null) {
          return subtypes_.size();
        } else {
          return subtypesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype getSubtypes(int index) {
        if (subtypesBuilder_ == null) {
          return subtypes_.get(index);
        } else {
          return subtypesBuilder_.getMessage(index);
        }
      }
      public Builder setSubtypes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype value) {
        if (subtypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtypesIsMutable();
          subtypes_.set(index, value);
          onChanged();
        } else {
          subtypesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubtypes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder builderForValue) {
        if (subtypesBuilder_ == null) {
          ensureSubtypesIsMutable();
          subtypes_.set(index, builderForValue.build());
          onChanged();
        } else {
          subtypesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubtypes(net.osmand.binary.OsmandOdb.OsmAndPoiSubtype value) {
        if (subtypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtypesIsMutable();
          subtypes_.add(value);
          onChanged();
        } else {
          subtypesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubtypes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype value) {
        if (subtypesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtypesIsMutable();
          subtypes_.add(index, value);
          onChanged();
        } else {
          subtypesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubtypes(
          net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder builderForValue) {
        if (subtypesBuilder_ == null) {
          ensureSubtypesIsMutable();
          subtypes_.add(builderForValue.build());
          onChanged();
        } else {
          subtypesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubtypes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder builderForValue) {
        if (subtypesBuilder_ == null) {
          ensureSubtypesIsMutable();
          subtypes_.add(index, builderForValue.build());
          onChanged();
        } else {
          subtypesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubtypes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiSubtype> values) {
        if (subtypesBuilder_ == null) {
          ensureSubtypesIsMutable();
          super.addAll(values, subtypes_);
          onChanged();
        } else {
          subtypesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubtypes() {
        if (subtypesBuilder_ == null) {
          subtypes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subtypesBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubtypes(int index) {
        if (subtypesBuilder_ == null) {
          ensureSubtypesIsMutable();
          subtypes_.remove(index);
          onChanged();
        } else {
          subtypesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder getSubtypesBuilder(
          int index) {
        return getSubtypesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder getSubtypesOrBuilder(
          int index) {
        if (subtypesBuilder_ == null) {
          return subtypes_.get(index);  } else {
          return subtypesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder> 
           getSubtypesOrBuilderList() {
        if (subtypesBuilder_ != null) {
          return subtypesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subtypes_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder addSubtypesBuilder() {
        return getSubtypesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder addSubtypesBuilder(
          int index) {
        return getSubtypesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder> 
           getSubtypesBuilderList() {
        return getSubtypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiSubtype, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder> 
          getSubtypesFieldBuilder() {
        if (subtypesBuilder_ == null) {
          subtypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiSubtype, net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder>(
                  subtypes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          subtypes_ = null;
        }
        return subtypesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndSubtypesTable)
    }
    
    static {
      defaultInstance = new OsmAndSubtypesTable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndSubtypesTable)
  }
  
  public interface OsmAndPoiSubtypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // optional string tagname = 2;
    boolean hasTagname();
    String getTagname();
    
    // required bool isText = 3;
    boolean hasIsText();
    boolean getIsText();
    
    // optional uint32 frequency = 5;
    boolean hasFrequency();
    int getFrequency();
    
    // optional uint32 subtypeValuesSize = 6;
    boolean hasSubtypeValuesSize();
    int getSubtypeValuesSize();
    
    // repeated string subtypeValue = 8;
    java.util.List<String> getSubtypeValueList();
    int getSubtypeValueCount();
    String getSubtypeValue(int index);
  }
  public static final class OsmAndPoiSubtype extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiSubtypeOrBuilder {
    // Use OsmAndPoiSubtype.newBuilder() to construct.
    private OsmAndPoiSubtype(Builder builder) {
      super(builder);
    }
    private OsmAndPoiSubtype(boolean noInit) {}
    
    private static final OsmAndPoiSubtype defaultInstance;
    public static OsmAndPoiSubtype getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiSubtype getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiSubtype_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiSubtype_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string tagname = 2;
    public static final int TAGNAME_FIELD_NUMBER = 2;
    private java.lang.Object tagname_;
    public boolean hasTagname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTagname() {
      java.lang.Object ref = tagname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tagname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTagnameBytes() {
      java.lang.Object ref = tagname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tagname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bool isText = 3;
    public static final int ISTEXT_FIELD_NUMBER = 3;
    private boolean isText_;
    public boolean hasIsText() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getIsText() {
      return isText_;
    }
    
    // optional uint32 frequency = 5;
    public static final int FREQUENCY_FIELD_NUMBER = 5;
    private int frequency_;
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getFrequency() {
      return frequency_;
    }
    
    // optional uint32 subtypeValuesSize = 6;
    public static final int SUBTYPEVALUESSIZE_FIELD_NUMBER = 6;
    private int subtypeValuesSize_;
    public boolean hasSubtypeValuesSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSubtypeValuesSize() {
      return subtypeValuesSize_;
    }
    
    // repeated string subtypeValue = 8;
    public static final int SUBTYPEVALUE_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList subtypeValue_;
    public java.util.List<String>
        getSubtypeValueList() {
      return subtypeValue_;
    }
    public int getSubtypeValueCount() {
      return subtypeValue_.size();
    }
    public String getSubtypeValue(int index) {
      return subtypeValue_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      tagname_ = "";
      isText_ = false;
      frequency_ = 0;
      subtypeValuesSize_ = 0;
      subtypeValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTagnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isText_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, subtypeValuesSize_);
      }
      for (int i = 0; i < subtypeValue_.size(); i++) {
        output.writeBytes(8, subtypeValue_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTagnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isText_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, subtypeValuesSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subtypeValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(subtypeValue_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSubtypeValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiSubtype parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiSubtype prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiSubtypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiSubtype_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiSubtype_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tagname_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        isText_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        subtypeValuesSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        subtypeValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiSubtype result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiSubtype buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiSubtype result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiSubtype buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiSubtype result = new net.osmand.binary.OsmandOdb.OsmAndPoiSubtype(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tagname_ = tagname_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isText_ = isText_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.subtypeValuesSize_ = subtypeValuesSize_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          subtypeValue_ = new com.google.protobuf.UnmodifiableLazyStringList(
              subtypeValue_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.subtypeValue_ = subtypeValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiSubtype) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiSubtype)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiSubtype other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasTagname()) {
          setTagname(other.getTagname());
        }
        if (other.hasIsText()) {
          setIsText(other.getIsText());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSubtypeValuesSize()) {
          setSubtypeValuesSize(other.getSubtypeValuesSize());
        }
        if (!other.subtypeValue_.isEmpty()) {
          if (subtypeValue_.isEmpty()) {
            subtypeValue_ = other.subtypeValue_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSubtypeValueIsMutable();
            subtypeValue_.addAll(other.subtypeValue_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasIsText()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tagname_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isText_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              frequency_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              subtypeValuesSize_ = input.readUInt32();
              break;
            }
            case 66: {
              ensureSubtypeValueIsMutable();
              subtypeValue_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string tagname = 2;
      private java.lang.Object tagname_ = "";
      public boolean hasTagname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTagname() {
        java.lang.Object ref = tagname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tagname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTagname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tagname_ = value;
        onChanged();
        return this;
      }
      public Builder clearTagname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tagname_ = getDefaultInstance().getTagname();
        onChanged();
        return this;
      }
      void setTagname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        tagname_ = value;
        onChanged();
      }
      
      // required bool isText = 3;
      private boolean isText_ ;
      public boolean hasIsText() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsText() {
        return isText_;
      }
      public Builder setIsText(boolean value) {
        bitField0_ |= 0x00000004;
        isText_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsText() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isText_ = false;
        onChanged();
        return this;
      }
      
      // optional uint32 frequency = 5;
      private int frequency_ ;
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getFrequency() {
        return frequency_;
      }
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000008;
        frequency_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frequency_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 subtypeValuesSize = 6;
      private int subtypeValuesSize_ ;
      public boolean hasSubtypeValuesSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSubtypeValuesSize() {
        return subtypeValuesSize_;
      }
      public Builder setSubtypeValuesSize(int value) {
        bitField0_ |= 0x00000010;
        subtypeValuesSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubtypeValuesSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        subtypeValuesSize_ = 0;
        onChanged();
        return this;
      }
      
      // repeated string subtypeValue = 8;
      private com.google.protobuf.LazyStringList subtypeValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSubtypeValueIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          subtypeValue_ = new com.google.protobuf.LazyStringArrayList(subtypeValue_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<String>
          getSubtypeValueList() {
        return java.util.Collections.unmodifiableList(subtypeValue_);
      }
      public int getSubtypeValueCount() {
        return subtypeValue_.size();
      }
      public String getSubtypeValue(int index) {
        return subtypeValue_.get(index);
      }
      public Builder setSubtypeValue(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubtypeValueIsMutable();
        subtypeValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSubtypeValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubtypeValueIsMutable();
        subtypeValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSubtypeValue(
          java.lang.Iterable<String> values) {
        ensureSubtypeValueIsMutable();
        super.addAll(values, subtypeValue_);
        onChanged();
        return this;
      }
      public Builder clearSubtypeValue() {
        subtypeValue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      void addSubtypeValue(com.google.protobuf.ByteString value) {
        ensureSubtypeValueIsMutable();
        subtypeValue_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiSubtype)
    }
    
    static {
      defaultInstance = new OsmAndPoiSubtype(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiSubtype)
  }
  
  public interface OsmAndPoiBoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 zoom = 1;
    boolean hasZoom();
    int getZoom();
    
    // required sint32 left = 2;
    boolean hasLeft();
    int getLeft();
    
    // required sint32 top = 3;
    boolean hasTop();
    int getTop();
    
    // optional .OsmAnd.OBF.OsmAndPoiCategories categories = 4;
    boolean hasCategories();
    net.osmand.binary.OsmandOdb.OsmAndPoiCategories getCategories();
    net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder getCategoriesOrBuilder();
    
    // repeated .OsmAnd.OBF.OsmAndPoiBox subBoxes = 10;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> 
        getSubBoxesList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBox getSubBoxes(int index);
    int getSubBoxesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
        getSubBoxesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getSubBoxesOrBuilder(
        int index);
    
    // optional fixed32 shiftToData = 14;
    boolean hasShiftToData();
    int getShiftToData();
  }
  public static final class OsmAndPoiBox extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiBoxOrBuilder {
    // Use OsmAndPoiBox.newBuilder() to construct.
    private OsmAndPoiBox(Builder builder) {
      super(builder);
    }
    private OsmAndPoiBox(boolean noInit) {}
    
    private static final OsmAndPoiBox defaultInstance;
    public static OsmAndPoiBox getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiBox getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBox_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBox_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 zoom = 1;
    public static final int ZOOM_FIELD_NUMBER = 1;
    private int zoom_;
    public boolean hasZoom() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getZoom() {
      return zoom_;
    }
    
    // required sint32 left = 2;
    public static final int LEFT_FIELD_NUMBER = 2;
    private int left_;
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLeft() {
      return left_;
    }
    
    // required sint32 top = 3;
    public static final int TOP_FIELD_NUMBER = 3;
    private int top_;
    public boolean hasTop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTop() {
      return top_;
    }
    
    // optional .OsmAnd.OBF.OsmAndPoiCategories categories = 4;
    public static final int CATEGORIES_FIELD_NUMBER = 4;
    private net.osmand.binary.OsmandOdb.OsmAndPoiCategories categories_;
    public boolean hasCategories() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiCategories getCategories() {
      return categories_;
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder getCategoriesOrBuilder() {
      return categories_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiBox subBoxes = 10;
    public static final int SUBBOXES_FIELD_NUMBER = 10;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> subBoxes_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> getSubBoxesList() {
      return subBoxes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
        getSubBoxesOrBuilderList() {
      return subBoxes_;
    }
    public int getSubBoxesCount() {
      return subBoxes_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBox getSubBoxes(int index) {
      return subBoxes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getSubBoxesOrBuilder(
        int index) {
      return subBoxes_.get(index);
    }
    
    // optional fixed32 shiftToData = 14;
    public static final int SHIFTTODATA_FIELD_NUMBER = 14;
    private int shiftToData_;
    public boolean hasShiftToData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getShiftToData() {
      return shiftToData_;
    }
    
    private void initFields() {
      zoom_ = 0;
      left_ = 0;
      top_ = 0;
      categories_ = net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance();
      subBoxes_ = java.util.Collections.emptyList();
      shiftToData_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasZoom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubBoxesCount(); i++) {
        if (!getSubBoxes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, left_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, categories_);
      }
      for (int i = 0; i < subBoxes_.size(); i++) {
        output.writeMessage(10, subBoxes_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(14, shiftToData_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, left_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, top_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, categories_);
      }
      for (int i = 0; i < subBoxes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, subBoxes_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, shiftToData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBox_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBox_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCategoriesFieldBuilder();
          getSubBoxesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        zoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (categoriesBuilder_ == null) {
          categories_ = net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance();
        } else {
          categoriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (subBoxesBuilder_ == null) {
          subBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          subBoxesBuilder_.clear();
        }
        shiftToData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiBox buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBox result = new net.osmand.binary.OsmandOdb.OsmAndPoiBox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zoom_ = zoom_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (categoriesBuilder_ == null) {
          result.categories_ = categories_;
        } else {
          result.categories_ = categoriesBuilder_.build();
        }
        if (subBoxesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            subBoxes_ = java.util.Collections.unmodifiableList(subBoxes_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.subBoxes_ = subBoxes_;
        } else {
          result.subBoxes_ = subBoxesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.shiftToData_ = shiftToData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiBox) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiBox other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasCategories()) {
          mergeCategories(other.getCategories());
        }
        if (subBoxesBuilder_ == null) {
          if (!other.subBoxes_.isEmpty()) {
            if (subBoxes_.isEmpty()) {
              subBoxes_ = other.subBoxes_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSubBoxesIsMutable();
              subBoxes_.addAll(other.subBoxes_);
            }
            onChanged();
          }
        } else {
          if (!other.subBoxes_.isEmpty()) {
            if (subBoxesBuilder_.isEmpty()) {
              subBoxesBuilder_.dispose();
              subBoxesBuilder_ = null;
              subBoxes_ = other.subBoxes_;
              bitField0_ = (bitField0_ & ~0x00000010);
              subBoxesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubBoxesFieldBuilder() : null;
            } else {
              subBoxesBuilder_.addAllMessages(other.subBoxes_);
            }
          }
        }
        if (other.hasShiftToData()) {
          setShiftToData(other.getShiftToData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasZoom()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!hasTop()) {
          
          return false;
        }
        for (int i = 0; i < getSubBoxesCount(); i++) {
          if (!getSubBoxes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zoom_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              left_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              top_ = input.readSInt32();
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiCategories.newBuilder();
              if (hasCategories()) {
                subBuilder.mergeFrom(getCategories());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCategories(subBuilder.buildPartial());
              break;
            }
            case 82: {
              net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubBoxes(subBuilder.buildPartial());
              break;
            }
            case 117: {
              bitField0_ |= 0x00000020;
              shiftToData_ = input.readFixed32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 zoom = 1;
      private int zoom_ ;
      public boolean hasZoom() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getZoom() {
        return zoom_;
      }
      public Builder setZoom(int value) {
        bitField0_ |= 0x00000001;
        zoom_ = value;
        onChanged();
        return this;
      }
      public Builder clearZoom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zoom_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 left = 2;
      private int left_ ;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLeft() {
        return left_;
      }
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000002;
        left_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000002);
        left_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 top = 3;
      private int top_ ;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTop() {
        return top_;
      }
      public Builder setTop(int value) {
        bitField0_ |= 0x00000004;
        top_ = value;
        onChanged();
        return this;
      }
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        top_ = 0;
        onChanged();
        return this;
      }
      
      // optional .OsmAnd.OBF.OsmAndPoiCategories categories = 4;
      private net.osmand.binary.OsmandOdb.OsmAndPoiCategories categories_ = net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiCategories, net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder> categoriesBuilder_;
      public boolean hasCategories() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategories getCategories() {
        if (categoriesBuilder_ == null) {
          return categories_;
        } else {
          return categoriesBuilder_.getMessage();
        }
      }
      public Builder setCategories(net.osmand.binary.OsmandOdb.OsmAndPoiCategories value) {
        if (categoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          categories_ = value;
          onChanged();
        } else {
          categoriesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setCategories(
          net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder builderForValue) {
        if (categoriesBuilder_ == null) {
          categories_ = builderForValue.build();
          onChanged();
        } else {
          categoriesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeCategories(net.osmand.binary.OsmandOdb.OsmAndPoiCategories value) {
        if (categoriesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              categories_ != net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance()) {
            categories_ =
              net.osmand.binary.OsmandOdb.OsmAndPoiCategories.newBuilder(categories_).mergeFrom(value).buildPartial();
          } else {
            categories_ = value;
          }
          onChanged();
        } else {
          categoriesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearCategories() {
        if (categoriesBuilder_ == null) {
          categories_ = net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance();
          onChanged();
        } else {
          categoriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder getCategoriesBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getCategoriesFieldBuilder().getBuilder();
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder getCategoriesOrBuilder() {
        if (categoriesBuilder_ != null) {
          return categoriesBuilder_.getMessageOrBuilder();
        } else {
          return categories_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiCategories, net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder> 
          getCategoriesFieldBuilder() {
        if (categoriesBuilder_ == null) {
          categoriesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiCategories, net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder>(
                  categories_,
                  getParentForChildren(),
                  isClean());
          categories_ = null;
        }
        return categoriesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiBox subBoxes = 10;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> subBoxes_ =
        java.util.Collections.emptyList();
      private void ensureSubBoxesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          subBoxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBox>(subBoxes_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> subBoxesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox> getSubBoxesList() {
        if (subBoxesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subBoxes_);
        } else {
          return subBoxesBuilder_.getMessageList();
        }
      }
      public int getSubBoxesCount() {
        if (subBoxesBuilder_ == null) {
          return subBoxes_.size();
        } else {
          return subBoxesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox getSubBoxes(int index) {
        if (subBoxesBuilder_ == null) {
          return subBoxes_.get(index);
        } else {
          return subBoxesBuilder_.getMessage(index);
        }
      }
      public Builder setSubBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (subBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubBoxesIsMutable();
          subBoxes_.set(index, value);
          onChanged();
        } else {
          subBoxesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (subBoxesBuilder_ == null) {
          ensureSubBoxesIsMutable();
          subBoxes_.set(index, builderForValue.build());
          onChanged();
        } else {
          subBoxesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubBoxes(net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (subBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubBoxesIsMutable();
          subBoxes_.add(value);
          onChanged();
        } else {
          subBoxesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox value) {
        if (subBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubBoxesIsMutable();
          subBoxes_.add(index, value);
          onChanged();
        } else {
          subBoxesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubBoxes(
          net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (subBoxesBuilder_ == null) {
          ensureSubBoxesIsMutable();
          subBoxes_.add(builderForValue.build());
          onChanged();
        } else {
          subBoxesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder builderForValue) {
        if (subBoxesBuilder_ == null) {
          ensureSubBoxesIsMutable();
          subBoxes_.add(index, builderForValue.build());
          onChanged();
        } else {
          subBoxesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubBoxes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBox> values) {
        if (subBoxesBuilder_ == null) {
          ensureSubBoxesIsMutable();
          super.addAll(values, subBoxes_);
          onChanged();
        } else {
          subBoxesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubBoxes() {
        if (subBoxesBuilder_ == null) {
          subBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          subBoxesBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubBoxes(int index) {
        if (subBoxesBuilder_ == null) {
          ensureSubBoxesIsMutable();
          subBoxes_.remove(index);
          onChanged();
        } else {
          subBoxesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder getSubBoxesBuilder(
          int index) {
        return getSubBoxesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder getSubBoxesOrBuilder(
          int index) {
        if (subBoxesBuilder_ == null) {
          return subBoxes_.get(index);  } else {
          return subBoxesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
           getSubBoxesOrBuilderList() {
        if (subBoxesBuilder_ != null) {
          return subBoxesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subBoxes_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder addSubBoxesBuilder() {
        return getSubBoxesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder addSubBoxesBuilder(
          int index) {
        return getSubBoxesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiBox.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder> 
           getSubBoxesBuilderList() {
        return getSubBoxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder> 
          getSubBoxesFieldBuilder() {
        if (subBoxesBuilder_ == null) {
          subBoxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiBox, net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxOrBuilder>(
                  subBoxes_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          subBoxes_ = null;
        }
        return subBoxesBuilder_;
      }
      
      // optional fixed32 shiftToData = 14;
      private int shiftToData_ ;
      public boolean hasShiftToData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getShiftToData() {
        return shiftToData_;
      }
      public Builder setShiftToData(int value) {
        bitField0_ |= 0x00000020;
        shiftToData_ = value;
        onChanged();
        return this;
      }
      public Builder clearShiftToData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        shiftToData_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiBox)
    }
    
    static {
      defaultInstance = new OsmAndPoiBox(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiBox)
  }
  
  public interface OsmAndPoiCategoriesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated uint32 categories = 3;
    java.util.List<java.lang.Integer> getCategoriesList();
    int getCategoriesCount();
    int getCategories(int index);
    
    // repeated uint32 subcategories = 5;
    java.util.List<java.lang.Integer> getSubcategoriesList();
    int getSubcategoriesCount();
    int getSubcategories(int index);
  }
  public static final class OsmAndPoiCategories extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiCategoriesOrBuilder {
    // Use OsmAndPoiCategories.newBuilder() to construct.
    private OsmAndPoiCategories(Builder builder) {
      super(builder);
    }
    private OsmAndPoiCategories(boolean noInit) {}
    
    private static final OsmAndPoiCategories defaultInstance;
    public static OsmAndPoiCategories getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiCategories getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiCategories_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiCategories_fieldAccessorTable;
    }
    
    // repeated uint32 categories = 3;
    public static final int CATEGORIES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> categories_;
    public java.util.List<java.lang.Integer>
        getCategoriesList() {
      return categories_;
    }
    public int getCategoriesCount() {
      return categories_.size();
    }
    public int getCategories(int index) {
      return categories_.get(index);
    }
    
    // repeated uint32 subcategories = 5;
    public static final int SUBCATEGORIES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> subcategories_;
    public java.util.List<java.lang.Integer>
        getSubcategoriesList() {
      return subcategories_;
    }
    public int getSubcategoriesCount() {
      return subcategories_.size();
    }
    public int getSubcategories(int index) {
      return subcategories_.get(index);
    }
    
    private void initFields() {
      categories_ = java.util.Collections.emptyList();;
      subcategories_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < categories_.size(); i++) {
        output.writeUInt32(3, categories_.get(i));
      }
      for (int i = 0; i < subcategories_.size(); i++) {
        output.writeUInt32(5, subcategories_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < categories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(categories_.get(i));
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subcategories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(subcategories_.get(i));
        }
        size += dataSize;
        size += 1 * getSubcategoriesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiCategories parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiCategories prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiCategoriesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiCategories_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiCategories_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiCategories.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        categories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        subcategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategories getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategories build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiCategories result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiCategories buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiCategories result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiCategories buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiCategories result = new net.osmand.binary.OsmandOdb.OsmAndPoiCategories(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          categories_ = java.util.Collections.unmodifiableList(categories_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.categories_ = categories_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          subcategories_ = java.util.Collections.unmodifiableList(subcategories_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.subcategories_ = subcategories_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiCategories) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiCategories)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiCategories other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiCategories.getDefaultInstance()) return this;
        if (!other.categories_.isEmpty()) {
          if (categories_.isEmpty()) {
            categories_ = other.categories_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCategoriesIsMutable();
            categories_.addAll(other.categories_);
          }
          onChanged();
        }
        if (!other.subcategories_.isEmpty()) {
          if (subcategories_.isEmpty()) {
            subcategories_ = other.subcategories_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSubcategoriesIsMutable();
            subcategories_.addAll(other.subcategories_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 24: {
              ensureCategoriesIsMutable();
              categories_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureSubcategoriesIsMutable();
              subcategories_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSubcategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated uint32 categories = 3;
      private java.util.List<java.lang.Integer> categories_ = java.util.Collections.emptyList();;
      private void ensureCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          categories_ = new java.util.ArrayList<java.lang.Integer>(categories_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Integer>
          getCategoriesList() {
        return java.util.Collections.unmodifiableList(categories_);
      }
      public int getCategoriesCount() {
        return categories_.size();
      }
      public int getCategories(int index) {
        return categories_.get(index);
      }
      public Builder setCategories(
          int index, int value) {
        ensureCategoriesIsMutable();
        categories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addCategories(int value) {
        ensureCategoriesIsMutable();
        categories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllCategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCategoriesIsMutable();
        super.addAll(values, categories_);
        onChanged();
        return this;
      }
      public Builder clearCategories() {
        categories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated uint32 subcategories = 5;
      private java.util.List<java.lang.Integer> subcategories_ = java.util.Collections.emptyList();;
      private void ensureSubcategoriesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          subcategories_ = new java.util.ArrayList<java.lang.Integer>(subcategories_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Integer>
          getSubcategoriesList() {
        return java.util.Collections.unmodifiableList(subcategories_);
      }
      public int getSubcategoriesCount() {
        return subcategories_.size();
      }
      public int getSubcategories(int index) {
        return subcategories_.get(index);
      }
      public Builder setSubcategories(
          int index, int value) {
        ensureSubcategoriesIsMutable();
        subcategories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSubcategories(int value) {
        ensureSubcategoriesIsMutable();
        subcategories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSubcategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSubcategoriesIsMutable();
        super.addAll(values, subcategories_);
        onChanged();
        return this;
      }
      public Builder clearSubcategories() {
        subcategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiCategories)
    }
    
    static {
      defaultInstance = new OsmAndPoiCategories(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiCategories)
  }
  
  public interface OsmAndPoiBoxDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 zoom = 1;
    boolean hasZoom();
    int getZoom();
    
    // optional uint32 x = 2;
    boolean hasX();
    int getX();
    
    // optional uint32 y = 3;
    boolean hasY();
    int getY();
    
    // repeated .OsmAnd.OBF.OsmAndPoiBoxDataAtom poiData = 5;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> 
        getPoiDataList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom getPoiData(int index);
    int getPoiDataCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder> 
        getPoiDataOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder getPoiDataOrBuilder(
        int index);
  }
  public static final class OsmAndPoiBoxData extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiBoxDataOrBuilder {
    // Use OsmAndPoiBoxData.newBuilder() to construct.
    private OsmAndPoiBoxData(Builder builder) {
      super(builder);
    }
    private OsmAndPoiBoxData(boolean noInit) {}
    
    private static final OsmAndPoiBoxData defaultInstance;
    public static OsmAndPoiBoxData getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiBoxData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 zoom = 1;
    public static final int ZOOM_FIELD_NUMBER = 1;
    private int zoom_;
    public boolean hasZoom() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getZoom() {
      return zoom_;
    }
    
    // optional uint32 x = 2;
    public static final int X_FIELD_NUMBER = 2;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getX() {
      return x_;
    }
    
    // optional uint32 y = 3;
    public static final int Y_FIELD_NUMBER = 3;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getY() {
      return y_;
    }
    
    // repeated .OsmAnd.OBF.OsmAndPoiBoxDataAtom poiData = 5;
    public static final int POIDATA_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> poiData_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> getPoiDataList() {
      return poiData_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder> 
        getPoiDataOrBuilderList() {
      return poiData_;
    }
    public int getPoiDataCount() {
      return poiData_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom getPoiData(int index) {
      return poiData_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder getPoiDataOrBuilder(
        int index) {
      return poiData_.get(index);
    }
    
    private void initFields() {
      zoom_ = 0;
      x_ = 0;
      y_ = 0;
      poiData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getPoiDataCount(); i++) {
        if (!getPoiData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, y_);
      }
      for (int i = 0; i < poiData_.size(); i++) {
        output.writeMessage(5, poiData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, zoom_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, x_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, y_);
      }
      for (int i = 0; i < poiData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, poiData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiBoxData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxData_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPoiDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        zoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (poiDataBuilder_ == null) {
          poiData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          poiDataBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiBoxData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxData buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxData result = new net.osmand.binary.OsmandOdb.OsmAndPoiBoxData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zoom_ = zoom_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.y_ = y_;
        if (poiDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            poiData_ = java.util.Collections.unmodifiableList(poiData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.poiData_ = poiData_;
        } else {
          result.poiData_ = poiDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiBoxData) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiBoxData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiBoxData other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.getDefaultInstance()) return this;
        if (other.hasZoom()) {
          setZoom(other.getZoom());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (poiDataBuilder_ == null) {
          if (!other.poiData_.isEmpty()) {
            if (poiData_.isEmpty()) {
              poiData_ = other.poiData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePoiDataIsMutable();
              poiData_.addAll(other.poiData_);
            }
            onChanged();
          }
        } else {
          if (!other.poiData_.isEmpty()) {
            if (poiDataBuilder_.isEmpty()) {
              poiDataBuilder_.dispose();
              poiDataBuilder_ = null;
              poiData_ = other.poiData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              poiDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPoiDataFieldBuilder() : null;
            } else {
              poiDataBuilder_.addAllMessages(other.poiData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getPoiDataCount(); i++) {
          if (!getPoiData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zoom_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              x_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              y_ = input.readUInt32();
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoiData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 zoom = 1;
      private int zoom_ ;
      public boolean hasZoom() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getZoom() {
        return zoom_;
      }
      public Builder setZoom(int value) {
        bitField0_ |= 0x00000001;
        zoom_ = value;
        onChanged();
        return this;
      }
      public Builder clearZoom() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zoom_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 x = 2;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000002;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 y = 3;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000004;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .OsmAnd.OBF.OsmAndPoiBoxDataAtom poiData = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> poiData_ =
        java.util.Collections.emptyList();
      private void ensurePoiDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          poiData_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom>(poiData_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder> poiDataBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> getPoiDataList() {
        if (poiDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(poiData_);
        } else {
          return poiDataBuilder_.getMessageList();
        }
      }
      public int getPoiDataCount() {
        if (poiDataBuilder_ == null) {
          return poiData_.size();
        } else {
          return poiDataBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom getPoiData(int index) {
        if (poiDataBuilder_ == null) {
          return poiData_.get(index);
        } else {
          return poiDataBuilder_.getMessage(index);
        }
      }
      public Builder setPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.set(index, value);
          onChanged();
        } else {
          poiDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.set(index, builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPoiData(net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.add(value);
          onChanged();
        } else {
          poiDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom value) {
        if (poiDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePoiDataIsMutable();
          poiData_.add(index, value);
          onChanged();
        } else {
          poiDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPoiData(
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.add(builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPoiData(
          int index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder builderForValue) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.add(index, builderForValue.build());
          onChanged();
        } else {
          poiDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPoiData(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom> values) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          super.addAll(values, poiData_);
          onChanged();
        } else {
          poiDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPoiData() {
        if (poiDataBuilder_ == null) {
          poiData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          poiDataBuilder_.clear();
        }
        return this;
      }
      public Builder removePoiData(int index) {
        if (poiDataBuilder_ == null) {
          ensurePoiDataIsMutable();
          poiData_.remove(index);
          onChanged();
        } else {
          poiDataBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder getPoiDataBuilder(
          int index) {
        return getPoiDataFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder getPoiDataOrBuilder(
          int index) {
        if (poiDataBuilder_ == null) {
          return poiData_.get(index);  } else {
          return poiDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder> 
           getPoiDataOrBuilderList() {
        if (poiDataBuilder_ != null) {
          return poiDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(poiData_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder addPoiDataBuilder() {
        return getPoiDataFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder addPoiDataBuilder(
          int index) {
        return getPoiDataFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder> 
           getPoiDataBuilderList() {
        return getPoiDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder> 
          getPoiDataFieldBuilder() {
        if (poiDataBuilder_ == null) {
          poiDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder, net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder>(
                  poiData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          poiData_ = null;
        }
        return poiDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiBoxData)
    }
    
    static {
      defaultInstance = new OsmAndPoiBoxData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiBoxData)
  }
  
  public interface OsmAndPoiBoxDataAtomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required sint32 dx = 2;
    boolean hasDx();
    int getDx();
    
    // required sint32 dy = 3;
    boolean hasDy();
    int getDy();
    
    // repeated uint32 categories = 4;
    java.util.List<java.lang.Integer> getCategoriesList();
    int getCategoriesCount();
    int getCategories(int index);
    
    // repeated uint32 subcategories = 5;
    java.util.List<java.lang.Integer> getSubcategoriesList();
    int getSubcategoriesCount();
    int getSubcategories(int index);
    
    // optional string name = 6;
    boolean hasName();
    String getName();
    
    // optional string nameEn = 7;
    boolean hasNameEn();
    String getNameEn();
    
    // optional uint64 id = 8;
    boolean hasId();
    long getId();
    
    // optional string openingHours = 10;
    boolean hasOpeningHours();
    String getOpeningHours();
    
    // optional string site = 11;
    boolean hasSite();
    String getSite();
    
    // optional string phone = 12;
    boolean hasPhone();
    String getPhone();
    
    // optional string note = 13;
    boolean hasNote();
    String getNote();
    
    // repeated uint32 textCategories = 14;
    java.util.List<java.lang.Integer> getTextCategoriesList();
    int getTextCategoriesCount();
    int getTextCategories(int index);
    
    // repeated string textValues = 15;
    java.util.List<String> getTextValuesList();
    int getTextValuesCount();
    String getTextValues(int index);
  }
  public static final class OsmAndPoiBoxDataAtom extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndPoiBoxDataAtomOrBuilder {
    // Use OsmAndPoiBoxDataAtom.newBuilder() to construct.
    private OsmAndPoiBoxDataAtom(Builder builder) {
      super(builder);
    }
    private OsmAndPoiBoxDataAtom(boolean noInit) {}
    
    private static final OsmAndPoiBoxDataAtom defaultInstance;
    public static OsmAndPoiBoxDataAtom getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndPoiBoxDataAtom getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required sint32 dx = 2;
    public static final int DX_FIELD_NUMBER = 2;
    private int dx_;
    public boolean hasDx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getDx() {
      return dx_;
    }
    
    // required sint32 dy = 3;
    public static final int DY_FIELD_NUMBER = 3;
    private int dy_;
    public boolean hasDy() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDy() {
      return dy_;
    }
    
    // repeated uint32 categories = 4;
    public static final int CATEGORIES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> categories_;
    public java.util.List<java.lang.Integer>
        getCategoriesList() {
      return categories_;
    }
    public int getCategoriesCount() {
      return categories_.size();
    }
    public int getCategories(int index) {
      return categories_.get(index);
    }
    
    // repeated uint32 subcategories = 5;
    public static final int SUBCATEGORIES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> subcategories_;
    public java.util.List<java.lang.Integer>
        getSubcategoriesList() {
      return subcategories_;
    }
    public int getSubcategoriesCount() {
      return subcategories_.size();
    }
    public int getSubcategories(int index) {
      return subcategories_.get(index);
    }
    
    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string nameEn = 7;
    public static final int NAMEEN_FIELD_NUMBER = 7;
    private java.lang.Object nameEn_;
    public boolean hasNameEn() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getNameEn() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nameEn_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameEnBytes() {
      java.lang.Object ref = nameEn_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nameEn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 id = 8;
    public static final int ID_FIELD_NUMBER = 8;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getId() {
      return id_;
    }
    
    // optional string openingHours = 10;
    public static final int OPENINGHOURS_FIELD_NUMBER = 10;
    private java.lang.Object openingHours_;
    public boolean hasOpeningHours() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getOpeningHours() {
      java.lang.Object ref = openingHours_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          openingHours_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOpeningHoursBytes() {
      java.lang.Object ref = openingHours_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        openingHours_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string site = 11;
    public static final int SITE_FIELD_NUMBER = 11;
    private java.lang.Object site_;
    public boolean hasSite() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getSite() {
      java.lang.Object ref = site_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          site_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSiteBytes() {
      java.lang.Object ref = site_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        site_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string phone = 12;
    public static final int PHONE_FIELD_NUMBER = 12;
    private java.lang.Object phone_;
    public boolean hasPhone() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getPhone() {
      java.lang.Object ref = phone_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          phone_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPhoneBytes() {
      java.lang.Object ref = phone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        phone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string note = 13;
    public static final int NOTE_FIELD_NUMBER = 13;
    private java.lang.Object note_;
    public boolean hasNote() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getNote() {
      java.lang.Object ref = note_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          note_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNoteBytes() {
      java.lang.Object ref = note_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        note_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated uint32 textCategories = 14;
    public static final int TEXTCATEGORIES_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> textCategories_;
    public java.util.List<java.lang.Integer>
        getTextCategoriesList() {
      return textCategories_;
    }
    public int getTextCategoriesCount() {
      return textCategories_.size();
    }
    public int getTextCategories(int index) {
      return textCategories_.get(index);
    }
    
    // repeated string textValues = 15;
    public static final int TEXTVALUES_FIELD_NUMBER = 15;
    private com.google.protobuf.LazyStringList textValues_;
    public java.util.List<String>
        getTextValuesList() {
      return textValues_;
    }
    public int getTextValuesCount() {
      return textValues_.size();
    }
    public String getTextValues(int index) {
      return textValues_.get(index);
    }
    
    private void initFields() {
      dx_ = 0;
      dy_ = 0;
      categories_ = java.util.Collections.emptyList();;
      subcategories_ = java.util.Collections.emptyList();;
      name_ = "";
      nameEn_ = "";
      id_ = 0L;
      openingHours_ = "";
      site_ = "";
      phone_ = "";
      note_ = "";
      textCategories_ = java.util.Collections.emptyList();;
      textValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasDx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(2, dx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(3, dy_);
      }
      for (int i = 0; i < categories_.size(); i++) {
        output.writeUInt32(4, categories_.get(i));
      }
      for (int i = 0; i < subcategories_.size(); i++) {
        output.writeUInt32(5, subcategories_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(7, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(8, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(10, getOpeningHoursBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(11, getSiteBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(12, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(13, getNoteBytes());
      }
      for (int i = 0; i < textCategories_.size(); i++) {
        output.writeUInt32(14, textCategories_.get(i));
      }
      for (int i = 0; i < textValues_.size(); i++) {
        output.writeBytes(15, textValues_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, dx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, dy_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < categories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(categories_.get(i));
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subcategories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(subcategories_.get(i));
        }
        size += dataSize;
        size += 1 * getSubcategoriesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getNameEnBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, id_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getOpeningHoursBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getSiteBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getNoteBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < textCategories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(textCategories_.get(i));
        }
        size += dataSize;
        size += 1 * getTextCategoriesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < textValues_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(textValues_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getTextValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        dx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        categories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        subcategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        nameEn_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        openingHours_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        site_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        phone_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        note_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        textCategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        textValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom build() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom result = new net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dx_ = dx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dy_ = dy_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          categories_ = java.util.Collections.unmodifiableList(categories_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.categories_ = categories_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          subcategories_ = java.util.Collections.unmodifiableList(subcategories_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.subcategories_ = subcategories_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nameEn_ = nameEn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.openingHours_ = openingHours_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.site_ = site_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.phone_ = phone_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.note_ = note_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          textCategories_ = java.util.Collections.unmodifiableList(textCategories_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.textCategories_ = textCategories_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          textValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
              textValues_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.textValues_ = textValues_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.getDefaultInstance()) return this;
        if (other.hasDx()) {
          setDx(other.getDx());
        }
        if (other.hasDy()) {
          setDy(other.getDy());
        }
        if (!other.categories_.isEmpty()) {
          if (categories_.isEmpty()) {
            categories_ = other.categories_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCategoriesIsMutable();
            categories_.addAll(other.categories_);
          }
          onChanged();
        }
        if (!other.subcategories_.isEmpty()) {
          if (subcategories_.isEmpty()) {
            subcategories_ = other.subcategories_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSubcategoriesIsMutable();
            subcategories_.addAll(other.subcategories_);
          }
          onChanged();
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasNameEn()) {
          setNameEn(other.getNameEn());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasOpeningHours()) {
          setOpeningHours(other.getOpeningHours());
        }
        if (other.hasSite()) {
          setSite(other.getSite());
        }
        if (other.hasPhone()) {
          setPhone(other.getPhone());
        }
        if (other.hasNote()) {
          setNote(other.getNote());
        }
        if (!other.textCategories_.isEmpty()) {
          if (textCategories_.isEmpty()) {
            textCategories_ = other.textCategories_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureTextCategoriesIsMutable();
            textCategories_.addAll(other.textCategories_);
          }
          onChanged();
        }
        if (!other.textValues_.isEmpty()) {
          if (textValues_.isEmpty()) {
            textValues_ = other.textValues_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureTextValuesIsMutable();
            textValues_.addAll(other.textValues_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasDx()) {
          
          return false;
        }
        if (!hasDy()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              dx_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              dy_ = input.readSInt32();
              break;
            }
            case 32: {
              ensureCategoriesIsMutable();
              categories_.add(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addCategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureSubcategoriesIsMutable();
              subcategories_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSubcategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              name_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              nameEn_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              id_ = input.readUInt64();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000080;
              openingHours_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000100;
              site_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000200;
              phone_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000400;
              note_ = input.readBytes();
              break;
            }
            case 112: {
              ensureTextCategoriesIsMutable();
              textCategories_.add(input.readUInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addTextCategories(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              ensureTextValuesIsMutable();
              textValues_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required sint32 dx = 2;
      private int dx_ ;
      public boolean hasDx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getDx() {
        return dx_;
      }
      public Builder setDx(int value) {
        bitField0_ |= 0x00000001;
        dx_ = value;
        onChanged();
        return this;
      }
      public Builder clearDx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dx_ = 0;
        onChanged();
        return this;
      }
      
      // required sint32 dy = 3;
      private int dy_ ;
      public boolean hasDy() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDy() {
        return dy_;
      }
      public Builder setDy(int value) {
        bitField0_ |= 0x00000002;
        dy_ = value;
        onChanged();
        return this;
      }
      public Builder clearDy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dy_ = 0;
        onChanged();
        return this;
      }
      
      // repeated uint32 categories = 4;
      private java.util.List<java.lang.Integer> categories_ = java.util.Collections.emptyList();;
      private void ensureCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          categories_ = new java.util.ArrayList<java.lang.Integer>(categories_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getCategoriesList() {
        return java.util.Collections.unmodifiableList(categories_);
      }
      public int getCategoriesCount() {
        return categories_.size();
      }
      public int getCategories(int index) {
        return categories_.get(index);
      }
      public Builder setCategories(
          int index, int value) {
        ensureCategoriesIsMutable();
        categories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addCategories(int value) {
        ensureCategoriesIsMutable();
        categories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllCategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCategoriesIsMutable();
        super.addAll(values, categories_);
        onChanged();
        return this;
      }
      public Builder clearCategories() {
        categories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated uint32 subcategories = 5;
      private java.util.List<java.lang.Integer> subcategories_ = java.util.Collections.emptyList();;
      private void ensureSubcategoriesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          subcategories_ = new java.util.ArrayList<java.lang.Integer>(subcategories_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getSubcategoriesList() {
        return java.util.Collections.unmodifiableList(subcategories_);
      }
      public int getSubcategoriesCount() {
        return subcategories_.size();
      }
      public int getSubcategories(int index) {
        return subcategories_.get(index);
      }
      public Builder setSubcategories(
          int index, int value) {
        ensureSubcategoriesIsMutable();
        subcategories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSubcategories(int value) {
        ensureSubcategoriesIsMutable();
        subcategories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSubcategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSubcategoriesIsMutable();
        super.addAll(values, subcategories_);
        onChanged();
        return this;
      }
      public Builder clearSubcategories() {
        subcategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // optional string name = 6;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
      }
      
      // optional string nameEn = 7;
      private java.lang.Object nameEn_ = "";
      public boolean hasNameEn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getNameEn() {
        java.lang.Object ref = nameEn_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nameEn_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNameEn(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        nameEn_ = value;
        onChanged();
        return this;
      }
      public Builder clearNameEn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nameEn_ = getDefaultInstance().getNameEn();
        onChanged();
        return this;
      }
      void setNameEn(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        nameEn_ = value;
        onChanged();
      }
      
      // optional uint64 id = 8;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000040;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string openingHours = 10;
      private java.lang.Object openingHours_ = "";
      public boolean hasOpeningHours() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getOpeningHours() {
        java.lang.Object ref = openingHours_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          openingHours_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOpeningHours(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        openingHours_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpeningHours() {
        bitField0_ = (bitField0_ & ~0x00000080);
        openingHours_ = getDefaultInstance().getOpeningHours();
        onChanged();
        return this;
      }
      void setOpeningHours(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        openingHours_ = value;
        onChanged();
      }
      
      // optional string site = 11;
      private java.lang.Object site_ = "";
      public boolean hasSite() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getSite() {
        java.lang.Object ref = site_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          site_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSite(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        site_ = value;
        onChanged();
        return this;
      }
      public Builder clearSite() {
        bitField0_ = (bitField0_ & ~0x00000100);
        site_ = getDefaultInstance().getSite();
        onChanged();
        return this;
      }
      void setSite(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        site_ = value;
        onChanged();
      }
      
      // optional string phone = 12;
      private java.lang.Object phone_ = "";
      public boolean hasPhone() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getPhone() {
        java.lang.Object ref = phone_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          phone_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPhone(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        phone_ = value;
        onChanged();
        return this;
      }
      public Builder clearPhone() {
        bitField0_ = (bitField0_ & ~0x00000200);
        phone_ = getDefaultInstance().getPhone();
        onChanged();
        return this;
      }
      void setPhone(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        phone_ = value;
        onChanged();
      }
      
      // optional string note = 13;
      private java.lang.Object note_ = "";
      public boolean hasNote() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getNote() {
        java.lang.Object ref = note_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          note_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNote(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        note_ = value;
        onChanged();
        return this;
      }
      public Builder clearNote() {
        bitField0_ = (bitField0_ & ~0x00000400);
        note_ = getDefaultInstance().getNote();
        onChanged();
        return this;
      }
      void setNote(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        note_ = value;
        onChanged();
      }
      
      // repeated uint32 textCategories = 14;
      private java.util.List<java.lang.Integer> textCategories_ = java.util.Collections.emptyList();;
      private void ensureTextCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          textCategories_ = new java.util.ArrayList<java.lang.Integer>(textCategories_);
          bitField0_ |= 0x00000800;
         }
      }
      public java.util.List<java.lang.Integer>
          getTextCategoriesList() {
        return java.util.Collections.unmodifiableList(textCategories_);
      }
      public int getTextCategoriesCount() {
        return textCategories_.size();
      }
      public int getTextCategories(int index) {
        return textCategories_.get(index);
      }
      public Builder setTextCategories(
          int index, int value) {
        ensureTextCategoriesIsMutable();
        textCategories_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTextCategories(int value) {
        ensureTextCategoriesIsMutable();
        textCategories_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTextCategories(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTextCategoriesIsMutable();
        super.addAll(values, textCategories_);
        onChanged();
        return this;
      }
      public Builder clearTextCategories() {
        textCategories_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      
      // repeated string textValues = 15;
      private com.google.protobuf.LazyStringList textValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextValuesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          textValues_ = new com.google.protobuf.LazyStringArrayList(textValues_);
          bitField0_ |= 0x00001000;
         }
      }
      public java.util.List<String>
          getTextValuesList() {
        return java.util.Collections.unmodifiableList(textValues_);
      }
      public int getTextValuesCount() {
        return textValues_.size();
      }
      public String getTextValues(int index) {
        return textValues_.get(index);
      }
      public Builder setTextValues(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextValuesIsMutable();
        textValues_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addTextValues(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextValuesIsMutable();
        textValues_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllTextValues(
          java.lang.Iterable<String> values) {
        ensureTextValuesIsMutable();
        super.addAll(values, textValues_);
        onChanged();
        return this;
      }
      public Builder clearTextValues() {
        textValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      void addTextValues(com.google.protobuf.ByteString value) {
        ensureTextValuesIsMutable();
        textValues_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndPoiBoxDataAtom)
    }
    
    static {
      defaultInstance = new OsmAndPoiBoxDataAtom(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndPoiBoxDataAtom)
  }
  
  public interface IdTableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated sint64 routeId = 1;
    java.util.List<java.lang.Long> getRouteIdList();
    int getRouteIdCount();
    long getRouteId(int index);
  }
  public static final class IdTable extends
      com.google.protobuf.GeneratedMessage
      implements IdTableOrBuilder {
    // Use IdTable.newBuilder() to construct.
    private IdTable(Builder builder) {
      super(builder);
    }
    private IdTable(boolean noInit) {}
    
    private static final IdTable defaultInstance;
    public static IdTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public IdTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IdTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IdTable_fieldAccessorTable;
    }
    
    // repeated sint64 routeId = 1;
    public static final int ROUTEID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> routeId_;
    public java.util.List<java.lang.Long>
        getRouteIdList() {
      return routeId_;
    }
    public int getRouteIdCount() {
      return routeId_.size();
    }
    public long getRouteId(int index) {
      return routeId_.get(index);
    }
    
    private void initFields() {
      routeId_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < routeId_.size(); i++) {
        output.writeSInt64(1, routeId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < routeId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(routeId_.get(i));
        }
        size += dataSize;
        size += 1 * getRouteIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.IdTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.IdTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.IdTableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IdTable_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_IdTable_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.IdTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        routeId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.IdTable.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.IdTable getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.IdTable build() {
        net.osmand.binary.OsmandOdb.IdTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.IdTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.IdTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.IdTable buildPartial() {
        net.osmand.binary.OsmandOdb.IdTable result = new net.osmand.binary.OsmandOdb.IdTable(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          routeId_ = java.util.Collections.unmodifiableList(routeId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.routeId_ = routeId_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.IdTable) {
          return mergeFrom((net.osmand.binary.OsmandOdb.IdTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.IdTable other) {
        if (other == net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance()) return this;
        if (!other.routeId_.isEmpty()) {
          if (routeId_.isEmpty()) {
            routeId_ = other.routeId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRouteIdIsMutable();
            routeId_.addAll(other.routeId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              ensureRouteIdIsMutable();
              routeId_.add(input.readSInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRouteId(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated sint64 routeId = 1;
      private java.util.List<java.lang.Long> routeId_ = java.util.Collections.emptyList();;
      private void ensureRouteIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          routeId_ = new java.util.ArrayList<java.lang.Long>(routeId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Long>
          getRouteIdList() {
        return java.util.Collections.unmodifiableList(routeId_);
      }
      public int getRouteIdCount() {
        return routeId_.size();
      }
      public long getRouteId(int index) {
        return routeId_.get(index);
      }
      public Builder setRouteId(
          int index, long value) {
        ensureRouteIdIsMutable();
        routeId_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRouteId(long value) {
        ensureRouteIdIsMutable();
        routeId_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRouteId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRouteIdIsMutable();
        super.addAll(values, routeId_);
        onChanged();
        return this;
      }
      public Builder clearRouteId() {
        routeId_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.IdTable)
    }
    
    static {
      defaultInstance = new IdTable(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.IdTable)
  }
  
  public interface RestrictionDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 type = 1;
    boolean hasType();
    int getType();
    
    // required int32 from = 2;
    boolean hasFrom();
    int getFrom();
    
    // required int32 to = 3;
    boolean hasTo();
    int getTo();
    
    // optional int32 via = 4;
    boolean hasVia();
    int getVia();
  }
  public static final class RestrictionData extends
      com.google.protobuf.GeneratedMessage
      implements RestrictionDataOrBuilder {
    // Use RestrictionData.newBuilder() to construct.
    private RestrictionData(Builder builder) {
      super(builder);
    }
    private RestrictionData(boolean noInit) {}
    
    private static final RestrictionData defaultInstance;
    public static RestrictionData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RestrictionData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RestrictionData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RestrictionData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getType() {
      return type_;
    }
    
    // required int32 from = 2;
    public static final int FROM_FIELD_NUMBER = 2;
    private int from_;
    public boolean hasFrom() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getFrom() {
      return from_;
    }
    
    // required int32 to = 3;
    public static final int TO_FIELD_NUMBER = 3;
    private int to_;
    public boolean hasTo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTo() {
      return to_;
    }
    
    // optional int32 via = 4;
    public static final int VIA_FIELD_NUMBER = 4;
    private int via_;
    public boolean hasVia() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getVia() {
      return via_;
    }
    
    private void initFields() {
      type_ = 0;
      from_ = 0;
      to_ = 0;
      via_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrom()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, from_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, to_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, via_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, from_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, to_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, via_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RestrictionData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.RestrictionData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RestrictionData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RestrictionData_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.RestrictionData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        from_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        to_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        via_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.RestrictionData.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.RestrictionData getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.RestrictionData.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.RestrictionData build() {
        net.osmand.binary.OsmandOdb.RestrictionData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.RestrictionData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.RestrictionData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.RestrictionData buildPartial() {
        net.osmand.binary.OsmandOdb.RestrictionData result = new net.osmand.binary.OsmandOdb.RestrictionData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.from_ = from_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.to_ = to_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.via_ = via_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.RestrictionData) {
          return mergeFrom((net.osmand.binary.OsmandOdb.RestrictionData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.RestrictionData other) {
        if (other == net.osmand.binary.OsmandOdb.RestrictionData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFrom()) {
          setFrom(other.getFrom());
        }
        if (other.hasTo()) {
          setTo(other.getTo());
        }
        if (other.hasVia()) {
          setVia(other.getVia());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasFrom()) {
          
          return false;
        }
        if (!hasTo()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              from_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              to_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              via_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 type = 1;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 from = 2;
      private int from_ ;
      public boolean hasFrom() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getFrom() {
        return from_;
      }
      public Builder setFrom(int value) {
        bitField0_ |= 0x00000002;
        from_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        from_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 to = 3;
      private int to_ ;
      public boolean hasTo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTo() {
        return to_;
      }
      public Builder setTo(int value) {
        bitField0_ |= 0x00000004;
        to_ = value;
        onChanged();
        return this;
      }
      public Builder clearTo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        to_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 via = 4;
      private int via_ ;
      public boolean hasVia() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getVia() {
        return via_;
      }
      public Builder setVia(int value) {
        bitField0_ |= 0x00000008;
        via_ = value;
        onChanged();
        return this;
      }
      public Builder clearVia() {
        bitField0_ = (bitField0_ & ~0x00000008);
        via_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.RestrictionData)
    }
    
    static {
      defaultInstance = new RestrictionData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.RestrictionData)
  }
  
  public interface RouteDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bytes points = 1;
    boolean hasPoints();
    com.google.protobuf.ByteString getPoints();
    
    // optional bytes pointTypes = 4;
    boolean hasPointTypes();
    com.google.protobuf.ByteString getPointTypes();
    
    // required bytes types = 7;
    boolean hasTypes();
    com.google.protobuf.ByteString getTypes();
    
    // required int32 routeId = 12;
    boolean hasRouteId();
    int getRouteId();
    
    // optional bytes stringNames = 14;
    boolean hasStringNames();
    com.google.protobuf.ByteString getStringNames();
  }
  public static final class RouteData extends
      com.google.protobuf.GeneratedMessage
      implements RouteDataOrBuilder {
    // Use RouteData.newBuilder() to construct.
    private RouteData(Builder builder) {
      super(builder);
    }
    private RouteData(boolean noInit) {}
    
    private static final RouteData defaultInstance;
    public static RouteData getDefaultInstance() {
      return defaultInstance;
    }
    
    public RouteData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RouteData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RouteData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bytes points = 1;
    public static final int POINTS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString points_;
    public boolean hasPoints() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getPoints() {
      return points_;
    }
    
    // optional bytes pointTypes = 4;
    public static final int POINTTYPES_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString pointTypes_;
    public boolean hasPointTypes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getPointTypes() {
      return pointTypes_;
    }
    
    // required bytes types = 7;
    public static final int TYPES_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString types_;
    public boolean hasTypes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getTypes() {
      return types_;
    }
    
    // required int32 routeId = 12;
    public static final int ROUTEID_FIELD_NUMBER = 12;
    private int routeId_;
    public boolean hasRouteId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getRouteId() {
      return routeId_;
    }
    
    // optional bytes stringNames = 14;
    public static final int STRINGNAMES_FIELD_NUMBER = 14;
    private com.google.protobuf.ByteString stringNames_;
    public boolean hasStringNames() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.google.protobuf.ByteString getStringNames() {
      return stringNames_;
    }
    
    private void initFields() {
      points_ = com.google.protobuf.ByteString.EMPTY;
      pointTypes_ = com.google.protobuf.ByteString.EMPTY;
      types_ = com.google.protobuf.ByteString.EMPTY;
      routeId_ = 0;
      stringNames_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPoints()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRouteId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, points_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(4, pointTypes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(7, types_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(12, routeId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(14, stringNames_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, points_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, pointTypes_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, types_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, routeId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, stringNames_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.RouteData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.RouteData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.RouteDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RouteData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_RouteData_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.RouteData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        points_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        pointTypes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        types_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        routeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        stringNames_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.RouteData.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.RouteData getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.RouteData.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.RouteData build() {
        net.osmand.binary.OsmandOdb.RouteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.RouteData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.RouteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.RouteData buildPartial() {
        net.osmand.binary.OsmandOdb.RouteData result = new net.osmand.binary.OsmandOdb.RouteData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.points_ = points_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pointTypes_ = pointTypes_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.types_ = types_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.routeId_ = routeId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.stringNames_ = stringNames_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.RouteData) {
          return mergeFrom((net.osmand.binary.OsmandOdb.RouteData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.RouteData other) {
        if (other == net.osmand.binary.OsmandOdb.RouteData.getDefaultInstance()) return this;
        if (other.hasPoints()) {
          setPoints(other.getPoints());
        }
        if (other.hasPointTypes()) {
          setPointTypes(other.getPointTypes());
        }
        if (other.hasTypes()) {
          setTypes(other.getTypes());
        }
        if (other.hasRouteId()) {
          setRouteId(other.getRouteId());
        }
        if (other.hasStringNames()) {
          setStringNames(other.getStringNames());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPoints()) {
          
          return false;
        }
        if (!hasTypes()) {
          
          return false;
        }
        if (!hasRouteId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              points_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000002;
              pointTypes_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000004;
              types_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000008;
              routeId_ = input.readInt32();
              break;
            }
            case 114: {
              bitField0_ |= 0x00000010;
              stringNames_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bytes points = 1;
      private com.google.protobuf.ByteString points_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasPoints() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getPoints() {
        return points_;
      }
      public Builder setPoints(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        points_ = value;
        onChanged();
        return this;
      }
      public Builder clearPoints() {
        bitField0_ = (bitField0_ & ~0x00000001);
        points_ = getDefaultInstance().getPoints();
        onChanged();
        return this;
      }
      
      // optional bytes pointTypes = 4;
      private com.google.protobuf.ByteString pointTypes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasPointTypes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getPointTypes() {
        return pointTypes_;
      }
      public Builder setPointTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pointTypes_ = value;
        onChanged();
        return this;
      }
      public Builder clearPointTypes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pointTypes_ = getDefaultInstance().getPointTypes();
        onChanged();
        return this;
      }
      
      // required bytes types = 7;
      private com.google.protobuf.ByteString types_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasTypes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getTypes() {
        return types_;
      }
      public Builder setTypes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        types_ = value;
        onChanged();
        return this;
      }
      public Builder clearTypes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        types_ = getDefaultInstance().getTypes();
        onChanged();
        return this;
      }
      
      // required int32 routeId = 12;
      private int routeId_ ;
      public boolean hasRouteId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRouteId() {
        return routeId_;
      }
      public Builder setRouteId(int value) {
        bitField0_ |= 0x00000008;
        routeId_ = value;
        onChanged();
        return this;
      }
      public Builder clearRouteId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        routeId_ = 0;
        onChanged();
        return this;
      }
      
      // optional bytes stringNames = 14;
      private com.google.protobuf.ByteString stringNames_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasStringNames() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.google.protobuf.ByteString getStringNames() {
        return stringNames_;
      }
      public Builder setStringNames(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        stringNames_ = value;
        onChanged();
        return this;
      }
      public Builder clearStringNames() {
        bitField0_ = (bitField0_ & ~0x00000010);
        stringNames_ = getDefaultInstance().getStringNames();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.RouteData)
    }
    
    static {
      defaultInstance = new RouteData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.RouteData)
  }
  
  public interface OsmAndRoutingIndexOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteEncodingRule rules = 2;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> 
        getRulesList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule getRules(int index);
    int getRulesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder> 
        getRulesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder getRulesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox rootBoxes = 3;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> 
        getRootBoxesList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getRootBoxes(int index);
    int getRootBoxesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
        getRootBoxesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getRootBoxesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox basemapBoxes = 4;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> 
        getBasemapBoxesList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBasemapBoxes(int index);
    int getBasemapBoxesCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
        getBasemapBoxesOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBasemapBoxesOrBuilder(
        int index);
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBlock blocks = 5;
    java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> 
        getBlocksList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock getBlocks(int index);
    int getBlocksCount();
    java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder> 
        getBlocksOrBuilderList();
    net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder getBlocksOrBuilder(
        int index);
  }
  public static final class OsmAndRoutingIndex extends
      com.google.protobuf.GeneratedMessage
      implements OsmAndRoutingIndexOrBuilder {
    // Use OsmAndRoutingIndex.newBuilder() to construct.
    private OsmAndRoutingIndex(Builder builder) {
      super(builder);
    }
    private OsmAndRoutingIndex(boolean noInit) {}
    
    private static final OsmAndRoutingIndex defaultInstance;
    public static OsmAndRoutingIndex getDefaultInstance() {
      return defaultInstance;
    }
    
    public OsmAndRoutingIndex getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_fieldAccessorTable;
    }
    
    public interface RouteEncodingRuleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string tag = 3;
      boolean hasTag();
      String getTag();
      
      // required string value = 5;
      boolean hasValue();
      String getValue();
      
      // optional uint32 id = 7;
      boolean hasId();
      int getId();
    }
    public static final class RouteEncodingRule extends
        com.google.protobuf.GeneratedMessage
        implements RouteEncodingRuleOrBuilder {
      // Use RouteEncodingRule.newBuilder() to construct.
      private RouteEncodingRule(Builder builder) {
        super(builder);
      }
      private RouteEncodingRule(boolean noInit) {}
      
      private static final RouteEncodingRule defaultInstance;
      public static RouteEncodingRule getDefaultInstance() {
        return defaultInstance;
      }
      
      public RouteEncodingRule getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string tag = 3;
      public static final int TAG_FIELD_NUMBER = 3;
      private java.lang.Object tag_;
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTag() {
        java.lang.Object ref = tag_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            tag_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getTagBytes() {
        java.lang.Object ref = tag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          tag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required string value = 5;
      public static final int VALUE_FIELD_NUMBER = 5;
      private java.lang.Object value_;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            value_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional uint32 id = 7;
      public static final int ID_FIELD_NUMBER = 7;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getId() {
        return id_;
      }
      
      private void initFields() {
        tag_ = "";
        value_ = "";
        id_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasTag()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(3, getTagBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(5, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(7, id_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getTagBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, id_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          tag_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule build() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule result = new net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tag_ = tag_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.id_ = id_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.getDefaultInstance()) return this;
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          if (other.hasId()) {
            setId(other.getId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasTag()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 26: {
                bitField0_ |= 0x00000001;
                tag_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000004;
                id_ = input.readUInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string tag = 3;
        private java.lang.Object tag_ = "";
        public boolean hasTag() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getTag() {
          java.lang.Object ref = tag_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            tag_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setTag(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          tag_ = value;
          onChanged();
          return this;
        }
        public Builder clearTag() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tag_ = getDefaultInstance().getTag();
          onChanged();
          return this;
        }
        void setTag(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          tag_ = value;
          onChanged();
        }
        
        // required string value = 5;
        private java.lang.Object value_ = "";
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValue(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        void setValue(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
        }
        
        // optional uint32 id = 7;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000004;
          id_ = value;
          onChanged();
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          id_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteEncodingRule)
      }
      
      static {
        defaultInstance = new RouteEncodingRule(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteEncodingRule)
    }
    
    public interface RouteDataBoxOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required sint32 left = 1;
      boolean hasLeft();
      int getLeft();
      
      // required sint32 right = 2;
      boolean hasRight();
      int getRight();
      
      // required sint32 top = 3;
      boolean hasTop();
      int getTop();
      
      // required sint32 bottom = 4;
      boolean hasBottom();
      int getBottom();
      
      // optional fixed32 shiftToData = 5;
      boolean hasShiftToData();
      int getShiftToData();
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox boxes = 7;
      java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> 
          getBoxesList();
      net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBoxes(int index);
      int getBoxesCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
          getBoxesOrBuilderList();
      net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBoxesOrBuilder(
          int index);
    }
    public static final class RouteDataBox extends
        com.google.protobuf.GeneratedMessage
        implements RouteDataBoxOrBuilder {
      // Use RouteDataBox.newBuilder() to construct.
      private RouteDataBox(Builder builder) {
        super(builder);
      }
      private RouteDataBox(boolean noInit) {}
      
      private static final RouteDataBox defaultInstance;
      public static RouteDataBox getDefaultInstance() {
        return defaultInstance;
      }
      
      public RouteDataBox getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required sint32 left = 1;
      public static final int LEFT_FIELD_NUMBER = 1;
      private int left_;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLeft() {
        return left_;
      }
      
      // required sint32 right = 2;
      public static final int RIGHT_FIELD_NUMBER = 2;
      private int right_;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRight() {
        return right_;
      }
      
      // required sint32 top = 3;
      public static final int TOP_FIELD_NUMBER = 3;
      private int top_;
      public boolean hasTop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTop() {
        return top_;
      }
      
      // required sint32 bottom = 4;
      public static final int BOTTOM_FIELD_NUMBER = 4;
      private int bottom_;
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getBottom() {
        return bottom_;
      }
      
      // optional fixed32 shiftToData = 5;
      public static final int SHIFTTODATA_FIELD_NUMBER = 5;
      private int shiftToData_;
      public boolean hasShiftToData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getShiftToData() {
        return shiftToData_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox boxes = 7;
      public static final int BOXES_FIELD_NUMBER = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> boxes_;
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getBoxesList() {
        return boxes_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
          getBoxesOrBuilderList() {
        return boxes_;
      }
      public int getBoxesCount() {
        return boxes_.size();
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBoxes(int index) {
        return boxes_.get(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBoxesOrBuilder(
          int index) {
        return boxes_.get(index);
      }
      
      private void initFields() {
        left_ = 0;
        right_ = 0;
        top_ = 0;
        bottom_ = 0;
        shiftToData_ = 0;
        boxes_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasLeft()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRight()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTop()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBottom()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getBoxesCount(); i++) {
          if (!getBoxes(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt32(2, right_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeSInt32(3, top_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeSInt32(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFixed32(5, shiftToData_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          output.writeMessage(7, boxes_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, left_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, right_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, top_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, bottom_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(5, shiftToData_);
        }
        for (int i = 0; i < boxes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, boxes_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBoxesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          left_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          right_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          top_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          bottom_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          shiftToData_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            boxesBuilder_.clear();
          }
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox build() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox result = new net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.left_ = left_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.right_ = right_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.top_ = top_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.bottom_ = bottom_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.shiftToData_ = shiftToData_;
          if (boxesBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              boxes_ = java.util.Collections.unmodifiableList(boxes_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.boxes_ = boxes_;
          } else {
            result.boxes_ = boxesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance()) return this;
          if (other.hasLeft()) {
            setLeft(other.getLeft());
          }
          if (other.hasRight()) {
            setRight(other.getRight());
          }
          if (other.hasTop()) {
            setTop(other.getTop());
          }
          if (other.hasBottom()) {
            setBottom(other.getBottom());
          }
          if (other.hasShiftToData()) {
            setShiftToData(other.getShiftToData());
          }
          if (boxesBuilder_ == null) {
            if (!other.boxes_.isEmpty()) {
              if (boxes_.isEmpty()) {
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureBoxesIsMutable();
                boxes_.addAll(other.boxes_);
              }
              onChanged();
            }
          } else {
            if (!other.boxes_.isEmpty()) {
              if (boxesBuilder_.isEmpty()) {
                boxesBuilder_.dispose();
                boxesBuilder_ = null;
                boxes_ = other.boxes_;
                bitField0_ = (bitField0_ & ~0x00000020);
                boxesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBoxesFieldBuilder() : null;
              } else {
                boxesBuilder_.addAllMessages(other.boxes_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasLeft()) {
            
            return false;
          }
          if (!hasRight()) {
            
            return false;
          }
          if (!hasTop()) {
            
            return false;
          }
          if (!hasBottom()) {
            
            return false;
          }
          for (int i = 0; i < getBoxesCount(); i++) {
            if (!getBoxes(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                left_ = input.readSInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                right_ = input.readSInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                top_ = input.readSInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                bottom_ = input.readSInt32();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                shiftToData_ = input.readFixed32();
                break;
              }
              case 58: {
                net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addBoxes(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required sint32 left = 1;
        private int left_ ;
        public boolean hasLeft() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getLeft() {
          return left_;
        }
        public Builder setLeft(int value) {
          bitField0_ |= 0x00000001;
          left_ = value;
          onChanged();
          return this;
        }
        public Builder clearLeft() {
          bitField0_ = (bitField0_ & ~0x00000001);
          left_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 right = 2;
        private int right_ ;
        public boolean hasRight() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getRight() {
          return right_;
        }
        public Builder setRight(int value) {
          bitField0_ |= 0x00000002;
          right_ = value;
          onChanged();
          return this;
        }
        public Builder clearRight() {
          bitField0_ = (bitField0_ & ~0x00000002);
          right_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 top = 3;
        private int top_ ;
        public boolean hasTop() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public int getTop() {
          return top_;
        }
        public Builder setTop(int value) {
          bitField0_ |= 0x00000004;
          top_ = value;
          onChanged();
          return this;
        }
        public Builder clearTop() {
          bitField0_ = (bitField0_ & ~0x00000004);
          top_ = 0;
          onChanged();
          return this;
        }
        
        // required sint32 bottom = 4;
        private int bottom_ ;
        public boolean hasBottom() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public int getBottom() {
          return bottom_;
        }
        public Builder setBottom(int value) {
          bitField0_ |= 0x00000008;
          bottom_ = value;
          onChanged();
          return this;
        }
        public Builder clearBottom() {
          bitField0_ = (bitField0_ & ~0x00000008);
          bottom_ = 0;
          onChanged();
          return this;
        }
        
        // optional fixed32 shiftToData = 5;
        private int shiftToData_ ;
        public boolean hasShiftToData() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public int getShiftToData() {
          return shiftToData_;
        }
        public Builder setShiftToData(int value) {
          bitField0_ |= 0x00000010;
          shiftToData_ = value;
          onChanged();
          return this;
        }
        public Builder clearShiftToData() {
          bitField0_ = (bitField0_ & ~0x00000010);
          shiftToData_ = 0;
          onChanged();
          return this;
        }
        
        // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox boxes = 7;
        private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> boxes_ =
          java.util.Collections.emptyList();
        private void ensureBoxesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            boxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox>(boxes_);
            bitField0_ |= 0x00000020;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> boxesBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getBoxesList() {
          if (boxesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(boxes_);
          } else {
            return boxesBuilder_.getMessageList();
          }
        }
        public int getBoxesCount() {
          if (boxesBuilder_ == null) {
            return boxes_.size();
          } else {
            return boxesBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBoxes(int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);
          } else {
            return boxesBuilder_.getMessage(index);
          }
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.set(index, value);
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.set(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
          if (boxesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBoxesIsMutable();
            boxes_.add(index, value);
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addBoxes(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addBoxes(
            int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.add(index, builderForValue.build());
            onChanged();
          } else {
            boxesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllBoxes(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> values) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            super.addAll(values, boxes_);
            onChanged();
          } else {
            boxesBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearBoxes() {
          if (boxesBuilder_ == null) {
            boxes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            boxesBuilder_.clear();
          }
          return this;
        }
        public Builder removeBoxes(int index) {
          if (boxesBuilder_ == null) {
            ensureBoxesIsMutable();
            boxes_.remove(index);
            onChanged();
          } else {
            boxesBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder getBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBoxesOrBuilder(
            int index) {
          if (boxesBuilder_ == null) {
            return boxes_.get(index);  } else {
            return boxesBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
             getBoxesOrBuilderList() {
          if (boxesBuilder_ != null) {
            return boxesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(boxes_);
          }
        }
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addBoxesBuilder() {
          return getBoxesFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addBoxesBuilder(
            int index) {
          return getBoxesFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder> 
             getBoxesBuilderList() {
          return getBoxesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
            getBoxesFieldBuilder() {
          if (boxesBuilder_ == null) {
            boxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder>(
                    boxes_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            boxes_ = null;
          }
          return boxesBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox)
      }
      
      static {
        defaultInstance = new RouteDataBox(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox)
    }
    
    public interface RouteDataBlockOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // optional .OsmAnd.OBF.IdTable idTable = 5;
      boolean hasIdTable();
      net.osmand.binary.OsmandOdb.IdTable getIdTable();
      net.osmand.binary.OsmandOdb.IdTableOrBuilder getIdTableOrBuilder();
      
      // repeated .OsmAnd.OBF.RouteData dataObjects = 6;
      java.util.List<net.osmand.binary.OsmandOdb.RouteData> 
          getDataObjectsList();
      net.osmand.binary.OsmandOdb.RouteData getDataObjects(int index);
      int getDataObjectsCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.RouteDataOrBuilder> 
          getDataObjectsOrBuilderList();
      net.osmand.binary.OsmandOdb.RouteDataOrBuilder getDataObjectsOrBuilder(
          int index);
      
      // repeated .OsmAnd.OBF.RestrictionData restrictions = 7;
      java.util.List<net.osmand.binary.OsmandOdb.RestrictionData> 
          getRestrictionsList();
      net.osmand.binary.OsmandOdb.RestrictionData getRestrictions(int index);
      int getRestrictionsCount();
      java.util.List<? extends net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder> 
          getRestrictionsOrBuilderList();
      net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder getRestrictionsOrBuilder(
          int index);
      
      // optional .OsmAnd.OBF.StringTable stringTable = 8;
      boolean hasStringTable();
      net.osmand.binary.OsmandOdb.StringTable getStringTable();
      net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder();
    }
    public static final class RouteDataBlock extends
        com.google.protobuf.GeneratedMessage
        implements RouteDataBlockOrBuilder {
      // Use RouteDataBlock.newBuilder() to construct.
      private RouteDataBlock(Builder builder) {
        super(builder);
      }
      private RouteDataBlock(boolean noInit) {}
      
      private static final RouteDataBlock defaultInstance;
      public static RouteDataBlock getDefaultInstance() {
        return defaultInstance;
      }
      
      public RouteDataBlock getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_fieldAccessorTable;
      }
      
      private int bitField0_;
      // optional .OsmAnd.OBF.IdTable idTable = 5;
      public static final int IDTABLE_FIELD_NUMBER = 5;
      private net.osmand.binary.OsmandOdb.IdTable idTable_;
      public boolean hasIdTable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public net.osmand.binary.OsmandOdb.IdTable getIdTable() {
        return idTable_;
      }
      public net.osmand.binary.OsmandOdb.IdTableOrBuilder getIdTableOrBuilder() {
        return idTable_;
      }
      
      // repeated .OsmAnd.OBF.RouteData dataObjects = 6;
      public static final int DATAOBJECTS_FIELD_NUMBER = 6;
      private java.util.List<net.osmand.binary.OsmandOdb.RouteData> dataObjects_;
      public java.util.List<net.osmand.binary.OsmandOdb.RouteData> getDataObjectsList() {
        return dataObjects_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.RouteDataOrBuilder> 
          getDataObjectsOrBuilderList() {
        return dataObjects_;
      }
      public int getDataObjectsCount() {
        return dataObjects_.size();
      }
      public net.osmand.binary.OsmandOdb.RouteData getDataObjects(int index) {
        return dataObjects_.get(index);
      }
      public net.osmand.binary.OsmandOdb.RouteDataOrBuilder getDataObjectsOrBuilder(
          int index) {
        return dataObjects_.get(index);
      }
      
      // repeated .OsmAnd.OBF.RestrictionData restrictions = 7;
      public static final int RESTRICTIONS_FIELD_NUMBER = 7;
      private java.util.List<net.osmand.binary.OsmandOdb.RestrictionData> restrictions_;
      public java.util.List<net.osmand.binary.OsmandOdb.RestrictionData> getRestrictionsList() {
        return restrictions_;
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder> 
          getRestrictionsOrBuilderList() {
        return restrictions_;
      }
      public int getRestrictionsCount() {
        return restrictions_.size();
      }
      public net.osmand.binary.OsmandOdb.RestrictionData getRestrictions(int index) {
        return restrictions_.get(index);
      }
      public net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder getRestrictionsOrBuilder(
          int index) {
        return restrictions_.get(index);
      }
      
      // optional .OsmAnd.OBF.StringTable stringTable = 8;
      public static final int STRINGTABLE_FIELD_NUMBER = 8;
      private net.osmand.binary.OsmandOdb.StringTable stringTable_;
      public boolean hasStringTable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
        return stringTable_;
      }
      public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
        return stringTable_;
      }
      
      private void initFields() {
        idTable_ = net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance();
        dataObjects_ = java.util.Collections.emptyList();
        restrictions_ = java.util.Collections.emptyList();
        stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        for (int i = 0; i < getDataObjectsCount(); i++) {
          if (!getDataObjects(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getRestrictionsCount(); i++) {
          if (!getRestrictions(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(5, idTable_);
        }
        for (int i = 0; i < dataObjects_.size(); i++) {
          output.writeMessage(6, dataObjects_.get(i));
        }
        for (int i = 0; i < restrictions_.size(); i++) {
          output.writeMessage(7, restrictions_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(8, stringTable_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, idTable_);
        }
        for (int i = 0; i < dataObjects_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, dataObjects_.get(i));
        }
        for (int i = 0; i < restrictions_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, restrictions_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, stringTable_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_fieldAccessorTable;
        }
        
        // Construct using net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getIdTableFieldBuilder();
            getDataObjectsFieldBuilder();
            getRestrictionsFieldBuilder();
            getStringTableFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          if (idTableBuilder_ == null) {
            idTable_ = net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance();
          } else {
            idTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (dataObjectsBuilder_ == null) {
            dataObjects_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            dataObjectsBuilder_.clear();
          }
          if (restrictionsBuilder_ == null) {
            restrictions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            restrictionsBuilder_.clear();
          }
          if (stringTableBuilder_ == null) {
            stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
          } else {
            stringTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.getDescriptor();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock getDefaultInstanceForType() {
          return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.getDefaultInstance();
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock build() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock buildPartial() {
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock result = new net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (idTableBuilder_ == null) {
            result.idTable_ = idTable_;
          } else {
            result.idTable_ = idTableBuilder_.build();
          }
          if (dataObjectsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              dataObjects_ = java.util.Collections.unmodifiableList(dataObjects_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.dataObjects_ = dataObjects_;
          } else {
            result.dataObjects_ = dataObjectsBuilder_.build();
          }
          if (restrictionsBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              restrictions_ = java.util.Collections.unmodifiableList(restrictions_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.restrictions_ = restrictions_;
          } else {
            result.restrictions_ = restrictionsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000002;
          }
          if (stringTableBuilder_ == null) {
            result.stringTable_ = stringTable_;
          } else {
            result.stringTable_ = stringTableBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock) {
            return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock other) {
          if (other == net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.getDefaultInstance()) return this;
          if (other.hasIdTable()) {
            mergeIdTable(other.getIdTable());
          }
          if (dataObjectsBuilder_ == null) {
            if (!other.dataObjects_.isEmpty()) {
              if (dataObjects_.isEmpty()) {
                dataObjects_ = other.dataObjects_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureDataObjectsIsMutable();
                dataObjects_.addAll(other.dataObjects_);
              }
              onChanged();
            }
          } else {
            if (!other.dataObjects_.isEmpty()) {
              if (dataObjectsBuilder_.isEmpty()) {
                dataObjectsBuilder_.dispose();
                dataObjectsBuilder_ = null;
                dataObjects_ = other.dataObjects_;
                bitField0_ = (bitField0_ & ~0x00000002);
                dataObjectsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDataObjectsFieldBuilder() : null;
              } else {
                dataObjectsBuilder_.addAllMessages(other.dataObjects_);
              }
            }
          }
          if (restrictionsBuilder_ == null) {
            if (!other.restrictions_.isEmpty()) {
              if (restrictions_.isEmpty()) {
                restrictions_ = other.restrictions_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureRestrictionsIsMutable();
                restrictions_.addAll(other.restrictions_);
              }
              onChanged();
            }
          } else {
            if (!other.restrictions_.isEmpty()) {
              if (restrictionsBuilder_.isEmpty()) {
                restrictionsBuilder_.dispose();
                restrictionsBuilder_ = null;
                restrictions_ = other.restrictions_;
                bitField0_ = (bitField0_ & ~0x00000004);
                restrictionsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getRestrictionsFieldBuilder() : null;
              } else {
                restrictionsBuilder_.addAllMessages(other.restrictions_);
              }
            }
          }
          if (other.hasStringTable()) {
            mergeStringTable(other.getStringTable());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          for (int i = 0; i < getDataObjectsCount(); i++) {
            if (!getDataObjects(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getRestrictionsCount(); i++) {
            if (!getRestrictions(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 42: {
                net.osmand.binary.OsmandOdb.IdTable.Builder subBuilder = net.osmand.binary.OsmandOdb.IdTable.newBuilder();
                if (hasIdTable()) {
                  subBuilder.mergeFrom(getIdTable());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setIdTable(subBuilder.buildPartial());
                break;
              }
              case 50: {
                net.osmand.binary.OsmandOdb.RouteData.Builder subBuilder = net.osmand.binary.OsmandOdb.RouteData.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addDataObjects(subBuilder.buildPartial());
                break;
              }
              case 58: {
                net.osmand.binary.OsmandOdb.RestrictionData.Builder subBuilder = net.osmand.binary.OsmandOdb.RestrictionData.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addRestrictions(subBuilder.buildPartial());
                break;
              }
              case 66: {
                net.osmand.binary.OsmandOdb.StringTable.Builder subBuilder = net.osmand.binary.OsmandOdb.StringTable.newBuilder();
                if (hasStringTable()) {
                  subBuilder.mergeFrom(getStringTable());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setStringTable(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // optional .OsmAnd.OBF.IdTable idTable = 5;
        private net.osmand.binary.OsmandOdb.IdTable idTable_ = net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            net.osmand.binary.OsmandOdb.IdTable, net.osmand.binary.OsmandOdb.IdTable.Builder, net.osmand.binary.OsmandOdb.IdTableOrBuilder> idTableBuilder_;
        public boolean hasIdTable() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public net.osmand.binary.OsmandOdb.IdTable getIdTable() {
          if (idTableBuilder_ == null) {
            return idTable_;
          } else {
            return idTableBuilder_.getMessage();
          }
        }
        public Builder setIdTable(net.osmand.binary.OsmandOdb.IdTable value) {
          if (idTableBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            idTable_ = value;
            onChanged();
          } else {
            idTableBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder setIdTable(
            net.osmand.binary.OsmandOdb.IdTable.Builder builderForValue) {
          if (idTableBuilder_ == null) {
            idTable_ = builderForValue.build();
            onChanged();
          } else {
            idTableBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder mergeIdTable(net.osmand.binary.OsmandOdb.IdTable value) {
          if (idTableBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                idTable_ != net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance()) {
              idTable_ =
                net.osmand.binary.OsmandOdb.IdTable.newBuilder(idTable_).mergeFrom(value).buildPartial();
            } else {
              idTable_ = value;
            }
            onChanged();
          } else {
            idTableBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        public Builder clearIdTable() {
          if (idTableBuilder_ == null) {
            idTable_ = net.osmand.binary.OsmandOdb.IdTable.getDefaultInstance();
            onChanged();
          } else {
            idTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        public net.osmand.binary.OsmandOdb.IdTable.Builder getIdTableBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getIdTableFieldBuilder().getBuilder();
        }
        public net.osmand.binary.OsmandOdb.IdTableOrBuilder getIdTableOrBuilder() {
          if (idTableBuilder_ != null) {
            return idTableBuilder_.getMessageOrBuilder();
          } else {
            return idTable_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            net.osmand.binary.OsmandOdb.IdTable, net.osmand.binary.OsmandOdb.IdTable.Builder, net.osmand.binary.OsmandOdb.IdTableOrBuilder> 
            getIdTableFieldBuilder() {
          if (idTableBuilder_ == null) {
            idTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                net.osmand.binary.OsmandOdb.IdTable, net.osmand.binary.OsmandOdb.IdTable.Builder, net.osmand.binary.OsmandOdb.IdTableOrBuilder>(
                    idTable_,
                    getParentForChildren(),
                    isClean());
            idTable_ = null;
          }
          return idTableBuilder_;
        }
        
        // repeated .OsmAnd.OBF.RouteData dataObjects = 6;
        private java.util.List<net.osmand.binary.OsmandOdb.RouteData> dataObjects_ =
          java.util.Collections.emptyList();
        private void ensureDataObjectsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            dataObjects_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.RouteData>(dataObjects_);
            bitField0_ |= 0x00000002;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.RouteData, net.osmand.binary.OsmandOdb.RouteData.Builder, net.osmand.binary.OsmandOdb.RouteDataOrBuilder> dataObjectsBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.RouteData> getDataObjectsList() {
          if (dataObjectsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(dataObjects_);
          } else {
            return dataObjectsBuilder_.getMessageList();
          }
        }
        public int getDataObjectsCount() {
          if (dataObjectsBuilder_ == null) {
            return dataObjects_.size();
          } else {
            return dataObjectsBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.RouteData getDataObjects(int index) {
          if (dataObjectsBuilder_ == null) {
            return dataObjects_.get(index);
          } else {
            return dataObjectsBuilder_.getMessage(index);
          }
        }
        public Builder setDataObjects(
            int index, net.osmand.binary.OsmandOdb.RouteData value) {
          if (dataObjectsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataObjectsIsMutable();
            dataObjects_.set(index, value);
            onChanged();
          } else {
            dataObjectsBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setDataObjects(
            int index, net.osmand.binary.OsmandOdb.RouteData.Builder builderForValue) {
          if (dataObjectsBuilder_ == null) {
            ensureDataObjectsIsMutable();
            dataObjects_.set(index, builderForValue.build());
            onChanged();
          } else {
            dataObjectsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addDataObjects(net.osmand.binary.OsmandOdb.RouteData value) {
          if (dataObjectsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataObjectsIsMutable();
            dataObjects_.add(value);
            onChanged();
          } else {
            dataObjectsBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addDataObjects(
            int index, net.osmand.binary.OsmandOdb.RouteData value) {
          if (dataObjectsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataObjectsIsMutable();
            dataObjects_.add(index, value);
            onChanged();
          } else {
            dataObjectsBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addDataObjects(
            net.osmand.binary.OsmandOdb.RouteData.Builder builderForValue) {
          if (dataObjectsBuilder_ == null) {
            ensureDataObjectsIsMutable();
            dataObjects_.add(builderForValue.build());
            onChanged();
          } else {
            dataObjectsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addDataObjects(
            int index, net.osmand.binary.OsmandOdb.RouteData.Builder builderForValue) {
          if (dataObjectsBuilder_ == null) {
            ensureDataObjectsIsMutable();
            dataObjects_.add(index, builderForValue.build());
            onChanged();
          } else {
            dataObjectsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllDataObjects(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.RouteData> values) {
          if (dataObjectsBuilder_ == null) {
            ensureDataObjectsIsMutable();
            super.addAll(values, dataObjects_);
            onChanged();
          } else {
            dataObjectsBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearDataObjects() {
          if (dataObjectsBuilder_ == null) {
            dataObjects_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            dataObjectsBuilder_.clear();
          }
          return this;
        }
        public Builder removeDataObjects(int index) {
          if (dataObjectsBuilder_ == null) {
            ensureDataObjectsIsMutable();
            dataObjects_.remove(index);
            onChanged();
          } else {
            dataObjectsBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.RouteData.Builder getDataObjectsBuilder(
            int index) {
          return getDataObjectsFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.RouteDataOrBuilder getDataObjectsOrBuilder(
            int index) {
          if (dataObjectsBuilder_ == null) {
            return dataObjects_.get(index);  } else {
            return dataObjectsBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.RouteDataOrBuilder> 
             getDataObjectsOrBuilderList() {
          if (dataObjectsBuilder_ != null) {
            return dataObjectsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(dataObjects_);
          }
        }
        public net.osmand.binary.OsmandOdb.RouteData.Builder addDataObjectsBuilder() {
          return getDataObjectsFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.RouteData.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.RouteData.Builder addDataObjectsBuilder(
            int index) {
          return getDataObjectsFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.RouteData.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.RouteData.Builder> 
             getDataObjectsBuilderList() {
          return getDataObjectsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.RouteData, net.osmand.binary.OsmandOdb.RouteData.Builder, net.osmand.binary.OsmandOdb.RouteDataOrBuilder> 
            getDataObjectsFieldBuilder() {
          if (dataObjectsBuilder_ == null) {
            dataObjectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.RouteData, net.osmand.binary.OsmandOdb.RouteData.Builder, net.osmand.binary.OsmandOdb.RouteDataOrBuilder>(
                    dataObjects_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            dataObjects_ = null;
          }
          return dataObjectsBuilder_;
        }
        
        // repeated .OsmAnd.OBF.RestrictionData restrictions = 7;
        private java.util.List<net.osmand.binary.OsmandOdb.RestrictionData> restrictions_ =
          java.util.Collections.emptyList();
        private void ensureRestrictionsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            restrictions_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.RestrictionData>(restrictions_);
            bitField0_ |= 0x00000004;
           }
        }
        
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.RestrictionData, net.osmand.binary.OsmandOdb.RestrictionData.Builder, net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder> restrictionsBuilder_;
        
        public java.util.List<net.osmand.binary.OsmandOdb.RestrictionData> getRestrictionsList() {
          if (restrictionsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(restrictions_);
          } else {
            return restrictionsBuilder_.getMessageList();
          }
        }
        public int getRestrictionsCount() {
          if (restrictionsBuilder_ == null) {
            return restrictions_.size();
          } else {
            return restrictionsBuilder_.getCount();
          }
        }
        public net.osmand.binary.OsmandOdb.RestrictionData getRestrictions(int index) {
          if (restrictionsBuilder_ == null) {
            return restrictions_.get(index);
          } else {
            return restrictionsBuilder_.getMessage(index);
          }
        }
        public Builder setRestrictions(
            int index, net.osmand.binary.OsmandOdb.RestrictionData value) {
          if (restrictionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRestrictionsIsMutable();
            restrictions_.set(index, value);
            onChanged();
          } else {
            restrictionsBuilder_.setMessage(index, value);
          }
          return this;
        }
        public Builder setRestrictions(
            int index, net.osmand.binary.OsmandOdb.RestrictionData.Builder builderForValue) {
          if (restrictionsBuilder_ == null) {
            ensureRestrictionsIsMutable();
            restrictions_.set(index, builderForValue.build());
            onChanged();
          } else {
            restrictionsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addRestrictions(net.osmand.binary.OsmandOdb.RestrictionData value) {
          if (restrictionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRestrictionsIsMutable();
            restrictions_.add(value);
            onChanged();
          } else {
            restrictionsBuilder_.addMessage(value);
          }
          return this;
        }
        public Builder addRestrictions(
            int index, net.osmand.binary.OsmandOdb.RestrictionData value) {
          if (restrictionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureRestrictionsIsMutable();
            restrictions_.add(index, value);
            onChanged();
          } else {
            restrictionsBuilder_.addMessage(index, value);
          }
          return this;
        }
        public Builder addRestrictions(
            net.osmand.binary.OsmandOdb.RestrictionData.Builder builderForValue) {
          if (restrictionsBuilder_ == null) {
            ensureRestrictionsIsMutable();
            restrictions_.add(builderForValue.build());
            onChanged();
          } else {
            restrictionsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        public Builder addRestrictions(
            int index, net.osmand.binary.OsmandOdb.RestrictionData.Builder builderForValue) {
          if (restrictionsBuilder_ == null) {
            ensureRestrictionsIsMutable();
            restrictions_.add(index, builderForValue.build());
            onChanged();
          } else {
            restrictionsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        public Builder addAllRestrictions(
            java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.RestrictionData> values) {
          if (restrictionsBuilder_ == null) {
            ensureRestrictionsIsMutable();
            super.addAll(values, restrictions_);
            onChanged();
          } else {
            restrictionsBuilder_.addAllMessages(values);
          }
          return this;
        }
        public Builder clearRestrictions() {
          if (restrictionsBuilder_ == null) {
            restrictions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            restrictionsBuilder_.clear();
          }
          return this;
        }
        public Builder removeRestrictions(int index) {
          if (restrictionsBuilder_ == null) {
            ensureRestrictionsIsMutable();
            restrictions_.remove(index);
            onChanged();
          } else {
            restrictionsBuilder_.remove(index);
          }
          return this;
        }
        public net.osmand.binary.OsmandOdb.RestrictionData.Builder getRestrictionsBuilder(
            int index) {
          return getRestrictionsFieldBuilder().getBuilder(index);
        }
        public net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder getRestrictionsOrBuilder(
            int index) {
          if (restrictionsBuilder_ == null) {
            return restrictions_.get(index);  } else {
            return restrictionsBuilder_.getMessageOrBuilder(index);
          }
        }
        public java.util.List<? extends net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder> 
             getRestrictionsOrBuilderList() {
          if (restrictionsBuilder_ != null) {
            return restrictionsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(restrictions_);
          }
        }
        public net.osmand.binary.OsmandOdb.RestrictionData.Builder addRestrictionsBuilder() {
          return getRestrictionsFieldBuilder().addBuilder(
              net.osmand.binary.OsmandOdb.RestrictionData.getDefaultInstance());
        }
        public net.osmand.binary.OsmandOdb.RestrictionData.Builder addRestrictionsBuilder(
            int index) {
          return getRestrictionsFieldBuilder().addBuilder(
              index, net.osmand.binary.OsmandOdb.RestrictionData.getDefaultInstance());
        }
        public java.util.List<net.osmand.binary.OsmandOdb.RestrictionData.Builder> 
             getRestrictionsBuilderList() {
          return getRestrictionsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            net.osmand.binary.OsmandOdb.RestrictionData, net.osmand.binary.OsmandOdb.RestrictionData.Builder, net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder> 
            getRestrictionsFieldBuilder() {
          if (restrictionsBuilder_ == null) {
            restrictionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                net.osmand.binary.OsmandOdb.RestrictionData, net.osmand.binary.OsmandOdb.RestrictionData.Builder, net.osmand.binary.OsmandOdb.RestrictionDataOrBuilder>(
                    restrictions_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            restrictions_ = null;
          }
          return restrictionsBuilder_;
        }
        
        // optional .OsmAnd.OBF.StringTable stringTable = 8;
        private net.osmand.binary.OsmandOdb.StringTable stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> stringTableBuilder_;
        public boolean hasStringTable() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public net.osmand.binary.OsmandOdb.StringTable getStringTable() {
          if (stringTableBuilder_ == null) {
            return stringTable_;
          } else {
            return stringTableBuilder_.getMessage();
          }
        }
        public Builder setStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
          if (stringTableBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stringTable_ = value;
            onChanged();
          } else {
            stringTableBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder setStringTable(
            net.osmand.binary.OsmandOdb.StringTable.Builder builderForValue) {
          if (stringTableBuilder_ == null) {
            stringTable_ = builderForValue.build();
            onChanged();
          } else {
            stringTableBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder mergeStringTable(net.osmand.binary.OsmandOdb.StringTable value) {
          if (stringTableBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                stringTable_ != net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance()) {
              stringTable_ =
                net.osmand.binary.OsmandOdb.StringTable.newBuilder(stringTable_).mergeFrom(value).buildPartial();
            } else {
              stringTable_ = value;
            }
            onChanged();
          } else {
            stringTableBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        public Builder clearStringTable() {
          if (stringTableBuilder_ == null) {
            stringTable_ = net.osmand.binary.OsmandOdb.StringTable.getDefaultInstance();
            onChanged();
          } else {
            stringTableBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        public net.osmand.binary.OsmandOdb.StringTable.Builder getStringTableBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getStringTableFieldBuilder().getBuilder();
        }
        public net.osmand.binary.OsmandOdb.StringTableOrBuilder getStringTableOrBuilder() {
          if (stringTableBuilder_ != null) {
            return stringTableBuilder_.getMessageOrBuilder();
          } else {
            return stringTable_;
          }
        }
        private com.google.protobuf.SingleFieldBuilder<
            net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder> 
            getStringTableFieldBuilder() {
          if (stringTableBuilder_ == null) {
            stringTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                net.osmand.binary.OsmandOdb.StringTable, net.osmand.binary.OsmandOdb.StringTable.Builder, net.osmand.binary.OsmandOdb.StringTableOrBuilder>(
                    stringTable_,
                    getParentForChildren(),
                    isClean());
            stringTable_ = null;
          }
          return stringTableBuilder_;
        }
        
        // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBlock)
      }
      
      static {
        defaultInstance = new RouteDataBlock(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBlock)
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteEncodingRule rules = 2;
    public static final int RULES_FIELD_NUMBER = 2;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> rules_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> getRulesList() {
      return rules_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    public int getRulesCount() {
      return rules_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule getRules(int index) {
      return rules_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox rootBoxes = 3;
    public static final int ROOTBOXES_FIELD_NUMBER = 3;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> rootBoxes_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getRootBoxesList() {
      return rootBoxes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
        getRootBoxesOrBuilderList() {
      return rootBoxes_;
    }
    public int getRootBoxesCount() {
      return rootBoxes_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getRootBoxes(int index) {
      return rootBoxes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getRootBoxesOrBuilder(
        int index) {
      return rootBoxes_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox basemapBoxes = 4;
    public static final int BASEMAPBOXES_FIELD_NUMBER = 4;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> basemapBoxes_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getBasemapBoxesList() {
      return basemapBoxes_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
        getBasemapBoxesOrBuilderList() {
      return basemapBoxes_;
    }
    public int getBasemapBoxesCount() {
      return basemapBoxes_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBasemapBoxes(int index) {
      return basemapBoxes_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBasemapBoxesOrBuilder(
        int index) {
      return basemapBoxes_.get(index);
    }
    
    // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBlock blocks = 5;
    public static final int BLOCKS_FIELD_NUMBER = 5;
    private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> blocks_;
    public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> getBlocksList() {
      return blocks_;
    }
    public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder> 
        getBlocksOrBuilderList() {
      return blocks_;
    }
    public int getBlocksCount() {
      return blocks_.size();
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock getBlocks(int index) {
      return blocks_.get(index);
    }
    public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder getBlocksOrBuilder(
        int index) {
      return blocks_.get(index);
    }
    
    private void initFields() {
      name_ = "";
      rules_ = java.util.Collections.emptyList();
      rootBoxes_ = java.util.Collections.emptyList();
      basemapBoxes_ = java.util.Collections.emptyList();
      blocks_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRulesCount(); i++) {
        if (!getRules(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRootBoxesCount(); i++) {
        if (!getRootBoxes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBasemapBoxesCount(); i++) {
        if (!getBasemapBoxes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBlocksCount(); i++) {
        if (!getBlocks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(2, rules_.get(i));
      }
      for (int i = 0; i < rootBoxes_.size(); i++) {
        output.writeMessage(3, rootBoxes_.get(i));
      }
      for (int i = 0; i < basemapBoxes_.size(); i++) {
        output.writeMessage(4, basemapBoxes_.get(i));
      }
      for (int i = 0; i < blocks_.size(); i++) {
        output.writeMessage(5, blocks_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rules_.get(i));
      }
      for (int i = 0; i < rootBoxes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, rootBoxes_.get(i));
      }
      for (int i = 0; i < basemapBoxes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, basemapBoxes_.get(i));
      }
      for (int i = 0; i < blocks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, blocks_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.osmand.binary.OsmandOdb.OsmAndRoutingIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.osmand.binary.OsmandOdb.OsmAndRoutingIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.osmand.binary.OsmandOdb.internal_static_OsmAnd_OBF_OsmAndRoutingIndex_fieldAccessorTable;
      }
      
      // Construct using net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRulesFieldBuilder();
          getRootBoxesFieldBuilder();
          getBasemapBoxesFieldBuilder();
          getBlocksFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rulesBuilder_.clear();
        }
        if (rootBoxesBuilder_ == null) {
          rootBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rootBoxesBuilder_.clear();
        }
        if (basemapBoxesBuilder_ == null) {
          basemapBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          basemapBoxesBuilder_.clear();
        }
        if (blocksBuilder_ == null) {
          blocks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          blocksBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.getDescriptor();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex getDefaultInstanceForType() {
        return net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.getDefaultInstance();
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex build() {
        net.osmand.binary.OsmandOdb.OsmAndRoutingIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private net.osmand.binary.OsmandOdb.OsmAndRoutingIndex buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        net.osmand.binary.OsmandOdb.OsmAndRoutingIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex buildPartial() {
        net.osmand.binary.OsmandOdb.OsmAndRoutingIndex result = new net.osmand.binary.OsmandOdb.OsmAndRoutingIndex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
        if (rootBoxesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            rootBoxes_ = java.util.Collections.unmodifiableList(rootBoxes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.rootBoxes_ = rootBoxes_;
        } else {
          result.rootBoxes_ = rootBoxesBuilder_.build();
        }
        if (basemapBoxesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            basemapBoxes_ = java.util.Collections.unmodifiableList(basemapBoxes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.basemapBoxes_ = basemapBoxes_;
        } else {
          result.basemapBoxes_ = basemapBoxesBuilder_.build();
        }
        if (blocksBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            blocks_ = java.util.Collections.unmodifiableList(blocks_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.blocks_ = blocks_;
        } else {
          result.blocks_ = blocksBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.osmand.binary.OsmandOdb.OsmAndRoutingIndex) {
          return mergeFrom((net.osmand.binary.OsmandOdb.OsmAndRoutingIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex other) {
        if (other == net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        if (rootBoxesBuilder_ == null) {
          if (!other.rootBoxes_.isEmpty()) {
            if (rootBoxes_.isEmpty()) {
              rootBoxes_ = other.rootBoxes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRootBoxesIsMutable();
              rootBoxes_.addAll(other.rootBoxes_);
            }
            onChanged();
          }
        } else {
          if (!other.rootBoxes_.isEmpty()) {
            if (rootBoxesBuilder_.isEmpty()) {
              rootBoxesBuilder_.dispose();
              rootBoxesBuilder_ = null;
              rootBoxes_ = other.rootBoxes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rootBoxesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRootBoxesFieldBuilder() : null;
            } else {
              rootBoxesBuilder_.addAllMessages(other.rootBoxes_);
            }
          }
        }
        if (basemapBoxesBuilder_ == null) {
          if (!other.basemapBoxes_.isEmpty()) {
            if (basemapBoxes_.isEmpty()) {
              basemapBoxes_ = other.basemapBoxes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureBasemapBoxesIsMutable();
              basemapBoxes_.addAll(other.basemapBoxes_);
            }
            onChanged();
          }
        } else {
          if (!other.basemapBoxes_.isEmpty()) {
            if (basemapBoxesBuilder_.isEmpty()) {
              basemapBoxesBuilder_.dispose();
              basemapBoxesBuilder_ = null;
              basemapBoxes_ = other.basemapBoxes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              basemapBoxesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBasemapBoxesFieldBuilder() : null;
            } else {
              basemapBoxesBuilder_.addAllMessages(other.basemapBoxes_);
            }
          }
        }
        if (blocksBuilder_ == null) {
          if (!other.blocks_.isEmpty()) {
            if (blocks_.isEmpty()) {
              blocks_ = other.blocks_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBlocksIsMutable();
              blocks_.addAll(other.blocks_);
            }
            onChanged();
          }
        } else {
          if (!other.blocks_.isEmpty()) {
            if (blocksBuilder_.isEmpty()) {
              blocksBuilder_.dispose();
              blocksBuilder_ = null;
              blocks_ = other.blocks_;
              bitField0_ = (bitField0_ & ~0x00000010);
              blocksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBlocksFieldBuilder() : null;
            } else {
              blocksBuilder_.addAllMessages(other.blocks_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getRulesCount(); i++) {
          if (!getRules(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRootBoxesCount(); i++) {
          if (!getRootBoxes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBasemapBoxesCount(); i++) {
          if (!getBasemapBoxes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBlocksCount(); i++) {
          if (!getBlocks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRules(subBuilder.buildPartial());
              break;
            }
            case 26: {
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRootBoxes(subBuilder.buildPartial());
              break;
            }
            case 34: {
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBasemapBoxes(subBuilder.buildPartial());
              break;
            }
            case 42: {
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder subBuilder = net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBlocks(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteEncodingRule rules = 2;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rules_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule>(rules_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder> rulesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      public Builder setRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRules(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRules(
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRules(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRules(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          super.addAll(values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox rootBoxes = 3;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> rootBoxes_ =
        java.util.Collections.emptyList();
      private void ensureRootBoxesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          rootBoxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox>(rootBoxes_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> rootBoxesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getRootBoxesList() {
        if (rootBoxesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rootBoxes_);
        } else {
          return rootBoxesBuilder_.getMessageList();
        }
      }
      public int getRootBoxesCount() {
        if (rootBoxesBuilder_ == null) {
          return rootBoxes_.size();
        } else {
          return rootBoxesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getRootBoxes(int index) {
        if (rootBoxesBuilder_ == null) {
          return rootBoxes_.get(index);
        } else {
          return rootBoxesBuilder_.getMessage(index);
        }
      }
      public Builder setRootBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (rootBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootBoxesIsMutable();
          rootBoxes_.set(index, value);
          onChanged();
        } else {
          rootBoxesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRootBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (rootBoxesBuilder_ == null) {
          ensureRootBoxesIsMutable();
          rootBoxes_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootBoxesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRootBoxes(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (rootBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootBoxesIsMutable();
          rootBoxes_.add(value);
          onChanged();
        } else {
          rootBoxesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRootBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (rootBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootBoxesIsMutable();
          rootBoxes_.add(index, value);
          onChanged();
        } else {
          rootBoxesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRootBoxes(
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (rootBoxesBuilder_ == null) {
          ensureRootBoxesIsMutable();
          rootBoxes_.add(builderForValue.build());
          onChanged();
        } else {
          rootBoxesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRootBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (rootBoxesBuilder_ == null) {
          ensureRootBoxesIsMutable();
          rootBoxes_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootBoxesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRootBoxes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> values) {
        if (rootBoxesBuilder_ == null) {
          ensureRootBoxesIsMutable();
          super.addAll(values, rootBoxes_);
          onChanged();
        } else {
          rootBoxesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRootBoxes() {
        if (rootBoxesBuilder_ == null) {
          rootBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rootBoxesBuilder_.clear();
        }
        return this;
      }
      public Builder removeRootBoxes(int index) {
        if (rootBoxesBuilder_ == null) {
          ensureRootBoxesIsMutable();
          rootBoxes_.remove(index);
          onChanged();
        } else {
          rootBoxesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder getRootBoxesBuilder(
          int index) {
        return getRootBoxesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getRootBoxesOrBuilder(
          int index) {
        if (rootBoxesBuilder_ == null) {
          return rootBoxes_.get(index);  } else {
          return rootBoxesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
           getRootBoxesOrBuilderList() {
        if (rootBoxesBuilder_ != null) {
          return rootBoxesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rootBoxes_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addRootBoxesBuilder() {
        return getRootBoxesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addRootBoxesBuilder(
          int index) {
        return getRootBoxesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder> 
           getRootBoxesBuilderList() {
        return getRootBoxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
          getRootBoxesFieldBuilder() {
        if (rootBoxesBuilder_ == null) {
          rootBoxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder>(
                  rootBoxes_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          rootBoxes_ = null;
        }
        return rootBoxesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBox basemapBoxes = 4;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> basemapBoxes_ =
        java.util.Collections.emptyList();
      private void ensureBasemapBoxesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          basemapBoxes_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox>(basemapBoxes_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> basemapBoxesBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> getBasemapBoxesList() {
        if (basemapBoxesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(basemapBoxes_);
        } else {
          return basemapBoxesBuilder_.getMessageList();
        }
      }
      public int getBasemapBoxesCount() {
        if (basemapBoxesBuilder_ == null) {
          return basemapBoxes_.size();
        } else {
          return basemapBoxesBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox getBasemapBoxes(int index) {
        if (basemapBoxesBuilder_ == null) {
          return basemapBoxes_.get(index);
        } else {
          return basemapBoxesBuilder_.getMessage(index);
        }
      }
      public Builder setBasemapBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (basemapBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.set(index, value);
          onChanged();
        } else {
          basemapBoxesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBasemapBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (basemapBoxesBuilder_ == null) {
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.set(index, builderForValue.build());
          onChanged();
        } else {
          basemapBoxesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBasemapBoxes(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (basemapBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.add(value);
          onChanged();
        } else {
          basemapBoxesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBasemapBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox value) {
        if (basemapBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.add(index, value);
          onChanged();
        } else {
          basemapBoxesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBasemapBoxes(
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (basemapBoxesBuilder_ == null) {
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.add(builderForValue.build());
          onChanged();
        } else {
          basemapBoxesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBasemapBoxes(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder builderForValue) {
        if (basemapBoxesBuilder_ == null) {
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.add(index, builderForValue.build());
          onChanged();
        } else {
          basemapBoxesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBasemapBoxes(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox> values) {
        if (basemapBoxesBuilder_ == null) {
          ensureBasemapBoxesIsMutable();
          super.addAll(values, basemapBoxes_);
          onChanged();
        } else {
          basemapBoxesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBasemapBoxes() {
        if (basemapBoxesBuilder_ == null) {
          basemapBoxes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          basemapBoxesBuilder_.clear();
        }
        return this;
      }
      public Builder removeBasemapBoxes(int index) {
        if (basemapBoxesBuilder_ == null) {
          ensureBasemapBoxesIsMutable();
          basemapBoxes_.remove(index);
          onChanged();
        } else {
          basemapBoxesBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder getBasemapBoxesBuilder(
          int index) {
        return getBasemapBoxesFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder getBasemapBoxesOrBuilder(
          int index) {
        if (basemapBoxesBuilder_ == null) {
          return basemapBoxes_.get(index);  } else {
          return basemapBoxesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
           getBasemapBoxesOrBuilderList() {
        if (basemapBoxesBuilder_ != null) {
          return basemapBoxesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(basemapBoxes_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addBasemapBoxesBuilder() {
        return getBasemapBoxesFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder addBasemapBoxesBuilder(
          int index) {
        return getBasemapBoxesFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder> 
           getBasemapBoxesBuilderList() {
        return getBasemapBoxesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder> 
          getBasemapBoxesFieldBuilder() {
        if (basemapBoxesBuilder_ == null) {
          basemapBoxesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBoxOrBuilder>(
                  basemapBoxes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          basemapBoxes_ = null;
        }
        return basemapBoxesBuilder_;
      }
      
      // repeated .OsmAnd.OBF.OsmAndRoutingIndex.RouteDataBlock blocks = 5;
      private java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> blocks_ =
        java.util.Collections.emptyList();
      private void ensureBlocksIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          blocks_ = new java.util.ArrayList<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock>(blocks_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder> blocksBuilder_;
      
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> getBlocksList() {
        if (blocksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(blocks_);
        } else {
          return blocksBuilder_.getMessageList();
        }
      }
      public int getBlocksCount() {
        if (blocksBuilder_ == null) {
          return blocks_.size();
        } else {
          return blocksBuilder_.getCount();
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock getBlocks(int index) {
        if (blocksBuilder_ == null) {
          return blocks_.get(index);
        } else {
          return blocksBuilder_.getMessage(index);
        }
      }
      public Builder setBlocks(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.set(index, value);
          onChanged();
        } else {
          blocksBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setBlocks(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.set(index, builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addBlocks(net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.add(value);
          onChanged();
        } else {
          blocksBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addBlocks(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock value) {
        if (blocksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBlocksIsMutable();
          blocks_.add(index, value);
          onChanged();
        } else {
          blocksBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addBlocks(
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.add(builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addBlocks(
          int index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder builderForValue) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.add(index, builderForValue.build());
          onChanged();
        } else {
          blocksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllBlocks(
          java.lang.Iterable<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock> values) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          super.addAll(values, blocks_);
          onChanged();
        } else {
          blocksBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearBlocks() {
        if (blocksBuilder_ == null) {
          blocks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          blocksBuilder_.clear();
        }
        return this;
      }
      public Builder removeBlocks(int index) {
        if (blocksBuilder_ == null) {
          ensureBlocksIsMutable();
          blocks_.remove(index);
          onChanged();
        } else {
          blocksBuilder_.remove(index);
        }
        return this;
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder getBlocksBuilder(
          int index) {
        return getBlocksFieldBuilder().getBuilder(index);
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder getBlocksOrBuilder(
          int index) {
        if (blocksBuilder_ == null) {
          return blocks_.get(index);  } else {
          return blocksBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder> 
           getBlocksOrBuilderList() {
        if (blocksBuilder_ != null) {
          return blocksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(blocks_);
        }
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder addBlocksBuilder() {
        return getBlocksFieldBuilder().addBuilder(
            net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.getDefaultInstance());
      }
      public net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder addBlocksBuilder(
          int index) {
        return getBlocksFieldBuilder().addBuilder(
            index, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.getDefaultInstance());
      }
      public java.util.List<net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder> 
           getBlocksBuilderList() {
        return getBlocksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder> 
          getBlocksFieldBuilder() {
        if (blocksBuilder_ == null) {
          blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder, net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlockOrBuilder>(
                  blocks_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          blocks_ = null;
        }
        return blocksBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:OsmAnd.OBF.OsmAndRoutingIndex)
    }
    
    static {
      defaultInstance = new OsmAndRoutingIndex(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:OsmAnd.OBF.OsmAndRoutingIndex)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndStructure_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndStructure_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndTileBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndTileBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_StringTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_StringTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_IndexedStringTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_IndexedStringTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndMapIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_MapDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_MapDataBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_MapData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_MapData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndAddressIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_CityIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_CityIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_CityBlockIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_CityBlockIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_StreetIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_StreetIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_StreetIntersection_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_StreetIntersection_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_BuildingIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_BuildingIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_TransportRoutes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_TransportRoutes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_TransportRoute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_TransportRoute_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_TransportRouteStop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_TransportRouteStop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_TransportStop_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_TransportStop_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_TransportStopsTree_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_TransportStopsTree_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndTransportIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndTransportIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndCategoryTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndCategoryTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndSubtypesTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndSubtypesTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiSubtype_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiSubtype_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiCategories_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiCategories_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiBoxData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiBoxData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_IdTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_IdTable_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_RestrictionData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_RestrictionData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_RouteData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_RouteData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndRoutingIndex_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tOBF.proto\022\nOsmAnd.OBF\"\321\002\n\017OsmAndStruct" +
      "ure\022\017\n\007version\030\001 \002(\r\022\023\n\013dateCreated\030\022 \002(" +
      "\003\0224\n\014addressIndex\030\007 \003(\0132\036.OsmAnd.OBF.Osm" +
      "AndAddressIndex\0228\n\016transportIndex\030\004 \003(\0132" +
      " .OsmAnd.OBF.OsmAndTransportIndex\022,\n\010poi" +
      "Index\030\010 \003(\0132\032.OsmAnd.OBF.OsmAndPoiIndex\022" +
      ",\n\010mapIndex\030\006 \003(\0132\032.OsmAnd.OBF.OsmAndMap" +
      "Index\0224\n\014routingIndex\030\t \003(\0132\036.OsmAnd.OBF" +
      ".OsmAndRoutingIndex\022\026\n\016versionConfirm\030  " +
      "\002(\r\"I\n\rOsmAndTileBox\022\014\n\004left\030\001 \002(\r\022\r\n\005ri",
      "ght\030\002 \002(\r\022\013\n\003top\030\003 \002(\r\022\016\n\006bottom\030\004 \002(\r\"\030" +
      "\n\013StringTable\022\t\n\001s\030\001 \003(\t\"q\n\022IndexedStrin" +
      "gTable\022\016\n\006prefix\030\001 \001(\t\022\013\n\003key\030\003 \003(\t\022\013\n\003v" +
      "al\030\004 \003(\007\0221\n\tsubtables\030\005 \003(\0132\036.OsmAnd.OBF" +
      ".IndexedStringTable\"\337\004\n\016OsmAndMapIndex\022\014" +
      "\n\004name\030\002 \002(\t\0229\n\005rules\030\004 \003(\0132*.OsmAnd.OBF" +
      ".OsmAndMapIndex.MapEncodingRule\0227\n\006level" +
      "s\030\005 \003(\0132\'.OsmAnd.OBF.OsmAndMapIndex.MapR" +
      "ootLevel\032X\n\017MapEncodingRule\022\013\n\003tag\030\003 \002(\t" +
      "\022\r\n\005value\030\005 \001(\t\022\n\n\002id\030\007 \001(\r\022\017\n\007minZoom\030\t",
      " \001(\r\022\014\n\004type\030\n \001(\r\032\312\001\n\014MapRootLevel\022\017\n\007m" +
      "axZoom\030\001 \002(\005\022\017\n\007minZoom\030\002 \002(\005\022\014\n\004left\030\003 " +
      "\002(\005\022\r\n\005right\030\004 \002(\005\022\013\n\003top\030\005 \002(\005\022\016\n\006botto" +
      "m\030\006 \002(\005\0224\n\005boxes\030\007 \003(\0132%.OsmAnd.OBF.OsmA" +
      "ndMapIndex.MapDataBox\022(\n\006blocks\030\017 \003(\0132\030." +
      "OsmAnd.OBF.MapDataBlock\032\243\001\n\nMapDataBox\022\014" +
      "\n\004left\030\001 \002(\021\022\r\n\005right\030\002 \002(\021\022\013\n\003top\030\003 \002(\021" +
      "\022\016\n\006bottom\030\004 \002(\021\022\026\n\016shiftToMapData\030\005 \001(\007" +
      "\022\r\n\005ocean\030\006 \001(\010\0224\n\005boxes\030\007 \003(\0132%.OsmAnd." +
      "OBF.OsmAndMapIndex.MapDataBox\"v\n\014MapData",
      "Block\022\016\n\006baseId\030\n \001(\004\022(\n\013dataObjects\030\014 \003" +
      "(\0132\023.OsmAnd.OBF.MapData\022,\n\013stringTable\030\017" +
      " \001(\0132\027.OsmAnd.OBF.StringTable\"\266\001\n\007MapDat" +
      "a\022\023\n\013coordinates\030\001 \001(\014\022\027\n\017areaCoordinate" +
      "s\030\002 \001(\014\022\037\n\027polygonInnerCoordinates\030\004 \003(\014" +
      "\022\027\n\017additionalTypes\030\006 \001(\014\022\r\n\005types\030\007 \002(\014" +
      "\022\023\n\013stringNames\030\n \001(\014\022\n\n\002id\030\014 \002(\022\022\023\n\013ras" +
      "terBytes\030\017 \001(\014\"\364\003\n\022OsmAndAddressIndex\022\014\n" +
      "\004name\030\001 \002(\t\022\017\n\007name_en\030\002 \001(\t\022-\n\nboundari" +
      "es\030\003 \001(\0132\031.OsmAnd.OBF.OsmAndTileBox\022:\n\006c",
      "ities\030\006 \003(\0132*.OsmAnd.OBF.OsmAndAddressIn" +
      "dex.CitiesIndex\0229\n\tnameIndex\030\007 \001(\0132&.Osm" +
      "And.OBF.OsmAndAddressNameIndexData\0223\n\022at" +
      "tributeTagsTable\030\010 \001(\0132\027.OsmAnd.OBF.Stri" +
      "ngTable\032\343\001\n\013CitiesIndex\022C\n\004type\030\002 \002(\01625." +
      "OsmAnd.OBF.OsmAndAddressIndex.CitiesInde" +
      "x.CitiesType\022%\n\006cities\030\005 \003(\0132\025.OsmAnd.OB" +
      "F.CityIndex\022*\n\006blocks\030\007 \003(\0132\032.OsmAnd.OBF" +
      ".CityBlockIndex\"<\n\nCitiesType\022\021\n\rCitiesO" +
      "rTowns\020\001\022\r\n\tPostcodes\020\002\022\014\n\010Villages\020\003\"\342\001",
      "\n\032OsmAndAddressNameIndexData\022-\n\005table\030\004 " +
      "\002(\0132\036.OsmAnd.OBF.IndexedStringTable\022I\n\004a" +
      "tom\030\007 \003(\0132;.OsmAnd.OBF.OsmAndAddressName" +
      "IndexData.AddressNameIndexData\032J\n\024Addres" +
      "sNameIndexData\0222\n\004atom\030\004 \003(\0132$.OsmAnd.OB" +
      "F.AddressNameIndexDataAtom\"v\n\030AddressNam" +
      "eIndexDataAtom\022\014\n\004name\030\001 \001(\t\022\016\n\006nameEn\030\002" +
      " \001(\t\022\014\n\004type\030\003 \002(\r\022\024\n\014shiftToIndex\030\005 \003(\005" +
      "\022\030\n\020shiftToCityIndex\030\006 \003(\005\"\260\001\n\tCityIndex" +
      "\022\021\n\tcity_type\030\001 \001(\r\022\014\n\004name\030\002 \002(\t\022\017\n\007nam",
      "e_en\030\003 \001(\t\022\027\n\017attributeTagIds\030\013 \003(\r\022\027\n\017a" +
      "ttributeValues\030\014 \003(\t\022\n\n\002id\030\004 \001(\004\022\t\n\001x\030\005 " +
      "\002(\r\022\t\n\001y\030\006 \002(\r\022\035\n\025shiftToCityBlockIndex\030" +
      "\n \001(\007\"\202\001\n\016CityBlockIndex\022\030\n\020shiftToCityI" +
      "ndex\030\004 \001(\007\022,\n\tbuildings\030\n \003(\0132\031.OsmAnd.O" +
      "BF.BuildingIndex\022(\n\007streets\030\014 \003(\0132\027.OsmA" +
      "nd.OBF.StreetIndex\"\345\001\n\013StreetIndex\022\014\n\004na" +
      "me\030\001 \002(\t\022\017\n\007name_en\030\002 \001(\t\022\027\n\017attributeTa" +
      "gIds\030\r \003(\r\022\027\n\017attributeValues\030\016 \003(\t\022\t\n\001x" +
      "\030\003 \002(\021\022\t\n\001y\030\004 \002(\021\022\n\n\002id\030\006 \001(\004\022,\n\tbuildin",
      "gs\030\014 \003(\0132\031.OsmAnd.OBF.BuildingIndex\0225\n\ri" +
      "ntersections\030\005 \003(\0132\036.OsmAnd.OBF.StreetIn" +
      "tersection\"\221\001\n\022StreetIntersection\022\014\n\004nam" +
      "e\030\002 \002(\t\022\017\n\007name_en\030\003 \001(\t\022\027\n\017attributeTag" +
      "Ids\030\006 \003(\r\022\027\n\017attributeValues\030\007 \003(\t\022\024\n\014in" +
      "tersectedX\030\004 \002(\021\022\024\n\014intersectedY\030\005 \002(\021\"\230" +
      "\002\n\rBuildingIndex\022\014\n\004name\030\001 \002(\t\022\017\n\007name_e" +
      "n\030\002 \001(\t\022\027\n\017attributeTagIds\030\017 \003(\r\022\027\n\017attr" +
      "ibuteValues\030\020 \003(\t\022\r\n\005name2\030\003 \001(\t\022\020\n\010name" +
      "_en2\030\004 \001(\t\022\030\n\020attributeTagIds2\030\021 \003(\r\022\030\n\020",
      "attributeValues2\030\022 \003(\t\022\025\n\rinterpolation\030" +
      "\005 \001(\021\022\t\n\001x\030\007 \002(\021\022\t\n\001y\030\010 \002(\021\022\n\n\002x2\030\t \001(\021\022" +
      "\n\n\002y2\030\n \001(\021\022\n\n\002id\030\r \001(\004\022\020\n\010postcode\030\016 \001(" +
      "\t\"=\n\017TransportRoutes\022*\n\006routes\030\006 \003(\0132\032.O" +
      "smAnd.OBF.TransportRoute\"\345\001\n\016TransportRo" +
      "ute\022\n\n\002id\030\001 \002(\004\022\014\n\004type\030\003 \001(\r\022\020\n\010operato" +
      "r\030\004 \001(\r\022\013\n\003ref\030\005 \001(\t\022\014\n\004name\030\006 \001(\r\022\017\n\007na" +
      "me_en\030\007 \001(\r\022\020\n\010distance\030\010 \001(\r\0223\n\013directS" +
      "tops\030\017 \003(\0132\036.OsmAnd.OBF.TransportRouteSt" +
      "op\0224\n\014reverseStops\030\020 \003(\0132\036.OsmAnd.OBF.Tr",
      "ansportRouteStop\"W\n\022TransportRouteStop\022\n" +
      "\n\002id\030\001 \002(\022\022\n\n\002dx\030\002 \002(\021\022\n\n\002dy\030\003 \002(\021\022\014\n\004na" +
      "me\030\006 \002(\r\022\017\n\007name_en\030\007 \001(\r\"b\n\rTransportSt" +
      "op\022\n\n\002dx\030\001 \002(\021\022\n\n\002dy\030\002 \002(\021\022\n\n\002id\030\005 \002(\022\022\014" +
      "\n\004name\030\006 \002(\r\022\017\n\007name_en\030\007 \001(\r\022\016\n\006routes\030" +
      "\020 \003(\r\"\272\001\n\022TransportStopsTree\022\014\n\004left\030\001 \002" +
      "(\021\022\r\n\005right\030\002 \002(\021\022\013\n\003top\030\003 \002(\021\022\016\n\006bottom" +
      "\030\004 \002(\021\0220\n\010subtrees\030\007 \003(\0132\036.OsmAnd.OBF.Tr" +
      "ansportStopsTree\022(\n\005leafs\030\010 \003(\0132\031.OsmAnd" +
      ".OBF.TransportStop\022\016\n\006baseId\030\020 \001(\004\"\256\001\n\024O",
      "smAndTransportIndex\022\014\n\004name\030\001 \001(\t\022+\n\006rou" +
      "tes\030\003 \001(\0132\033.OsmAnd.OBF.TransportRoutes\022-" +
      "\n\005stops\030\006 \001(\0132\036.OsmAnd.OBF.TransportStop" +
      "sTree\022,\n\013stringTable\030\t \002(\0132\027.OsmAnd.OBF." +
      "StringTable\"\312\002\n\016OsmAndPoiIndex\022\014\n\004name\030\001" +
      " \002(\t\022-\n\nboundaries\030\002 \002(\0132\031.OsmAnd.OBF.Os" +
      "mAndTileBox\0228\n\017categoriesTable\030\003 \003(\0132\037.O" +
      "smAnd.OBF.OsmAndCategoryTable\0221\n\tnameInd" +
      "ex\030\004 \001(\0132\036.OsmAnd.OBF.OsmAndPoiNameIndex" +
      "\0226\n\rsubtypesTable\030\005 \001(\0132\037.OsmAnd.OBF.Osm",
      "AndSubtypesTable\022\'\n\005boxes\030\006 \003(\0132\030.OsmAnd" +
      ".OBF.OsmAndPoiBox\022-\n\007poiData\030\t \003(\0132\034.Osm" +
      "And.OBF.OsmAndPoiBoxData\"\331\001\n\022OsmAndPoiNa" +
      "meIndex\022-\n\005table\030\003 \002(\0132\036.OsmAnd.OBF.Inde" +
      "xedStringTable\022C\n\004data\030\005 \003(\01325.OsmAnd.OB" +
      "F.OsmAndPoiNameIndex.OsmAndPoiNameIndexD" +
      "ata\032O\n\026OsmAndPoiNameIndexData\0225\n\005atoms\030\003" +
      " \003(\0132&.OsmAnd.OBF.OsmAndPoiNameIndexData" +
      "Atom\"Q\n\032OsmAndPoiNameIndexDataAtom\022\014\n\004zo" +
      "om\030\002 \001(\r\022\t\n\001x\030\003 \001(\r\022\t\n\001y\030\004 \001(\r\022\017\n\007shiftT",
      "o\030\016 \001(\007\">\n\023OsmAndCategoryTable\022\020\n\010catego" +
      "ry\030\001 \002(\t\022\025\n\rsubcategories\030\003 \003(\t\"E\n\023OsmAn" +
      "dSubtypesTable\022.\n\010subtypes\030\004 \003(\0132\034.OsmAn" +
      "d.OBF.OsmAndPoiSubtype\"\205\001\n\020OsmAndPoiSubt" +
      "ype\022\014\n\004name\030\001 \002(\t\022\017\n\007tagname\030\002 \001(\t\022\016\n\006is" +
      "Text\030\003 \002(\010\022\021\n\tfrequency\030\005 \001(\r\022\031\n\021subtype" +
      "ValuesSize\030\006 \001(\r\022\024\n\014subtypeValue\030\010 \003(\t\"\255" +
      "\001\n\014OsmAndPoiBox\022\014\n\004zoom\030\001 \002(\r\022\014\n\004left\030\002 " +
      "\002(\021\022\013\n\003top\030\003 \002(\021\0223\n\ncategories\030\004 \001(\0132\037.O" +
      "smAnd.OBF.OsmAndPoiCategories\022*\n\010subBoxe",
      "s\030\n \003(\0132\030.OsmAnd.OBF.OsmAndPoiBox\022\023\n\013shi" +
      "ftToData\030\016 \001(\007\"@\n\023OsmAndPoiCategories\022\022\n" +
      "\ncategories\030\003 \003(\r\022\025\n\rsubcategories\030\005 \003(\r" +
      "\"i\n\020OsmAndPoiBoxData\022\014\n\004zoom\030\001 \001(\r\022\t\n\001x\030" +
      "\002 \001(\r\022\t\n\001y\030\003 \001(\r\0221\n\007poiData\030\005 \003(\0132 .OsmA" +
      "nd.OBF.OsmAndPoiBoxDataAtom\"\360\001\n\024OsmAndPo" +
      "iBoxDataAtom\022\n\n\002dx\030\002 \002(\021\022\n\n\002dy\030\003 \002(\021\022\022\n\n" +
      "categories\030\004 \003(\r\022\025\n\rsubcategories\030\005 \003(\r\022" +
      "\014\n\004name\030\006 \001(\t\022\016\n\006nameEn\030\007 \001(\t\022\n\n\002id\030\010 \001(" +
      "\004\022\024\n\014openingHours\030\n \001(\t\022\014\n\004site\030\013 \001(\t\022\r\n",
      "\005phone\030\014 \001(\t\022\014\n\004note\030\r \001(\t\022\026\n\016textCatego" +
      "ries\030\016 \003(\r\022\022\n\ntextValues\030\017 \003(\t\"\032\n\007IdTabl" +
      "e\022\017\n\007routeId\030\001 \003(\022\"F\n\017RestrictionData\022\014\n" +
      "\004type\030\001 \002(\005\022\014\n\004from\030\002 \002(\005\022\n\n\002to\030\003 \002(\005\022\013\n" +
      "\003via\030\004 \001(\005\"d\n\tRouteData\022\016\n\006points\030\001 \002(\014\022" +
      "\022\n\npointTypes\030\004 \001(\014\022\r\n\005types\030\007 \002(\014\022\017\n\007ro" +
      "uteId\030\014 \002(\005\022\023\n\013stringNames\030\016 \001(\014\"\304\005\n\022Osm" +
      "AndRoutingIndex\022\014\n\004name\030\001 \002(\t\022?\n\005rules\030\002" +
      " \003(\01320.OsmAnd.OBF.OsmAndRoutingIndex.Rou" +
      "teEncodingRule\022>\n\trootBoxes\030\003 \003(\0132+.OsmA",
      "nd.OBF.OsmAndRoutingIndex.RouteDataBox\022A" +
      "\n\014basemapBoxes\030\004 \003(\0132+.OsmAnd.OBF.OsmAnd" +
      "RoutingIndex.RouteDataBox\022=\n\006blocks\030\005 \003(" +
      "\0132-.OsmAnd.OBF.OsmAndRoutingIndex.RouteD" +
      "ataBlock\032;\n\021RouteEncodingRule\022\013\n\003tag\030\003 \002" +
      "(\t\022\r\n\005value\030\005 \002(\t\022\n\n\002id\030\007 \001(\r\032\231\001\n\014RouteD" +
      "ataBox\022\014\n\004left\030\001 \002(\021\022\r\n\005right\030\002 \002(\021\022\013\n\003t" +
      "op\030\003 \002(\021\022\016\n\006bottom\030\004 \002(\021\022\023\n\013shiftToData\030" +
      "\005 \001(\007\022:\n\005boxes\030\007 \003(\0132+.OsmAnd.OBF.OsmAnd" +
      "RoutingIndex.RouteDataBox\032\303\001\n\016RouteDataB",
      "lock\022$\n\007idTable\030\005 \001(\0132\023.OsmAnd.OBF.IdTab" +
      "le\022*\n\013dataObjects\030\006 \003(\0132\025.OsmAnd.OBF.Rou" +
      "teData\0221\n\014restrictions\030\007 \003(\0132\033.OsmAnd.OB" +
      "F.RestrictionData\022,\n\013stringTable\030\010 \001(\0132\027" +
      ".OsmAnd.OBF.StringTableB\036\n\021net.osmand.bi" +
      "naryB\tOsmandOdb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_OsmAnd_OBF_OsmAndStructure_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndStructure_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndStructure_descriptor,
              new java.lang.String[] { "Version", "DateCreated", "AddressIndex", "TransportIndex", "PoiIndex", "MapIndex", "RoutingIndex", "VersionConfirm", },
              net.osmand.binary.OsmandOdb.OsmAndStructure.class,
              net.osmand.binary.OsmandOdb.OsmAndStructure.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndTileBox_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_OsmAnd_OBF_OsmAndTileBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndTileBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", },
              net.osmand.binary.OsmandOdb.OsmAndTileBox.class,
              net.osmand.binary.OsmandOdb.OsmAndTileBox.Builder.class);
          internal_static_OsmAnd_OBF_StringTable_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_OsmAnd_OBF_StringTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_StringTable_descriptor,
              new java.lang.String[] { "S", },
              net.osmand.binary.OsmandOdb.StringTable.class,
              net.osmand.binary.OsmandOdb.StringTable.Builder.class);
          internal_static_OsmAnd_OBF_IndexedStringTable_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_OsmAnd_OBF_IndexedStringTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_IndexedStringTable_descriptor,
              new java.lang.String[] { "Prefix", "Key", "Val", "Subtables", },
              net.osmand.binary.OsmandOdb.IndexedStringTable.class,
              net.osmand.binary.OsmandOdb.IndexedStringTable.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor,
              new java.lang.String[] { "Name", "Rules", "Levels", },
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_descriptor =
            internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor.getNestedTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndMapIndex_MapEncodingRule_descriptor,
              new java.lang.String[] { "Tag", "Value", "Id", "MinZoom", "Type", },
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.class,
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapEncodingRule.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_descriptor =
            internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor.getNestedTypes().get(1);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndMapIndex_MapRootLevel_descriptor,
              new java.lang.String[] { "MaxZoom", "MinZoom", "Left", "Right", "Top", "Bottom", "Boxes", "Blocks", },
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.class,
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapRootLevel.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_descriptor =
            internal_static_OsmAnd_OBF_OsmAndMapIndex_descriptor.getNestedTypes().get(2);
          internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndMapIndex_MapDataBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "ShiftToMapData", "Ocean", "Boxes", },
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.class,
              net.osmand.binary.OsmandOdb.OsmAndMapIndex.MapDataBox.Builder.class);
          internal_static_OsmAnd_OBF_MapDataBlock_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_OsmAnd_OBF_MapDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_MapDataBlock_descriptor,
              new java.lang.String[] { "BaseId", "DataObjects", "StringTable", },
              net.osmand.binary.OsmandOdb.MapDataBlock.class,
              net.osmand.binary.OsmandOdb.MapDataBlock.Builder.class);
          internal_static_OsmAnd_OBF_MapData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_OsmAnd_OBF_MapData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_MapData_descriptor,
              new java.lang.String[] { "Coordinates", "AreaCoordinates", "PolygonInnerCoordinates", "AdditionalTypes", "Types", "StringNames", "Id", "RasterBytes", },
              net.osmand.binary.OsmandOdb.MapData.class,
              net.osmand.binary.OsmandOdb.MapData.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_OsmAnd_OBF_OsmAndAddressIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "Boundaries", "Cities", "NameIndex", "AttributeTagsTable", },
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_descriptor =
            internal_static_OsmAnd_OBF_OsmAndAddressIndex_descriptor.getNestedTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndAddressIndex_CitiesIndex_descriptor,
              new java.lang.String[] { "Type", "Cities", "Blocks", },
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndAddressIndex.CitiesIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor,
              new java.lang.String[] { "Table", "Atom", },
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.class,
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_descriptor =
            internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_descriptor.getNestedTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndAddressNameIndexData_AddressNameIndexData_descriptor,
              new java.lang.String[] { "Atom", },
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.class,
              net.osmand.binary.OsmandOdb.OsmAndAddressNameIndexData.AddressNameIndexData.Builder.class);
          internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_AddressNameIndexDataAtom_descriptor,
              new java.lang.String[] { "Name", "NameEn", "Type", "ShiftToIndex", "ShiftToCityIndex", },
              net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.class,
              net.osmand.binary.OsmandOdb.AddressNameIndexDataAtom.Builder.class);
          internal_static_OsmAnd_OBF_CityIndex_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_OsmAnd_OBF_CityIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_CityIndex_descriptor,
              new java.lang.String[] { "CityType", "Name", "NameEn", "AttributeTagIds", "AttributeValues", "Id", "X", "Y", "ShiftToCityBlockIndex", },
              net.osmand.binary.OsmandOdb.CityIndex.class,
              net.osmand.binary.OsmandOdb.CityIndex.Builder.class);
          internal_static_OsmAnd_OBF_CityBlockIndex_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_OsmAnd_OBF_CityBlockIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_CityBlockIndex_descriptor,
              new java.lang.String[] { "ShiftToCityIndex", "Buildings", "Streets", },
              net.osmand.binary.OsmandOdb.CityBlockIndex.class,
              net.osmand.binary.OsmandOdb.CityBlockIndex.Builder.class);
          internal_static_OsmAnd_OBF_StreetIndex_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_OsmAnd_OBF_StreetIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_StreetIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "AttributeTagIds", "AttributeValues", "X", "Y", "Id", "Buildings", "Intersections", },
              net.osmand.binary.OsmandOdb.StreetIndex.class,
              net.osmand.binary.OsmandOdb.StreetIndex.Builder.class);
          internal_static_OsmAnd_OBF_StreetIntersection_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_OsmAnd_OBF_StreetIntersection_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_StreetIntersection_descriptor,
              new java.lang.String[] { "Name", "NameEn", "AttributeTagIds", "AttributeValues", "IntersectedX", "IntersectedY", },
              net.osmand.binary.OsmandOdb.StreetIntersection.class,
              net.osmand.binary.OsmandOdb.StreetIntersection.Builder.class);
          internal_static_OsmAnd_OBF_BuildingIndex_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_OsmAnd_OBF_BuildingIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_BuildingIndex_descriptor,
              new java.lang.String[] { "Name", "NameEn", "AttributeTagIds", "AttributeValues", "Name2", "NameEn2", "AttributeTagIds2", "AttributeValues2", "Interpolation", "X", "Y", "X2", "Y2", "Id", "Postcode", },
              net.osmand.binary.OsmandOdb.BuildingIndex.class,
              net.osmand.binary.OsmandOdb.BuildingIndex.Builder.class);
          internal_static_OsmAnd_OBF_TransportRoutes_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_OsmAnd_OBF_TransportRoutes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_TransportRoutes_descriptor,
              new java.lang.String[] { "Routes", },
              net.osmand.binary.OsmandOdb.TransportRoutes.class,
              net.osmand.binary.OsmandOdb.TransportRoutes.Builder.class);
          internal_static_OsmAnd_OBF_TransportRoute_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_OsmAnd_OBF_TransportRoute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_TransportRoute_descriptor,
              new java.lang.String[] { "Id", "Type", "Operator", "Ref", "Name", "NameEn", "Distance", "DirectStops", "ReverseStops", },
              net.osmand.binary.OsmandOdb.TransportRoute.class,
              net.osmand.binary.OsmandOdb.TransportRoute.Builder.class);
          internal_static_OsmAnd_OBF_TransportRouteStop_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_OsmAnd_OBF_TransportRouteStop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_TransportRouteStop_descriptor,
              new java.lang.String[] { "Id", "Dx", "Dy", "Name", "NameEn", },
              net.osmand.binary.OsmandOdb.TransportRouteStop.class,
              net.osmand.binary.OsmandOdb.TransportRouteStop.Builder.class);
          internal_static_OsmAnd_OBF_TransportStop_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_OsmAnd_OBF_TransportStop_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_TransportStop_descriptor,
              new java.lang.String[] { "Dx", "Dy", "Id", "Name", "NameEn", "Routes", },
              net.osmand.binary.OsmandOdb.TransportStop.class,
              net.osmand.binary.OsmandOdb.TransportStop.Builder.class);
          internal_static_OsmAnd_OBF_TransportStopsTree_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_OsmAnd_OBF_TransportStopsTree_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_TransportStopsTree_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "Subtrees", "Leafs", "BaseId", },
              net.osmand.binary.OsmandOdb.TransportStopsTree.class,
              net.osmand.binary.OsmandOdb.TransportStopsTree.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndTransportIndex_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_OsmAnd_OBF_OsmAndTransportIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndTransportIndex_descriptor,
              new java.lang.String[] { "Name", "Routes", "Stops", "StringTable", },
              net.osmand.binary.OsmandOdb.OsmAndTransportIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndTransportIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiIndex_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_OsmAnd_OBF_OsmAndPoiIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiIndex_descriptor,
              new java.lang.String[] { "Name", "Boundaries", "CategoriesTable", "NameIndex", "SubtypesTable", "Boxes", "PoiData", },
              net.osmand.binary.OsmandOdb.OsmAndPoiIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor,
              new java.lang.String[] { "Table", "Data", },
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_descriptor =
            internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_descriptor.getNestedTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiNameIndex_OsmAndPoiNameIndexData_descriptor,
              new java.lang.String[] { "Atoms", },
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndex.OsmAndPoiNameIndexData.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiNameIndexDataAtom_descriptor,
              new java.lang.String[] { "Zoom", "X", "Y", "ShiftTo", },
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiNameIndexDataAtom.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndCategoryTable_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_OsmAnd_OBF_OsmAndCategoryTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndCategoryTable_descriptor,
              new java.lang.String[] { "Category", "Subcategories", },
              net.osmand.binary.OsmandOdb.OsmAndCategoryTable.class,
              net.osmand.binary.OsmandOdb.OsmAndCategoryTable.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndSubtypesTable_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_OsmAnd_OBF_OsmAndSubtypesTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndSubtypesTable_descriptor,
              new java.lang.String[] { "Subtypes", },
              net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.class,
              net.osmand.binary.OsmandOdb.OsmAndSubtypesTable.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiSubtype_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_OsmAnd_OBF_OsmAndPoiSubtype_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiSubtype_descriptor,
              new java.lang.String[] { "Name", "Tagname", "IsText", "Frequency", "SubtypeValuesSize", "SubtypeValue", },
              net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiSubtype.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiBox_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_OsmAnd_OBF_OsmAndPoiBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiBox_descriptor,
              new java.lang.String[] { "Zoom", "Left", "Top", "Categories", "SubBoxes", "ShiftToData", },
              net.osmand.binary.OsmandOdb.OsmAndPoiBox.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiBox.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiCategories_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_OsmAnd_OBF_OsmAndPoiCategories_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiCategories_descriptor,
              new java.lang.String[] { "Categories", "Subcategories", },
              net.osmand.binary.OsmandOdb.OsmAndPoiCategories.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiCategories.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiBoxData_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_OsmAnd_OBF_OsmAndPoiBoxData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiBoxData_descriptor,
              new java.lang.String[] { "Zoom", "X", "Y", "PoiData", },
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxData.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndPoiBoxDataAtom_descriptor,
              new java.lang.String[] { "Dx", "Dy", "Categories", "Subcategories", "Name", "NameEn", "Id", "OpeningHours", "Site", "Phone", "Note", "TextCategories", "TextValues", },
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.class,
              net.osmand.binary.OsmandOdb.OsmAndPoiBoxDataAtom.Builder.class);
          internal_static_OsmAnd_OBF_IdTable_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_OsmAnd_OBF_IdTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_IdTable_descriptor,
              new java.lang.String[] { "RouteId", },
              net.osmand.binary.OsmandOdb.IdTable.class,
              net.osmand.binary.OsmandOdb.IdTable.Builder.class);
          internal_static_OsmAnd_OBF_RestrictionData_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_OsmAnd_OBF_RestrictionData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_RestrictionData_descriptor,
              new java.lang.String[] { "Type", "From", "To", "Via", },
              net.osmand.binary.OsmandOdb.RestrictionData.class,
              net.osmand.binary.OsmandOdb.RestrictionData.Builder.class);
          internal_static_OsmAnd_OBF_RouteData_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_OsmAnd_OBF_RouteData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_RouteData_descriptor,
              new java.lang.String[] { "Points", "PointTypes", "Types", "RouteId", "StringNames", },
              net.osmand.binary.OsmandOdb.RouteData.class,
              net.osmand.binary.OsmandOdb.RouteData.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor,
              new java.lang.String[] { "Name", "Rules", "RootBoxes", "BasemapBoxes", "Blocks", },
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.class,
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_descriptor =
            internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor.getNestedTypes().get(0);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteEncodingRule_descriptor,
              new java.lang.String[] { "Tag", "Value", "Id", },
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.class,
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteEncodingRule.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_descriptor =
            internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor.getNestedTypes().get(1);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBox_descriptor,
              new java.lang.String[] { "Left", "Right", "Top", "Bottom", "ShiftToData", "Boxes", },
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.class,
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBox.Builder.class);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_descriptor =
            internal_static_OsmAnd_OBF_OsmAndRoutingIndex_descriptor.getNestedTypes().get(2);
          internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OsmAnd_OBF_OsmAndRoutingIndex_RouteDataBlock_descriptor,
              new java.lang.String[] { "IdTable", "DataObjects", "Restrictions", "StringTable", },
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.class,
              net.osmand.binary.OsmandOdb.OsmAndRoutingIndex.RouteDataBlock.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
