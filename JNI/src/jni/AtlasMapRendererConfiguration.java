/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class AtlasMapRendererConfiguration extends MapRendererConfiguration {
  private long swigCPtr;
  private boolean swigCMemOwnDerived;

  protected AtlasMapRendererConfiguration(long cPtr, boolean cMemoryOwn) {
    super(OsmAndCoreJNI.AtlasMapRendererConfiguration_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AtlasMapRendererConfiguration obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        OsmAndCoreJNI.delete_AtlasMapRendererConfiguration(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public AtlasMapRendererConfiguration() {
    this(OsmAndCoreJNI.new_AtlasMapRendererConfiguration(), true);
  }

  public void setReferenceTileSizeOnScreenInPixels(long value) {
    OsmAndCoreJNI.AtlasMapRendererConfiguration_referenceTileSizeOnScreenInPixels_set(swigCPtr, this, value);
  }

  public long getReferenceTileSizeOnScreenInPixels() {
    return OsmAndCoreJNI.AtlasMapRendererConfiguration_referenceTileSizeOnScreenInPixels_get(swigCPtr, this);
  }

  public void copyTo(MapRendererConfiguration other) {
    OsmAndCoreJNI.AtlasMapRendererConfiguration_copyTo(swigCPtr, this, getCPtr(other), other);
  }

  public MapRendererConfiguration createCopy() {
    long cPtr = OsmAndCoreJNI.AtlasMapRendererConfiguration_createCopy(swigCPtr, this);
    return (cPtr == 0) ? null : new MapRendererConfiguration(cPtr, true);
  }

  static public class Casts {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected Casts(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Casts obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_AtlasMapRendererConfiguration_Casts(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public static AtlasMapRendererConfiguration upcastFrom(MapRendererConfiguration input) {
      long cPtr = OsmAndCoreJNI.AtlasMapRendererConfiguration_Casts_upcastFrom(MapRendererConfiguration.getCPtr(input), input);
      return (cPtr == 0) ? null : new AtlasMapRendererConfiguration(cPtr, true);
    }
  
    public static MapRendererConfiguration downcastTo_MapRendererConfiguration(AtlasMapRendererConfiguration input) {
      long cPtr = OsmAndCoreJNI.AtlasMapRendererConfiguration_Casts_downcastTo_MapRendererConfiguration(AtlasMapRendererConfiguration.getCPtr(input), input);
      return (cPtr == 0) ? null : new MapRendererConfiguration(cPtr, true);
    }
  
    public Casts() {
      this(OsmAndCoreJNI.new_AtlasMapRendererConfiguration_Casts(), true);
    }
  
  }

}
