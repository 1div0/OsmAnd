/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class MapPresentationEnvironment {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected MapPresentationEnvironment(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MapPresentationEnvironment obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_MapPresentationEnvironment(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapPresentationEnvironment(ResolvedMapStyle resolvedStyle, float displayDensityFactor, String localeLanguageId, MapPresentationEnvironment.LanguagePreference languagePreference, ICoreResourcesProvider externalResourcesProvider) {
    this(OsmAndCoreJNI.new_MapPresentationEnvironment__SWIG_0(ResolvedMapStyle.getCPtr(resolvedStyle), resolvedStyle, displayDensityFactor, localeLanguageId, languagePreference.swigValue(), ICoreResourcesProvider.getCPtr(externalResourcesProvider), externalResourcesProvider), true);
  }

  public MapPresentationEnvironment(ResolvedMapStyle resolvedStyle, float displayDensityFactor, String localeLanguageId, MapPresentationEnvironment.LanguagePreference languagePreference) {
    this(OsmAndCoreJNI.new_MapPresentationEnvironment__SWIG_1(ResolvedMapStyle.getCPtr(resolvedStyle), resolvedStyle, displayDensityFactor, localeLanguageId, languagePreference.swigValue()), true);
  }

  public MapPresentationEnvironment(ResolvedMapStyle resolvedStyle, float displayDensityFactor, String localeLanguageId) {
    this(OsmAndCoreJNI.new_MapPresentationEnvironment__SWIG_2(ResolvedMapStyle.getCPtr(resolvedStyle), resolvedStyle, displayDensityFactor, localeLanguageId), true);
  }

  public MapPresentationEnvironment(ResolvedMapStyle resolvedStyle, float displayDensityFactor) {
    this(OsmAndCoreJNI.new_MapPresentationEnvironment__SWIG_3(ResolvedMapStyle.getCPtr(resolvedStyle), resolvedStyle, displayDensityFactor), true);
  }

  public MapPresentationEnvironment(ResolvedMapStyle resolvedStyle) {
    this(OsmAndCoreJNI.new_MapPresentationEnvironment__SWIG_4(ResolvedMapStyle.getCPtr(resolvedStyle), resolvedStyle), true);
  }

  public MapStyleBuiltinValueDefinitions getStyleBuiltinValueDefs() {
    long cPtr = OsmAndCoreJNI.MapPresentationEnvironment_styleBuiltinValueDefs_get(swigCPtr, this);
    return (cPtr == 0) ? null : new MapStyleBuiltinValueDefinitions(cPtr, true);
  }

  public ResolvedMapStyle getResolvedStyle() {
    long cPtr = OsmAndCoreJNI.MapPresentationEnvironment_resolvedStyle_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ResolvedMapStyle(cPtr, true);
  }

  public float getDisplayDensityFactor() {
    return OsmAndCoreJNI.MapPresentationEnvironment_displayDensityFactor_get(swigCPtr, this);
  }

  public String getLocaleLanguageId() {
    return OsmAndCoreJNI.MapPresentationEnvironment_localeLanguageId_get(swigCPtr, this);
  }

  public MapPresentationEnvironment.LanguagePreference getLanguagePreference() {
    return MapPresentationEnvironment.LanguagePreference.swigToEnum(OsmAndCoreJNI.MapPresentationEnvironment_languagePreference_get(swigCPtr, this));
  }

  public ICoreResourcesProvider getExternalResourcesProvider() {
    long cPtr = OsmAndCoreJNI.MapPresentationEnvironment_externalResourcesProvider_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ICoreResourcesProvider(cPtr, true);
  }

  public SWIGTYPE_p_std__shared_ptrT_OsmAnd__ObfMapSectionInfo_const_t getDummyMapSection() {
    return new SWIGTYPE_p_std__shared_ptrT_OsmAnd__ObfMapSectionInfo_const_t(OsmAndCoreJNI.MapPresentationEnvironment_dummyMapSection_get(swigCPtr, this), false);
  }

  public SWIGTYPE_p_QHashT_int_OsmAnd__MapStyleConstantValue_t getSettings() {
    return new SWIGTYPE_p_QHashT_int_OsmAnd__MapStyleConstantValue_t(OsmAndCoreJNI.MapPresentationEnvironment_getSettings(swigCPtr, this), true);
  }

  public void setSettings(SWIGTYPE_p_QHashT_int_OsmAnd__MapStyleConstantValue_t newSettings) {
    OsmAndCoreJNI.MapPresentationEnvironment_setSettings__SWIG_0(swigCPtr, this, SWIGTYPE_p_QHashT_int_OsmAnd__MapStyleConstantValue_t.getCPtr(newSettings));
  }

  public void setSettings(SWIGTYPE_p_QHashT_QString_QString_t newSettings) {
    OsmAndCoreJNI.MapPresentationEnvironment_setSettings__SWIG_1(swigCPtr, this, SWIGTYPE_p_QHashT_QString_QString_t.getCPtr(newSettings));
  }

  public void applyTo(SWIGTYPE_p_OsmAnd__MapStyleEvaluator evaluator) {
    OsmAndCoreJNI.MapPresentationEnvironment_applyTo(swigCPtr, this, SWIGTYPE_p_OsmAnd__MapStyleEvaluator.getCPtr(evaluator));
  }

  public boolean obtainShaderBitmap(String name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t outShaderBitmap) {
    return OsmAndCoreJNI.MapPresentationEnvironment_obtainShaderBitmap(swigCPtr, this, name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t.getCPtr(outShaderBitmap));
  }

  public boolean obtainMapIcon(String name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t outIcon) {
    return OsmAndCoreJNI.MapPresentationEnvironment_obtainMapIcon(swigCPtr, this, name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t.getCPtr(outIcon));
  }

  public boolean obtainTextShield(String name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t outTextShield) {
    return OsmAndCoreJNI.MapPresentationEnvironment_obtainTextShield(swigCPtr, this, name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t.getCPtr(outTextShield));
  }

  public boolean obtainIconShield(String name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t outIconShield) {
    return OsmAndCoreJNI.MapPresentationEnvironment_obtainIconShield(swigCPtr, this, name, SWIGTYPE_p_std__shared_ptrT_SkBitmap_const_t.getCPtr(outIconShield));
  }

  public ColorARGB getDefaultBackgroundColor(ZoomLevel zoom) {
    return new ColorARGB(OsmAndCoreJNI.MapPresentationEnvironment_getDefaultBackgroundColor(swigCPtr, this, zoom.swigValue()), true);
  }

  public void obtainShadowRenderingOptions(ZoomLevel zoom, SWIGTYPE_p_int mode, ColorARGB color) {
    OsmAndCoreJNI.MapPresentationEnvironment_obtainShadowRenderingOptions(swigCPtr, this, zoom.swigValue(), SWIGTYPE_p_int.getCPtr(mode), ColorARGB.getCPtr(color), color);
  }

  public double getPolygonAreaMinimalThreshold(ZoomLevel zoom) {
    return OsmAndCoreJNI.MapPresentationEnvironment_getPolygonAreaMinimalThreshold(swigCPtr, this, zoom.swigValue());
  }

  public long getRoadDensityZoomTile(ZoomLevel zoom) {
    return OsmAndCoreJNI.MapPresentationEnvironment_getRoadDensityZoomTile(swigCPtr, this, zoom.swigValue());
  }

  public long getRoadsDensityLimitPerTile(ZoomLevel zoom) {
    return OsmAndCoreJNI.MapPresentationEnvironment_getRoadsDensityLimitPerTile(swigCPtr, this, zoom.swigValue());
  }

  public enum LanguagePreference {
    NativeOnly,
    LocalizedOrNative,
    NativeAndLocalized,
    NativeAndLocalizedOrTransliterated,
    LocalizedAndNative,
    LocalizedOrTransliteratedAndNative;

    public final int swigValue() {
      return swigValue;
    }

    public static LanguagePreference swigToEnum(int swigValue) {
      LanguagePreference[] swigValues = LanguagePreference.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (LanguagePreference swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + LanguagePreference.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private LanguagePreference() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private LanguagePreference(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private LanguagePreference(LanguagePreference swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

  public final static int DefaultShadowLevelMin = OsmAndCoreJNI.MapPresentationEnvironment_DefaultShadowLevelMin_get();
  public final static int DefaultShadowLevelMax = OsmAndCoreJNI.MapPresentationEnvironment_DefaultShadowLevelMax_get();

}
