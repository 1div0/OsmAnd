/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class MapRendererState {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected MapRendererState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MapRendererState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_MapRendererState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapRendererState() {
    this(OsmAndCoreJNI.new_MapRendererState(), true);
  }

  public void setRasterLayerProviders(SWIGTYPE_p_std__arrayT_std__shared_ptrT_OsmAnd__IMapRasterBitmapTileProvider_t_OsmAnd__RasterMapLayersCount_t value) {
    OsmAndCoreJNI.MapRendererState_rasterLayerProviders_set(swigCPtr, this, SWIGTYPE_p_std__arrayT_std__shared_ptrT_OsmAnd__IMapRasterBitmapTileProvider_t_OsmAnd__RasterMapLayersCount_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__arrayT_std__shared_ptrT_OsmAnd__IMapRasterBitmapTileProvider_t_OsmAnd__RasterMapLayersCount_t getRasterLayerProviders() {
    return new SWIGTYPE_p_std__arrayT_std__shared_ptrT_OsmAnd__IMapRasterBitmapTileProvider_t_OsmAnd__RasterMapLayersCount_t(OsmAndCoreJNI.MapRendererState_rasterLayerProviders_get(swigCPtr, this), true);
  }

  public void setRasterLayerOpacity(SWIGTYPE_p_std__arrayT_float_OsmAnd__RasterMapLayersCount_t value) {
    OsmAndCoreJNI.MapRendererState_rasterLayerOpacity_set(swigCPtr, this, SWIGTYPE_p_std__arrayT_float_OsmAnd__RasterMapLayersCount_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__arrayT_float_OsmAnd__RasterMapLayersCount_t getRasterLayerOpacity() {
    return new SWIGTYPE_p_std__arrayT_float_OsmAnd__RasterMapLayersCount_t(OsmAndCoreJNI.MapRendererState_rasterLayerOpacity_get(swigCPtr, this), true);
  }

  public void setElevationDataProvider(IMapElevationDataProvider value) {
    OsmAndCoreJNI.MapRendererState_elevationDataProvider_set(swigCPtr, this, IMapElevationDataProvider.getCPtr(value), value);
  }

  public IMapElevationDataProvider getElevationDataProvider() {
    long cPtr = OsmAndCoreJNI.MapRendererState_elevationDataProvider_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IMapElevationDataProvider(cPtr, true);
  }

  public void setElevationDataScaleFactor(float value) {
    OsmAndCoreJNI.MapRendererState_elevationDataScaleFactor_set(swigCPtr, this, value);
  }

  public float getElevationDataScaleFactor() {
    return OsmAndCoreJNI.MapRendererState_elevationDataScaleFactor_get(swigCPtr, this);
  }

  public void setSymbolProviders(SWIGTYPE_p_QSetT_std__shared_ptrT_OsmAnd__IMapDataProvider_t_t value) {
    OsmAndCoreJNI.MapRendererState_symbolProviders_set(swigCPtr, this, SWIGTYPE_p_QSetT_std__shared_ptrT_OsmAnd__IMapDataProvider_t_t.getCPtr(value));
  }

  public SWIGTYPE_p_QSetT_std__shared_ptrT_OsmAnd__IMapDataProvider_t_t getSymbolProviders() {
    long cPtr = OsmAndCoreJNI.MapRendererState_symbolProviders_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_QSetT_std__shared_ptrT_OsmAnd__IMapDataProvider_t_t(cPtr, false);
  }

  public void setWindowSize(PointI value) {
    OsmAndCoreJNI.MapRendererState_windowSize_set(swigCPtr, this, PointI.getCPtr(value), value);
  }

  public PointI getWindowSize() {
    long cPtr = OsmAndCoreJNI.MapRendererState_windowSize_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PointI(cPtr, false);
  }

  public void setViewport(AreaI value) {
    OsmAndCoreJNI.MapRendererState_viewport_set(swigCPtr, this, AreaI.getCPtr(value), value);
  }

  public AreaI getViewport() {
    long cPtr = OsmAndCoreJNI.MapRendererState_viewport_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AreaI(cPtr, false);
  }

  public void setFieldOfView(float value) {
    OsmAndCoreJNI.MapRendererState_fieldOfView_set(swigCPtr, this, value);
  }

  public float getFieldOfView() {
    return OsmAndCoreJNI.MapRendererState_fieldOfView_get(swigCPtr, this);
  }

  public void setSkyColor(FColorRGB value) {
    OsmAndCoreJNI.MapRendererState_skyColor_set(swigCPtr, this, FColorRGB.getCPtr(value), value);
  }

  public FColorRGB getSkyColor() {
    long cPtr = OsmAndCoreJNI.MapRendererState_skyColor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FColorRGB(cPtr, false);
  }

  public void setFogColor(FColorRGB value) {
    OsmAndCoreJNI.MapRendererState_fogColor_set(swigCPtr, this, FColorRGB.getCPtr(value), value);
  }

  public FColorRGB getFogColor() {
    long cPtr = OsmAndCoreJNI.MapRendererState_fogColor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FColorRGB(cPtr, false);
  }

  public void setFogDistance(float value) {
    OsmAndCoreJNI.MapRendererState_fogDistance_set(swigCPtr, this, value);
  }

  public float getFogDistance() {
    return OsmAndCoreJNI.MapRendererState_fogDistance_get(swigCPtr, this);
  }

  public void setFogOriginFactor(float value) {
    OsmAndCoreJNI.MapRendererState_fogOriginFactor_set(swigCPtr, this, value);
  }

  public float getFogOriginFactor() {
    return OsmAndCoreJNI.MapRendererState_fogOriginFactor_get(swigCPtr, this);
  }

  public void setFogHeightOriginFactor(float value) {
    OsmAndCoreJNI.MapRendererState_fogHeightOriginFactor_set(swigCPtr, this, value);
  }

  public float getFogHeightOriginFactor() {
    return OsmAndCoreJNI.MapRendererState_fogHeightOriginFactor_get(swigCPtr, this);
  }

  public void setFogDensity(float value) {
    OsmAndCoreJNI.MapRendererState_fogDensity_set(swigCPtr, this, value);
  }

  public float getFogDensity() {
    return OsmAndCoreJNI.MapRendererState_fogDensity_get(swigCPtr, this);
  }

  public void setAzimuth(float value) {
    OsmAndCoreJNI.MapRendererState_azimuth_set(swigCPtr, this, value);
  }

  public float getAzimuth() {
    return OsmAndCoreJNI.MapRendererState_azimuth_get(swigCPtr, this);
  }

  public void setElevationAngle(float value) {
    OsmAndCoreJNI.MapRendererState_elevationAngle_set(swigCPtr, this, value);
  }

  public float getElevationAngle() {
    return OsmAndCoreJNI.MapRendererState_elevationAngle_get(swigCPtr, this);
  }

  public void setTarget31(PointI value) {
    OsmAndCoreJNI.MapRendererState_target31_set(swigCPtr, this, PointI.getCPtr(value), value);
  }

  public PointI getTarget31() {
    long cPtr = OsmAndCoreJNI.MapRendererState_target31_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PointI(cPtr, false);
  }

  public void setRequestedZoom(float value) {
    OsmAndCoreJNI.MapRendererState_requestedZoom_set(swigCPtr, this, value);
  }

  public float getRequestedZoom() {
    return OsmAndCoreJNI.MapRendererState_requestedZoom_get(swigCPtr, this);
  }

  public void setZoomBase(ZoomLevel value) {
    OsmAndCoreJNI.MapRendererState_zoomBase_set(swigCPtr, this, value.swigValue());
  }

  public ZoomLevel getZoomBase() {
    return ZoomLevel.swigToEnum(OsmAndCoreJNI.MapRendererState_zoomBase_get(swigCPtr, this));
  }

  public void setZoomFraction(float value) {
    OsmAndCoreJNI.MapRendererState_zoomFraction_set(swigCPtr, this, value);
  }

  public float getZoomFraction() {
    return OsmAndCoreJNI.MapRendererState_zoomFraction_get(swigCPtr, this);
  }

}
