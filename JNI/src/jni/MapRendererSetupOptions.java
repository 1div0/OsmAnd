/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class MapRendererSetupOptions {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected MapRendererSetupOptions(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MapRendererSetupOptions obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_MapRendererSetupOptions(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapRendererSetupOptions() {
    this(OsmAndCoreJNI.new_MapRendererSetupOptions(), true);
  }

  static public class IGpuWorkerThreadPrologue {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected IGpuWorkerThreadPrologue(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(IGpuWorkerThreadPrologue obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_MapRendererSetupOptions_IGpuWorkerThreadPrologue(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadPrologue_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadPrologue_change_ownership(this, swigCPtr, true);
    }
  
    public IGpuWorkerThreadPrologue() {
      this(OsmAndCoreJNI.new_MapRendererSetupOptions_IGpuWorkerThreadPrologue(), true);
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadPrologue_director_connect(this, swigCPtr, swigCMemOwn, true);
    }
  
    public void method(IMapRenderer mapRenderer) {
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadPrologue_method(swigCPtr, this, IMapRenderer.getCPtr(mapRenderer), mapRenderer);
    }
  
    public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue getBinding() {
      return new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue(OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadPrologue_getBinding(swigCPtr, this), true);
    }
  
  }

  static public class IGpuWorkerThreadEpilogue {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected IGpuWorkerThreadEpilogue(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(IGpuWorkerThreadEpilogue obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_MapRendererSetupOptions_IGpuWorkerThreadEpilogue(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadEpilogue_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadEpilogue_change_ownership(this, swigCPtr, true);
    }
  
    public IGpuWorkerThreadEpilogue() {
      this(OsmAndCoreJNI.new_MapRendererSetupOptions_IGpuWorkerThreadEpilogue(), true);
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadEpilogue_director_connect(this, swigCPtr, swigCMemOwn, true);
    }
  
    public void method(IMapRenderer mapRenderer) {
      OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadEpilogue_method(swigCPtr, this, IMapRenderer.getCPtr(mapRenderer), mapRenderer);
    }
  
    public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue getBinding() {
      return new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue(OsmAndCoreJNI.MapRendererSetupOptions_IGpuWorkerThreadEpilogue_getBinding(swigCPtr, this), true);
    }
  
  }

  public void setGpuWorkerThreadEnabled(boolean value) {
    OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadEnabled_set(swigCPtr, this, value);
  }

  public boolean getGpuWorkerThreadEnabled() {
    return OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadEnabled_get(swigCPtr, this);
  }

  public void setGpuWorkerThreadPrologue(SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue value) {
    OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadPrologue_set(swigCPtr, this, SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue.getCPtr(value));
  }

  public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue getGpuWorkerThreadPrologue() {
    long cPtr = OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadPrologue_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadPrologue(cPtr, false);
  }

  public void setGpuWorkerThreadEpilogue(SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue value) {
    OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadEpilogue_set(swigCPtr, this, SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue.getCPtr(value));
  }

  public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue getGpuWorkerThreadEpilogue() {
    long cPtr = OsmAndCoreJNI.MapRendererSetupOptions_gpuWorkerThreadEpilogue_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__GpuWorkerThreadEpilogue(cPtr, false);
  }

  static public class IFrameUpdateRequestCallback {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected IFrameUpdateRequestCallback(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(IFrameUpdateRequestCallback obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_MapRendererSetupOptions_IFrameUpdateRequestCallback(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    protected void swigDirectorDisconnect() {
      swigCMemOwn = false;
      delete();
    }
  
    public void swigReleaseOwnership() {
      swigCMemOwn = false;
      OsmAndCoreJNI.MapRendererSetupOptions_IFrameUpdateRequestCallback_change_ownership(this, swigCPtr, false);
    }
  
    public void swigTakeOwnership() {
      swigCMemOwn = true;
      OsmAndCoreJNI.MapRendererSetupOptions_IFrameUpdateRequestCallback_change_ownership(this, swigCPtr, true);
    }
  
    public IFrameUpdateRequestCallback() {
      this(OsmAndCoreJNI.new_MapRendererSetupOptions_IFrameUpdateRequestCallback(), true);
      OsmAndCoreJNI.MapRendererSetupOptions_IFrameUpdateRequestCallback_director_connect(this, swigCPtr, swigCMemOwn, true);
    }
  
    public void method(IMapRenderer mapRenderer) {
      OsmAndCoreJNI.MapRendererSetupOptions_IFrameUpdateRequestCallback_method(swigCPtr, this, IMapRenderer.getCPtr(mapRenderer), mapRenderer);
    }
  
    public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback getBinding() {
      return new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback(OsmAndCoreJNI.MapRendererSetupOptions_IFrameUpdateRequestCallback_getBinding(swigCPtr, this), true);
    }
  
  }

  public void setFrameUpdateRequestCallback(SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback value) {
    OsmAndCoreJNI.MapRendererSetupOptions_frameUpdateRequestCallback_set(swigCPtr, this, SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback.getCPtr(value));
  }

  public SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback getFrameUpdateRequestCallback() {
    long cPtr = OsmAndCoreJNI.MapRendererSetupOptions_frameUpdateRequestCallback_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_OsmAnd__MapRendererSetupOptions__FrameUpdateRequestCallback(cPtr, false);
  }

}
