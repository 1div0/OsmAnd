/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class MapRendererConfiguration {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected MapRendererConfiguration(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MapRendererConfiguration obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_MapRendererConfiguration(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MapRendererConfiguration() {
    this(OsmAndCoreJNI.new_MapRendererConfiguration(), true);
  }

  public void setTexturesFilteringQuality(TextureFilteringQuality value) {
    OsmAndCoreJNI.MapRendererConfiguration_texturesFilteringQuality_set(swigCPtr, this, value.swigValue());
  }

  public TextureFilteringQuality getTexturesFilteringQuality() {
    return TextureFilteringQuality.swigToEnum(OsmAndCoreJNI.MapRendererConfiguration_texturesFilteringQuality_get(swigCPtr, this));
  }

  public void setLimitTextureColorDepthBy16bits(boolean value) {
    OsmAndCoreJNI.MapRendererConfiguration_limitTextureColorDepthBy16bits_set(swigCPtr, this, value);
  }

  public boolean getLimitTextureColorDepthBy16bits() {
    return OsmAndCoreJNI.MapRendererConfiguration_limitTextureColorDepthBy16bits_get(swigCPtr, this);
  }

  public void setHeixelsPerTileSide(long value) {
    OsmAndCoreJNI.MapRendererConfiguration_heixelsPerTileSide_set(swigCPtr, this, value);
  }

  public long getHeixelsPerTileSide() {
    return OsmAndCoreJNI.MapRendererConfiguration_heixelsPerTileSide_get(swigCPtr, this);
  }

  public void setPaletteTexturesAllowed(boolean value) {
    OsmAndCoreJNI.MapRendererConfiguration_paletteTexturesAllowed_set(swigCPtr, this, value);
  }

  public boolean getPaletteTexturesAllowed() {
    return OsmAndCoreJNI.MapRendererConfiguration_paletteTexturesAllowed_get(swigCPtr, this);
  }

  public void copyTo(MapRendererConfiguration other) {
    OsmAndCoreJNI.MapRendererConfiguration_copyTo(swigCPtr, this, MapRendererConfiguration.getCPtr(other), other);
  }

  public MapRendererConfiguration createCopy() {
    long cPtr = OsmAndCoreJNI.MapRendererConfiguration_createCopy(swigCPtr, this);
    return (cPtr == 0) ? null : new MapRendererConfiguration(cPtr, true);
  }

}
