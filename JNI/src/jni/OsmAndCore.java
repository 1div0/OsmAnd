/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package jni;

public class OsmAndCore implements OsmAndCoreConstants {
  public static boolean InitializeCore(ICoreResourcesProvider coreResourcesProvider) {
    return OsmAndCoreJNI.InitializeCore(ICoreResourcesProvider.getCPtr(coreResourcesProvider), coreResourcesProvider);
  }

  public static ICoreResourcesProvider getCoreResourcesProvider() {
    long cPtr = OsmAndCoreJNI.getCoreResourcesProvider();
    return (cPtr == 0) ? null : new ICoreResourcesProvider(cPtr, true);
  }

  public static void ReleaseCore() {
    OsmAndCoreJNI.ReleaseCore();
  }

  public static int crossProductSign(PointF a, PointF b, PointF p) {
    return OsmAndCoreJNI.crossProductSign__SWIG_0(PointF.getCPtr(a), a, PointF.getCPtr(b), b, PointF.getCPtr(p), p);
  }

  public static int crossProductSign(PointD a, PointD b, PointD p) {
    return OsmAndCoreJNI.crossProductSign__SWIG_1(PointD.getCPtr(a), a, PointD.getCPtr(b), b, PointD.getCPtr(p), p);
  }

  public static int crossProductSign(PointI a, PointI b, PointI p) {
    return OsmAndCoreJNI.crossProductSign__SWIG_2(PointI.getCPtr(a), a, PointI.getCPtr(b), b, PointI.getCPtr(p), p);
  }

  public static int crossProductSign(SWIGTYPE_p_OsmAnd__PointT_long_long_t a, SWIGTYPE_p_OsmAnd__PointT_long_long_t b, SWIGTYPE_p_OsmAnd__PointT_long_long_t p) {
    return OsmAndCoreJNI.crossProductSign__SWIG_3(SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(a), SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(b), SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(p));
  }

  public static boolean testLineLineIntersection(PointI a0, PointI a1, PointI b0, PointI b1) {
    return OsmAndCoreJNI.testLineLineIntersection__SWIG_0(PointI.getCPtr(a0), a0, PointI.getCPtr(a1), a1, PointI.getCPtr(b0), b0, PointI.getCPtr(b1), b1);
  }

  public static boolean testLineLineIntersection(PointF a0, PointF a1, PointF b0, PointF b1) {
    return OsmAndCoreJNI.testLineLineIntersection__SWIG_1(PointF.getCPtr(a0), a0, PointF.getCPtr(a1), a1, PointF.getCPtr(b0), b0, PointF.getCPtr(b1), b1);
  }

  public static boolean testLineLineIntersection(PointD a0, PointD a1, PointD b0, PointD b1) {
    return OsmAndCoreJNI.testLineLineIntersection__SWIG_2(PointD.getCPtr(a0), a0, PointD.getCPtr(a1), a1, PointD.getCPtr(b0), b0, PointD.getCPtr(b1), b1);
  }

  public static boolean testLineLineIntersection(SWIGTYPE_p_OsmAnd__PointT_long_long_t a0, SWIGTYPE_p_OsmAnd__PointT_long_long_t a1, SWIGTYPE_p_OsmAnd__PointT_long_long_t b0, SWIGTYPE_p_OsmAnd__PointT_long_long_t b1) {
    return OsmAndCoreJNI.testLineLineIntersection__SWIG_3(SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(a0), SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(a1), SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(b0), SWIGTYPE_p_OsmAnd__PointT_long_long_t.getCPtr(b1));
  }

  public static void LogPrintf(LogSeverityLevel level, String format) {
    OsmAndCoreJNI.LogPrintf(level.swigValue(), format);
  }

  public static void LogFlush() {
    OsmAndCoreJNI.LogFlush();
  }

  public static IMapRenderer createMapRenderer(MapRendererClass mapRendererClass) {
    long cPtr = OsmAndCoreJNI.createMapRenderer(mapRendererClass.swigValue());
    return (cPtr == 0) ? null : new IMapRenderer(cPtr, true);
  }

}
