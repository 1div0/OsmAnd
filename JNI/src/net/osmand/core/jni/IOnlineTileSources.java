/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.osmand.core.jni;

public class IOnlineTileSources {
  private long swigCPtr;
  private boolean swigCMemOwn;

  protected IOnlineTileSources(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IOnlineTileSources obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OsmAndCoreJNI.delete_IOnlineTileSources(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class Source {
    private long swigCPtr;
    private boolean swigCMemOwn;
  
    protected Source(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Source obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OsmAndCoreJNI.delete_IOnlineTileSources_Source(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public Source(String name) {
      this(OsmAndCoreJNI.new_IOnlineTileSources_Source(name), true);
    }
  
    public String getName() {
      return OsmAndCoreJNI.IOnlineTileSources_Source_name_get(swigCPtr, this);
    }
  
    public void setUrlPattern(String value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_urlPattern_set(swigCPtr, this, value);
    }
  
    public String getUrlPattern() {
      return OsmAndCoreJNI.IOnlineTileSources_Source_urlPattern_get(swigCPtr, this);
    }
  
    public void setMinZoom(ZoomLevel value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_minZoom_set(swigCPtr, this, value.swigValue());
    }
  
    public ZoomLevel getMinZoom() {
      return ZoomLevel.swigToEnum(OsmAndCoreJNI.IOnlineTileSources_Source_minZoom_get(swigCPtr, this));
    }
  
    public void setMaxZoom(ZoomLevel value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_maxZoom_set(swigCPtr, this, value.swigValue());
    }
  
    public ZoomLevel getMaxZoom() {
      return ZoomLevel.swigToEnum(OsmAndCoreJNI.IOnlineTileSources_Source_maxZoom_get(swigCPtr, this));
    }
  
    public void setMaxConcurrentDownloads(long value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_maxConcurrentDownloads_set(swigCPtr, this, value);
    }
  
    public long getMaxConcurrentDownloads() {
      return OsmAndCoreJNI.IOnlineTileSources_Source_maxConcurrentDownloads_get(swigCPtr, this);
    }
  
    public void setTileSize(long value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_tileSize_set(swigCPtr, this, value);
    }
  
    public long getTileSize() {
      return OsmAndCoreJNI.IOnlineTileSources_Source_tileSize_get(swigCPtr, this);
    }
  
    public void setAlphaChannelData(AlphaChannelData value) {
      OsmAndCoreJNI.IOnlineTileSources_Source_alphaChannelData_set(swigCPtr, this, value.swigValue());
    }
  
    public AlphaChannelData getAlphaChannelData() {
      return AlphaChannelData.swigToEnum(OsmAndCoreJNI.IOnlineTileSources_Source_alphaChannelData_get(swigCPtr, this));
    }
  
  }

  public SWIGTYPE_p_QHashT_QString_std__shared_ptrT_OsmAnd__IOnlineTileSources__Source_const_t_t getCollection() {
    return new SWIGTYPE_p_QHashT_QString_std__shared_ptrT_OsmAnd__IOnlineTileSources__Source_const_t_t(OsmAndCoreJNI.IOnlineTileSources_getCollection(swigCPtr, this), true);
  }

  public IOnlineTileSources.Source getSourceByName(String sourceName) {
    long cPtr = OsmAndCoreJNI.IOnlineTileSources_getSourceByName(swigCPtr, this, sourceName);
    return (cPtr == 0) ? null : new IOnlineTileSources.Source(cPtr, true);
  }

  public OnlineRasterMapTileProvider createProviderFor(String sourceName) {
    long cPtr = OsmAndCoreJNI.IOnlineTileSources_createProviderFor(swigCPtr, this, sourceName);
    return (cPtr == 0) ? null : new OnlineRasterMapTileProvider(cPtr, true);
  }

}
